<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>获取角色对应的权限列表</title>
      <link href="/2020/07/14/get-role-permissions/"/>
      <url>/2020/07/14/get-role-permissions/</url>
      
        <content type="html"><![CDATA[<p>需求描述：</p><p>点击某一个角色，查询出所有的权限列表，并勾选该角色已有的权限</p><p>建表语句：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`m_group_perm`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`group_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`perm_id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">11</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`m_perm`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`k`</span> <span class="built_in">varchar</span>(<span class="number">45</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">6</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><p>查询SQL语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在关联查询前过滤</span></span><br><span class="line"><span class="keyword">select</span> t.*,t1.group_id <span class="keyword">as</span> <span class="keyword">enable</span></span><br><span class="line"><span class="keyword">from</span> m_perm t</span><br><span class="line"><span class="keyword">left</span> <span class="keyword">join</span> m_group_perm t1 <span class="keyword">on</span> t.id=t1.perm_id <span class="keyword">and</span> t1.group_id = <span class="string">'2'</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对关联查询的结果过滤</span></span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> m_perm p <span class="keyword">left</span> <span class="keyword">outer</span> <span class="keyword">join</span> m_group_perm gp <span class="keyword">on</span> p.id = gp.perm_id</span><br><span class="line"><span class="keyword">where</span> gp.group_id = <span class="string">'2'</span>;</span><br></pre></td></tr></table></figure><p>html代码</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">region</span>=<span class="string">"west"</span> <span class="attr">style</span>=<span class="string">"width:230px;"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"grid-group"</span> <span class="attr">class</span>=<span class="string">"easyui-datagrid"</span> <span class="attr">url</span>=<span class="string">"$&#123;CTX&#125;/admin/groupList"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">singleSelect</span>=<span class="string">"true"</span> <span class="attr">rownumbers</span>=<span class="string">"true"</span> <span class="attr">pagination</span>=<span class="string">"false"</span> <span class="attr">fit</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">data-options</span>=<span class="string">"field:'name',width:190"</span>&gt;</span>角色名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">region</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">id</span>=<span class="string">"group-permission"</span> <span class="attr">class</span>=<span class="string">"easyui-datagrid"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">url</span>=<span class="string">"$&#123;CTX&#125;/permission/all-groupid"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">rownumbers</span>=<span class="string">"true"</span> <span class="attr">pagination</span>=<span class="string">"false"</span> <span class="attr">fit</span>=<span class="string">"true"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">thead</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">data-options</span>=<span class="string">"field:'ck',checkbox:true"</span>&gt;</span><span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">data-options</span>=<span class="string">"field:'k',width:220"</span>&gt;</span>权限关键词<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">th</span> <span class="attr">data-options</span>=<span class="string">"field:'name',width:320"</span>&gt;</span>权限名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">thead</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JS代码</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"#grid-group"</span>).datagrid(&#123;</span><br><span class="line">    onSelect:<span class="function"><span class="keyword">function</span>(<span class="params">index, row</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 查询所有的权限列表</span></span><br><span class="line">        <span class="built_in">console</span>.log(row.id);</span><br><span class="line">        $(<span class="string">"#group-permission"</span>).datagrid(<span class="string">"load"</span>,&#123;<span class="attr">groupId</span>:row.id&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">$(<span class="string">"#group-permission"</span>).datagrid(&#123;</span><br><span class="line">    onClickRow:saveGroupPermission,</span><br><span class="line">    onLoadSuccess:<span class="function"><span class="keyword">function</span>(<span class="params">row</span>)</span>&#123;</span><br><span class="line">        <span class="comment">// 勾选已有的权限</span></span><br><span class="line">        <span class="keyword">var</span> rowData = row.rows;</span><br><span class="line">        $.each(rowData,<span class="function"><span class="keyword">function</span>(<span class="params">i,n</span>)</span>&#123;</span><br><span class="line">            <span class="keyword">if</span>(n.enable &gt; <span class="number">0</span>)&#123;</span><br><span class="line">                $(<span class="string">"#group-permission"</span>).datagrid(<span class="string">"selectRow"</span>,i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//点击增加或移除权限</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">saveGroupPermission</span>(<span class="params">index, row</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(row.enable &gt; <span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"remove"</span>);</span><br><span class="line">        permChange(row.id, <span class="literal">false</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"add"</span>);</span><br><span class="line">        permChange(row.id, <span class="literal">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>补充：</p><p><a href="https://blog.csdn.net/hongping626/article/details/10186495" target="_blank" rel="noopener">设置checkbox时默认选中</a></p><p><a href="https://blog.csdn.net/nnn_net/article/details/51898502" target="_blank" rel="noopener">自定义添加列</a></p><p><a href="https://www.cnblogs.com/unidentified/p/8567923.html" target="_blank" rel="noopener">jstl中判断list中是否包含某个值</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> EasyUI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EasyUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给青年的12封信-谈动</title>
      <link href="/2020/07/14/gqnd12fx-activity/"/>
      <url>/2020/07/14/gqnd12fx-activity/</url>
      
        <content type="html"><![CDATA[<h2 id="烦恼的滋味"><a href="#烦恼的滋味" class="headerlink" title="烦恼的滋味"></a>烦恼的滋味</h2><p>我自己从前仿佛也尝过烦恼的况味，我只觉得忧来无方，不但人莫之知，连我自己也莫名其妙，哪里有所谓哲学与人生观！</p><p>外感偶来，心波立涌，拿天大的哲学，也抵挡不住。</p><h2 id="使自己的生机舒畅"><a href="#使自己的生机舒畅" class="headerlink" title="使自己的生机舒畅"></a>使自己的生机舒畅</h2><p>朋友，我们都不过是自然的奴隶，要征服自然，只得服从自然。<strong>违反自然，烦恼才乘虚而入</strong>，要排解烦闷，也须得<strong>使你的自然冲动有机会发泄</strong>。</p><p>人生来好动，好发展，好创造。能动，能发展，能创造，便是顺从自然，便能享受快乐；不动，不发展，不创造，便是摧残生机，便不免感觉烦恼。</p><p>你感觉烦恼，因为你的生机被抑郁；你要想快乐，须得使你的生机能舒畅，能宣泄。</p><p>闲人大半易于发愁，就因为闲时生机静止而不舒畅。青年人比老年人易于发愁些，因为青年人的生机比较强旺。小孩子们的生机也很强旺，然而不知道愁苦，因为他们时时刻刻地游戏，所以他们的生机不至于被抑郁。</p><p>小孩子们偶尔不很乐意，便放声大哭，哭过了气就消去。成人们感觉烦恼时也还要拘礼节，哪能由你放声大哭呢？<strong>黄连苦在心头，所以愈觉其苦。</strong></p><p>歌德少时因失恋而想自杀，幸而他的文机动了，埋头两礼拜著成一部《少年维特之烦恼》，书成了，他的气也泄了，自杀的念头也打消了。</p><p>你发愁时并不一定要著书，你就读几篇哀歌，听一幕悲剧，借酒浇愁，也可以大畅胸怀。</p><h2 id="从动的中间寻出无限快感"><a href="#从动的中间寻出无限快感" class="headerlink" title="从动的中间寻出无限快感"></a>从动的中间寻出无限快感</h2><p>愁生于郁，解愁的方法在泄；郁由于静止，求泄的方法在动。</p><p>一切道德学说都不免肤浅，如果不从 “尽性” 的基点出发。如果把“尽性”两字懂得透彻，我以为生活目的在此，生活方法也就在此。</p><p>人性固然是复杂的，可是人是动物，其本性不外乎动。<strong>从动的中间我们可以寻出无限快感</strong>。</p><p>从前我住在家里，自己的书房总欢喜自己打扫。每看到书籍零乱，灰尘满地，你亲自去洒扫一过，霎时间混浊的世界变成明窗净几，此时悠然就座，游目骋怀，乃觉有不可言喻的快慰</p><p>再比方你自己是欢喜打网球的，当你起劲打球时，你还记得天地间有所谓烦恼么？</p><p>闲愁最苦。愁来愁去，人生还是那么样一个人生，世界也还是那么样一个世界。</p><p>我劝你多打网球，多弹钢琴，多栽花木，多搬砖弄瓦。</p><p>假如你不喜欢这些玩艺儿，你就谈谈笑笑，跑跑跳跳，也是好的。</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给青年的12封信-谈读书</title>
      <link href="/2020/07/13/gqnd12fx-reading/"/>
      <url>/2020/07/13/gqnd12fx-reading/</url>
      
        <content type="html"><![CDATA[<h2 id="1、下定决心，抽出时间读书"><a href="#1、下定决心，抽出时间读书" class="headerlink" title="1、下定决心，抽出时间读书"></a>1、下定决心，抽出时间读书</h2><p>你能否在课外读书，不是你有没有时间的问题，是你有没有决心的问题。</p><p>世间有许多人比你忙得多。许多人的学问都在忙中做成的。</p><p>不读书而讲革命，不知道“光”的所在，只是窜头乱撞，终难成功。</p><h2 id="2、养成读书的习惯"><a href="#2、养成读书的习惯" class="headerlink" title="2、养成读书的习惯"></a>2、养成读书的习惯</h2><p>人类学问逐天进步不止，你不努力跟着跑，便落伍退后，这固不消说。</p><p>尤其要紧的是<strong>养成读书的习惯</strong>，是在学问中寻出一种兴趣。</p><p>你如果没有一种正当嗜好，没有一种在闲暇时可以寄托你的心神的东西，将来离开学校去做事，说不定要被恶习惯引诱。</p><p>兴味要在青年时设法培养，过了正当时节，便会萎谢。</p><h2 id="3、培养读书的兴趣"><a href="#3、培养读书的兴趣" class="headerlink" title="3、培养读书的兴趣"></a>3、培养读书的兴趣</h2><p>讲义课本着意在平均发展基本知识，固亦不可不读。但是你如果以为念讲义看课本，便尽读书之能事，就是大错特错。</p><p>第一，学校功课门类虽多，而范围究极窄狭。你的天才也许与学校所有功课都不相近，自己在课外研究，去发现自己性之所近的学问。</p><p>第二，念讲义看课本，免不掉若干拘束，想借此培养兴趣，颇是难事。</p><p>兴趣要逍遥自在地不受拘束地发展</p><h2 id="4、选择有价值书去读"><a href="#4、选择有价值书去读" class="headerlink" title="4、选择有价值书去读"></a>4、选择有价值书去读</h2><p>书是读不尽的，就读尽也是无用，许多书没有一读的价值。</p><p>你多读一本没有价值的书，便丧失可读一本有价值的书的时间和精力，所以你须<strong>慎加选择</strong>。</p><p>经过时代淘汰而巍然独存的书才有永久性，才值得读一遍两遍以至于无数遍。</p><p>在这些书中间，你不但可以得到较真确的知识，而且可以于无形中吸收大学者治学的精神和方法。这些书才能撼动你的心灵，激动你的思考。</p><h2 id="5、找到自己要读的书"><a href="#5、找到自己要读的书" class="headerlink" title="5、找到自己要读的书"></a>5、找到自己要读的书</h2><p>你应该去请教你所知的专门学者，请他们各就自己所学范围以内指定三两种青年<strong>可读的书</strong>。</p><p>读书好比探险，也不能全靠别人指导，你自己也须得费些功夫去搜求</p><h2 id="6、读书方法"><a href="#6、读书方法" class="headerlink" title="6、读书方法"></a>6、读书方法</h2><p>第一，凡值得读的书至少须读两遍。<br>第一遍须快读，着眼在醒豁全篇大旨与特色。第二遍须慢读，须以批评态度衡量书的内容。</p><p>第二，读过一本书，须笔记纲要和精彩的地方和你自己的意见。<br>记笔记不但可以帮助你记忆，而且可以逼得你仔细，刺激你思考。</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给青年的12封信-序</title>
      <link href="/2020/07/13/gqnd12fx-preface/"/>
      <url>/2020/07/13/gqnd12fx-preface/</url>
      
        <content type="html"><![CDATA[<p>这十二封信以有中学程度的青年为对象。</p><p>各信以青年们所正在关心或应该关心的事项为话题</p><p>劝青年眼光要深沉，要从根本上做功夫，要顾到自己，勿随了世俗图近利。</p><p>一味亟于效率，结果就会流于浅薄粗疏，无可救药。</p><p>中国人在全世界是被推为最重实用的民族的，凡事都怀一个极近视的目标：娶妻是为了生子，养儿是为了防老，行善是为了福报，读书是为了做官，不称入基督教的为基督教信者而称为“吃基督教”的，不称投身国事的军士为军人而称为“吃粮”的，流弊所至，在中国，什么都只是吃饭的工具，什么都实用；因之，就什么都浅薄。</p><p>青年为国家社会的生力军，如果不从根本上培养能力，凡事近视，贪浮浅的近利，一味袭蹈时下陋习，结果纵不至于“一蟹不如一蟹”，亦只是一蟹仍如一蟹而已。国家社会还有什么希望可说。</p><p>“太贪容易，太浮浅粗疏，太不能深入，太不能耐苦”，作者对于现代青年的毛病，曾这样慨乎言之。</p><p>这十二封信啊，愿对于现在的青年，有些力量！</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL查看和修改字符集</title>
      <link href="/2020/07/06/mysql-view-modify-character/"/>
      <url>/2020/07/06/mysql-view-modify-character/</url>
      
        <content type="html"><![CDATA[<h2 id="查看字符集编码"><a href="#查看字符集编码" class="headerlink" title="查看字符集编码"></a>查看字符集编码</h2><p>查看MYSQL数据库服务器和数据库字符集</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">variables</span> <span class="keyword">like</span> <span class="string">'%character%'</span>;</span><br></pre></td></tr></table></figure><p>如下图：</p><p><img src="https://woilanlan.top/photo-gallery/blog/img/2020/07/06/20200706112049.png" alt="20200706112049"></p><h2 id="修改字符集编码"><a href="#修改字符集编码" class="headerlink" title="修改字符集编码"></a>修改字符集编码</h2><p>在服务中找到 Mysql 对应的服务</p><p><img src="https://woilanlan.top/photo-gallery/blog/img/2020/07/06/20200706113513.png" alt="20200706113513"></p><p>双击 MySQL57 查看对应属性</p><p>可执行文件的路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;D:\tool\mysql\MySQL57\bin\mysqld.exe&quot; --defaults-file&#x3D;&quot;D:\tool\mysql\MySQL57\my.ini&quot; MySQL57</span><br></pre></td></tr></table></figure><p>关闭服务，修改 my.ini 文件</p><p>在 [mysqld] 下面添加 character-set-server=utf8</p><p><img src="https://woilanlan.top/photo-gallery/blog/img/2020/07/06/20200706114142.png" alt="20200706114142"></p><p>保存文件，重启 Mysql 服务。</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://blog.csdn.net/kai666ling/article/details/79790374" target="_blank" rel="noopener">https://blog.csdn.net/kai666ling/article/details/79790374</a></p><p><a href="https://www.cnblogs.com/xiaowie/p/12020839.html" target="_blank" rel="noopener">https://www.cnblogs.com/xiaowie/p/12020839.html</a></p>]]></content>
      
      
      <categories>
          
          <category> mysql </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mysql </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Word中设置页眉和页脚</title>
      <link href="/2020/07/03/word-header-footer/"/>
      <url>/2020/07/03/word-header-footer/</url>
      
        <content type="html"><![CDATA[<h2 id="在当前页的页脚中添加页码"><a href="#在当前页的页脚中添加页码" class="headerlink" title="在当前页的页脚中添加页码"></a>在当前页的页脚中添加页码</h2><p>即当前页开始编号：1，2，3，4…等</p><ul><li>将光标放在当前页的首部，单击页面布局 –&gt; 分隔符 –&gt; 分节符 –&gt; 下一节；</li><li>在当前页的页脚处双击鼠标，进入页脚编辑状态；</li><li>单击页眉和页脚 –&gt; 链接到前一条页眉按钮，断开与前一节的联系；</li><li>单击页眉和页脚工具设计 –&gt; 页码 –&gt; 设置页码格式；</li><li>弹出页码格式对话框，在页码编号处选择起始页码，输入框中输入1；</li><li>单击页眉和页脚工具设计 –&gt; 页码 –&gt; 页面底端 –&gt; 普通数字2即可。</li></ul><p>注：在大纲视图中查看或编辑分节符</p><h2 id="奇偶页眉不同，页码连续"><a href="#奇偶页眉不同，页码连续" class="headerlink" title="奇偶页眉不同，页码连续"></a>奇偶页眉不同，页码连续</h2><p>奇数页页眉为论文题目，偶数页为学校名称，但页脚的页码要求是连续的</p><p>第一步：奇数偶数页眉设置</p><ul><li>在当前页（即奇数页，第1页），先双击页眉，出现页眉和页脚工具。如果第1页右边显示“与上一节相同”，则单击取消“链接到前一条页眉按钮”，断开与前一节的联系；</li><li>对于第2页（偶数页面），也需要断开与前一节的联系，如果第2页右边显示“与上一节相同”，则单击取消“链接到前一条页眉按钮”；</li><li>在设计 –&gt; 导航选项里 –&gt; 勾选奇偶页不同，在奇数页里输入论文题目，在偶数页里输入学校名称；</li></ul><p>第二步：奇数偶数页脚更新</p><ul><li>第一步完成后，这时页眉的奇数偶数内容设置完毕。但是，偶数页脚的页码消失了，下面需要找回偶数页码。</li><li>再把鼠标移动到奇数页码的位置，点页码 –&gt; 页面底端 –&gt; 普通数字2</li><li>再把鼠标移动到偶数页页码位置，点页码 –&gt; 页面底端 –&gt; 普通数字2，那么偶数页码出来了；</li><li>现在奇数偶数页的页码就是连续的了，即1，2，3，4，等等</li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="http://www.icanzc.com/word/6582.html" target="_blank" rel="noopener">http://www.icanzc.com/word/6582.html</a></p><p><a href="https://www.jianshu.com/p/41bd13a47973" target="_blank" rel="noopener">https://www.jianshu.com/p/41bd13a47973</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国汉字发展史</title>
      <link href="/2020/06/13/chinese-characters-history/"/>
      <url>/2020/06/13/chinese-characters-history/</url>
      
        <content type="html"><![CDATA[<blockquote><p>思想与身体必须有一个在路上。</p></blockquote><h2 id="开篇寄语"><a href="#开篇寄语" class="headerlink" title="开篇寄语"></a>开篇寄语</h2><p>悠悠岁月，漫漫历史。</p><p>在岁月这条奔腾不息的历史长河的冲刷下，许多的古代文化逐渐消失，但也有许多的传统文化以不折的韧性顽强地生存下来，久而弥新，熠熠生辉，汉字就是其中的一支。</p><p>三千多年来，无论是领土的分裂统一，还是政权的交替更迭；无论是诸子百家争鸣与朝野纷争，还是专制统治横行于社会；无论是秦皇汉武创千秋功业，还是一代天骄纵横天下，汉字，作为这沧海桑田的见证，公正、平静，永恒地记下了历史的每一个瞬间。华夏文明之舟，正是从这一笔一划，一撇一捺开始，积年累月，载着祖先留给我们的辉煌灿烂的文化，载着中华数千年历史积淀成的厚重，深沉的民族情结，步入今天，驶向未来。</p><p>让我们溯时间长河而上，静静地追随祖先的步伐，去尽情领略先人留给我们的这份珍贵的文化遗产，去感悟汉字之奇，汉字之妙，汉字之美……</p><hr><h2 id="众说纷纭：汉字的起源"><a href="#众说纷纭：汉字的起源" class="headerlink" title="众说纷纭：汉字的起源"></a>众说纷纭：汉字的起源</h2><h3 id="结绳记事-·-说"><a href="#结绳记事-·-说" class="headerlink" title="结绳记事 · 说"></a>结绳记事 · 说</h3><p>结绳记事 《易 · 系词》中记载：“上古结绳而治，后世圣人易之以书契”。至于如何用结绳的方式来记事，《周易注》记载：“结绳为约。事大，大结其绳；事小，小结其绳。”</p><h3 id="刻木记事-·-说"><a href="#刻木记事-·-说" class="headerlink" title="刻木记事 · 说"></a>刻木记事 · 说</h3><p>刻木记事 在木片，竹片上刻痕来记录数字、事件等，有些刻痕长期使用，约定俗成，人们都了解这些刻痕的意思，也可能进一步发展为文字。</p><h3 id="图符记事-·-说"><a href="#图符记事-·-说" class="headerlink" title="图符记事 · 说"></a>图符记事 · 说</h3><p>图符记事 对文字形成最有影响的，可能是图形符号。图形符号让人一看就知道其意思，具有形象化的优点。</p><p>西安半坡遗址出土的仰韶文化彩陶盆上和晚商青铜器上的鱼形图案，形态逼真，栩栩如生。拿它们与古汉字中的一些[鱼]比较，其相似的程度，足以使人们确信汉字是从原始图画演变出来的。</p><h3 id="仓颉造字-·-说"><a href="#仓颉造字-·-说" class="headerlink" title="仓颉造字 · 说"></a>仓颉造字 · 说</h3><p>仓颉造字 传说仓颉是上古黄帝的吏官，他从飞鸟留在地上的爪印和野兽的蹄印中得到启发，创造了汉字。</p><p>仓颉到底是什么人呢？传说他是黄帝的吏官，黄帝是古代中原部落联盟的领袖，由于社会进入较大规模的部落联盟阶段，联盟之间外交事务日渐频繁，故迫切需要建立一套各联盟共用的交际符号，于是搜集及整理共用文字的工作便交在吏官仓颉的手上了。</p><hr><h2 id="沧桑演变：汉字的发展史"><a href="#沧桑演变：汉字的发展史" class="headerlink" title="沧桑演变：汉字的发展史"></a>沧桑演变：汉字的发展史</h2><p>汉字的“家谱”应该从甲骨文开始。由此，汉字沿着甲骨文、金文、纂书、隶书、草书、行书、楷书的轨迹发展演变，一脉相承。</p><h3 id="龟甲兽骨-险些被“吃掉”的民族瑰宝"><a href="#龟甲兽骨-险些被“吃掉”的民族瑰宝" class="headerlink" title="龟甲兽骨 险些被“吃掉”的民族瑰宝"></a>龟甲兽骨 险些被“吃掉”的民族瑰宝</h3><p>甲骨文是1899年一个叫王懿(yi)荣的古文字学家发现的。长时间流传的着是他从家人给他抓回来的药中偶然发现的。但事实是山东的古董商范维卿从河南寻访到带有文字的甲骨片送到王懿荣家中的。这种文字盛行于殷商时期。它已经是一种比较成熟的文字，破译甲骨文的专家郭沫若曾说过：“中国文字，到了甲骨文时代，毫无疑问是经过了至少三千年的发展的。”如果按照这种说法，那么，中国的汉字史至少可以追述到6000年以前的图画文字刻符。甲骨文记载的内容，大多是商代（或西周初期）王室贵族进行占卜活动的记录。内容包括：天文、农业、战争等。它成为今人研究商代历史和汉字历史发展的最珍贵的史料。</p><p>河南安阳，盘庚迁殷后晚商的都城，即“殷墟”，因大量出土甲骨文而闻名世界。</p><h4 id="将甲骨文公布于众的人"><a href="#将甲骨文公布于众的人" class="headerlink" title="将甲骨文公布于众的人"></a>将甲骨文公布于众的人</h4><p>刘鹗，字铁云。光绪29年（公元1903年）首次将王懿荣家藏的九千余块甲骨片进行整理。精选出1058块拓成拓(ta)片公开发行公布于众。让世人看到了我国最早的成熟汉字——甲骨文。</p><h4 id="甲骨学“四堂”"><a href="#甲骨学“四堂”" class="headerlink" title="甲骨学“四堂”"></a>甲骨学“四堂”</h4><p>在甲骨学诞生与发展时期，研究业绩最突出的是罗振玉、王国维、董作宾、郭沫若四人。四人的雅号分别为雪堂（罗振玉）、观堂（王国维）、彦堂（董作宾）、鼎堂（郭沫若），末尾都带“堂”字，因此人们把他们合称为“四堂”。或许是对四位硕学的景仰，其后从事甲骨学研究的学者的雅号多带“堂”字。</p><h4 id="周原甲骨文"><a href="#周原甲骨文" class="headerlink" title="周原甲骨文"></a>周原甲骨文</h4><p>作为周代的文字，大多为铸于青铜器上的铭文，相关研究也取得了很大的进展。1954年，山西省出土了被认为是周代的卜骨；1975年，北京昌平又出土了周代卜骨一百余枚，而且其中数枚皆刻有文字。以上发现证明，周代也有甲骨文，而且1977年由陕西周原遗址出土的甲骨文为研究西周历史，又提供了宝贵的资料。周原遗址横跨陕西省扶风县与岐山县，早年曾因出土周代青铜器而闻名，被认为是建立周朝的原部族居住地。遗址从196年开始发掘，在周原凤雏村发现了似宫殿的建筑遗址，并在础石下的洞中出土了占卜用甲骨17000余枚。其中，约16700枚龟甲，上面无一刻字。其中的兽骨，约有190枚刻有文字。周原甲骨文的字体非常小，其中最大的仅长8毫米、宽5毫米，肉眼几乎看不清楚，但字体与殷代甲骨文相同，字形特征与殷墟第五期的甲骨文相近。</p><h3 id="钟鸣鼎食-大家风范的金文"><a href="#钟鸣鼎食-大家风范的金文" class="headerlink" title="钟鸣鼎食 大家风范的金文"></a>钟鸣鼎食 大家风范的金文</h3><p>金文因这种文字铸或刻在青铜器物上而得名。商周两代的青铜器最为有名，以钟鼎为多，所以金文又称钟鼎文。金文的内容绝大多数是与帝王贵族的重要活动有关，如记录宗教祭祀、国家的法令、帝王文告奖赏和大量的战争纪实等等，所以在各个方面都表现出一种端庄规矩、凌然雄浑的帝王气派。</p><p><strong>司母戊鼎</strong> 商晚期，是周王文丁为祭祀其母“戊”而作，是商代最大的青铜器。鼎内侧铸有“司母戊”三字，其笔画首尾尖锐出锋，中间肥厚，收笔处有波磔(zhe)</p><h3 id="群雄并起-春秋战国时的各国文字"><a href="#群雄并起-春秋战国时的各国文字" class="headerlink" title="群雄并起 春秋战国时的各国文字"></a>群雄并起 春秋战国时的各国文字</h3><p>春秋战国时期，动荡、纷争的社会现实一方面形成了诸子百家争鸣于朝野的思想文化繁荣的局面，另一方面也导致了各国“田畴异亩，车涂异轨，律令异法，衣冠异制，言语异声”，体现在文字上就是“文字异形”了。</p><h4 id="独领风骚-秦国大篆"><a href="#独领风骚-秦国大篆" class="headerlink" title="独领风骚 秦国大篆"></a>独领风骚 秦国大篆</h4><p>春秋战国时期通行于六国文字都被称为大篆，但风格各异。秦国大篆又被称为籀文，如石鼓文、诅楚文等。秦大篆的特点是：字形匀称整齐，笔划圆转，继承了西周晚期的金文体势，但却向匀称、圆转的方向发展、演化。</p><h4 id="异彩纷呈-各国文字"><a href="#异彩纷呈-各国文字" class="headerlink" title="异彩纷呈 各国文字"></a>异彩纷呈 各国文字</h4><p>“三体石经”残石拓片，因石经刻于三国正始年间，由此又称《正始石经》。其文字自上而下分别为大篆、小篆、隶书，清楚地反映了中国古代书法的演变。其中的大篆是战国时齐鲁地区的“古文”字体。</p><h3 id="分久必合-秦代的文字统一和小篆的出现"><a href="#分久必合-秦代的文字统一和小篆的出现" class="headerlink" title="分久必合 秦代的文字统一和小篆的出现"></a>分久必合 秦代的文字统一和小篆的出现</h3><p>公元前221年，秦始皇统一中国后，采纳了丞相李斯“书同文字”、“罢其不与秦文合者”的建议，开始了历史上的第一次文字统一运动。在李斯的主持下，搜集当时通用的文字，以秦国大篆为基础，进行整理，编成《仓颉篇》、《爰历篇》、《博学篇》，并向全国各地颁布。这次文字统一形成的字体就是小篆。</p><h4 id="泰山刻石"><a href="#泰山刻石" class="headerlink" title="泰山刻石"></a>泰山刻石</h4><p>为秦始皇二十八年（公元前二百一十九年）始皇东巡登泰山，丞相李斯等为歌颂秦德而作。传为李斯所书。书法圆润婉转，劲道厚重，结体谨严工整。</p><h3 id="秦篆遗风-汉魏篆书"><a href="#秦篆遗风-汉魏篆书" class="headerlink" title="秦篆遗风 汉魏篆书"></a>秦篆遗风 汉魏篆书</h3><p>篆书发展到汉魏时期虽不是官方和民间日常书写文字，但有时也会应用。如汉代碑额，很多使用篆书题写的。汉魏小篆较秦小篆更洒脱粗犷，偶尔也参杂隶书笔意，如《祀三公山碑》。</p><h3 id="蚕头燕尾-隶书的出现与演变"><a href="#蚕头燕尾-隶书的出现与演变" class="headerlink" title="蚕头燕尾 隶书的出现与演变"></a>蚕头燕尾 隶书的出现与演变</h3><p>隶书早在秦统一文字前就已经萌芽了。因为秦朝的“徒隶”们较早使用了这种字体办理公文，所以称隶书。秦代隶书又称秦隶（古隶），在当时还不是正式的官方书写字体。到了汉代，隶书才取代小篆而成为正式的书写字体，这就是汉隶。</p><h3 id="笔走龙蛇-草书的出现"><a href="#笔走龙蛇-草书的出现" class="headerlink" title="笔走龙蛇 草书的出现"></a>笔走龙蛇 草书的出现</h3><p>草书起源于秦汉之间，是从隶书演变而来的，到了汉章帝时才真正发展成为有书法价值的字体，此时的草书也称为“章草”；汉代的章草发展下去，又出现了今草。今草去掉了章草的波势挑法，笔势楷书化，笔画相连，字与字之间也长想勾连，章草之中的“隶意”完全不见了；稍后又出现了大草，唐代张旭、怀素则将大草书写得更为狂放，因此大草也被称为狂草。此时的草书已丧失了文字的使用功能，从而形成一门新的艺术——书法艺术。</p><h3 id="行云流水-最具实用性的行书"><a href="#行云流水-最具实用性的行书" class="headerlink" title="行云流水 最具实用性的行书"></a>行云流水 最具实用性的行书</h3><p>楷书在成为正体之后，它的草书也随即应运而生，这就是行书。它兼采楷书易于辨认的匀称结构与草书连绵婉转的笔法，比楷书书写迅速，比草书易写易认，从而成为适用性最强、应用范围最广的一种书法。</p><h3 id="大器晚成-楷书的确立与完善"><a href="#大器晚成-楷书的确立与完善" class="headerlink" title="大器晚成 楷书的确立与完善"></a>大器晚成 楷书的确立与完善</h3><p>楷书的名称从晋朝便出现了。楷书又称真书或正书，到东汉末期日趋成熟。楷书吸收了隶书结构匀称明晰的长处，又总结了草书的简易规则，变隶书的波势为平直，改隶书的方扁为方正。楷书对草书来讲，是化草为正；对隶书来讲，是化繁为简。它把两者完美的结合起来。楷书的出现，是汉字形体演变史上的又一次大变革。汉字发展到楷书，基本上完成了变革历程。</p><hr><h2 id="六书造字：汉字的结构"><a href="#六书造字：汉字的结构" class="headerlink" title="六书造字：汉字的结构"></a>六书造字：汉字的结构</h2><p>“六书”的称谓是许慎在《说文解字》中提出来的，令人重新确定了他们的次序，即：象形、指示、会意、形声、假借、转注。这种排列次序反映出汉字产生和演变的一般规律，就是指汉字的构造，由简单到复杂。</p><h3 id="象形"><a href="#象形" class="headerlink" title="象形"></a>象形</h3><p>“象形者，画成其物，随体诘(jie)诎(qu),日、月是也。”</p><p>简言之，就是以形示意，如“日”和“月”。《说文解字》中象形字只有364个。汉代以后，一千多年只造出了“凸”、“凹”、“伞”等少数几个字。</p><h3 id="指示"><a href="#指示" class="headerlink" title="指示"></a>指示</h3><p>“指示者，视而可识，察而见意，上、下是也。”</p><p>无法用图形表示的就用一个抽象的符号来表示，如“上”和“下”。</p><h3 id="会意"><a href="#会意" class="headerlink" title="会意"></a>会意</h3><p>“会意者，比类合谊（义），以见指撝(hui)，武、信是也。”</p><p>就是把两个字组合起来形成另一个字，如“武”和“信”。《说文解字》收入会意字1167个。</p><h3 id="形声"><a href="#形声" class="headerlink" title="形声"></a>形声</h3><p>“形声者，以事为名，取譬相成，江、河是也。”</p><p>指一个字由形旁和声旁两个部分组成，形旁表示字的意义，声旁表示字的读音，如“江”和“河”。形声字约占汉字总数的百分之八十。</p><h3 id="转注"><a href="#转注" class="headerlink" title="转注"></a>转注</h3><p>“转注者，建类一首，同意相受，考、老是也。”</p><p>指一类意义相同的字，应属于一首之下，如“考”和“老”。</p><h3 id="假借"><a href="#假借" class="headerlink" title="假借"></a>假借</h3><p>“假借者，本无其字，依声托事，令、长是也。”</p><p>指有些词有音无字，借用同音字来表示，如“令”和“长”。</p><hr><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>当您驻足在每一张图片面前，细细体味汉字文化的精髓的时候，是否为她散发出来的独特的文化气息所陶醉？当您看过有限的展板，即将步入外面缤纷的世界的时候，是否感到留在您身后的，不仅是几十张简单的展板，而是华夏几千年的文明史？您一定为华夏有这样的悠久灿烂的文明而骄傲，您一定为中华大地有这样博大精深的文明而感到自豪。</p><p>日月经天，江河行地。人类已经进入到科技现代化时代，但人类却从未像今天这样渴望了解自己和与之相关的文化。相信我们的展览能够给您带来新的感悟，新的思索。在此基础上，我们还将陆续的举办社会其它领域的展览，以满足广大热爱中国文化朋友们的求知欲。</p><blockquote><p>源自辽宁省图书馆</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>春节礼仪习俗</title>
      <link href="/2020/06/13/spring-festival-custom/"/>
      <url>/2020/06/13/spring-festival-custom/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>“新年纳余庆,嘉节号长春。”春节是中华民族最隆重、最喜庆、最热闹的传统佳节,也是最能体现炎黄.子孙精神气质与文化认同的盛大节日。作为文明古国、礼仪之邦,我们很早就有在新春佳节之际敬天祭祖、走亲访友、贴春联、吃年饭、迎财神、赏花灯等一系列风俗习惯,形成了灿烂悠久的春节礼俗文化,留下了珍贵丰厚的非物质文化遗产。</p><p>“爆竹声中一岁除,春风送暖入屠苏。千门万户瞳瞳日,总把新桃换旧符。”在辞别丁酉客岁,迎来戊戌新年之际,我们特别举办本次展览,以期在洞达春节礼俗之内涵,会意华夏文明之精髓的同时,弘扬传统文化,坚定文化自信,共聚中国力量,同圈中国梦想!</p><p>祝愿狗年岁月静好、风调雨顺、国泰民安、吉祥如意!</p><hr><h2 id="春节溯源"><a href="#春节溯源" class="headerlink" title="春节溯源"></a>春节溯源</h2><p>春节古称元日、岁首、岁旦、元朔、元旦等,俗称年。“年”的最初涵义并不是时间概念,而是来自农业生产。《说文解字》称: “年,谷熟也。”《尔雅》亦有:”年者取禾一熟也。”一般认为,春节起源于我国上古时期,由一年农事后“围猎祭神”的活动而来,通常起于腊月初八,一直持续到正月十五。</p><p>春节”一词最早出自《后汉书·杨震传》:”又冬无宿雪,春节未雨,百僚娥(jido)心。”但古代的“春节”指整个春季,也有的指二十四节气之首立春。直到清末,一些地方才将夏历正月初一称为“春节” 。</p><hr><h2 id="春节之礼"><a href="#春节之礼" class="headerlink" title="春节之礼"></a>春节之礼</h2><p>中国素称礼仪之邦, 《春秋左传正义》载:“中国有礼仪之大,故称夏:有服章之美,谓之华。华夏一也。”春节是我国最隆重的传统佳节,围绕着春节的礼俗尤为丰富。</p><p>春节礼俗可分为吉礼与嘉礼两部分。吉礼是祭祀天地人神的典礼,如腊八、祭灶、祭祖、迎财神等。嘉礼是按照“人心之所善者”制定的礼俗,涉及宴.庆贺等多方面内容,如贴春联、守岁、放爆竹、拜年、走亲戚、赏花灯等。</p><hr><h2 id="腊八节"><a href="#腊八节" class="headerlink" title="腊八节"></a>腊八节</h2><p>腊八节起源于腊祭。古时人们在岁末猎取野禽、野兽用于祭祀祖先神灵,以祈求来年五谷丰登,家人平安,称为“腊祭”,南北朝时期,腊祭被固定到每年的腊月初八举行,至宋代又盛行腊祭食粥风俗,《武林旧事》就记载用胡桃、松子、乳蕈(xun)、柿、栗之类作粥,谓之“腊八粥”。传至今日,每逢腊月初八,家家户户都要熬煮腊八粥。腊八粥又称八宝粥,寓吉样、平安、健康之意。</p><p>腊八蒜</p><p>腊八蒜的“蒜”和“算”字同音,旧时各家商号通常在腊月初八这天拢帐,把一年的收支算出来,厘清盈亏,称为“腊八算”。人们脆制腊八蒜,大概由此而来。</p><p>腊八粥</p><p>据佛教典籍载,腊月初八为佛祖释迎牟尼成道日。传说释迦牟尼出家后,六年苦修,幸遇牧女献糜,在普提树下静坐七天七夜,终于修道成佛。后来各地佛寺便效仿“牧女献糜”之说,于腊月初八取香谷及果实等以弗供佛,并馈四方善男信女,称为“佛粥”，“腊八弗”，“福德粥”,以示纪念。</p><hr><h2 id="祭灶"><a href="#祭灶" class="headerlink" title="祭灶"></a>祭灶</h2><p>古代民间认为,灶君是家庭的保护神,因此在过年前夕,家家都要祭灶,反映了劳动人民迎样纳福的美好愿望。</p><p>祭灶也叫过小年,北方多在腊月二十三,南方多在腊月二十四。古时富户人家常用黄羊祭灶,延至近世,形成了送灶神和吃灶糖的民间风俗。因为灶糖又黏又甜,传说可以封住灶君的口,防止他向玉皇大帝说坏话而隆罪,故有“灶君封住口,四季无灾忧”之说。</p><p>灶神,俗称灶君、灶王爷,其身份有炎帝、祝融、黄帝等多种说法,传说是玉皇大帝派至人间监察善恶的司命之神。每年腊月二十三(一说腊月二十四) ,灶神向玉帝汇报各家一年来的情况,玉帝再根据灶神的汇报决定各家来年的吉凶祸福。民间为求灶神多言好事,带回吉祥,故设祭送行。</p><hr><h2 id="贴春联"><a href="#贴春联" class="headerlink" title="贴春联"></a>贴春联</h2><p>民间传说,桃木有镇鬼的功能,因《山海经》一书中曾记载神荼(shen,shu)、郁垒(yu,lv)兄弟二人能吃百鬼,可以祛除不祥,所以古人便在桃木板上写下“神茶”，“郁垒”二神的名字,悬于门首,以辟邪护宅。五代时,蜀国君主孟昶(chang)在桃符上题写联语“新年纳余庆,嘉节号长春”,代替二神的名字,后世春联即发轫于此。如今,每逢春节,家家户户张贴门神与春联已成为最重要的年俗之一。此外,民间还盛行贴福字,窗花、年画等,以祈福纳祥、增添吉庆气氛。</p><h3 id="春联"><a href="#春联" class="headerlink" title="春联"></a>春联</h3><p>春联也称门对,北宋称为春帖子,南宋称为门帖子,广东俗称为挥春,是用长条红纸书写吉祥语,春节时贴在门上,故而得名。旧俗多以朱砂染笺作为春联用纸,考究一些的称之为万年红。</p><h3 id="门神"><a href="#门神" class="headerlink" title="门神"></a>门神</h3><p>在民间信仰中,门神是家宅平安的吉祥保护神,受到普遍尊崇。古人有祭祀门神的风俗,以求祛邪辟恶、祈福纳吉。门神通常分为武门神和文门神两种,武门神即武官形象,手握刀枪、威风凛凛,功用是镇宅护室;文门神以文官朝臣入画,寓意为招财进宝、福禄双全。</p><hr><h2 id="祭祖"><a href="#祭祖" class="headerlink" title="祭祖"></a>祭祖</h2><p>祭祖源于中华民族“百善孝为先”和“慎终追远”的传统观念,藉以表达对祖宗先辈的缅怀之意和敬仰之情,春节祭祖多在腊月二十八至除夕举行,有上坟祭拜、宗庙祠堂祭拜、焚黄祭拜等,形式多种多样。一些家庭将家谱、祖先像、牌位等供于上厅,陈列供品,然后按长幼顺序依次烧香叩拜,祭礼即告完成。</p><blockquote><p>五间正殿前,悬一块闹龙填青,写道是“慎终追远”。旁边一副对联,,写道是:“已后儿孙承福德,至今黎庶念荣宁。”俱是御笔。里边灯烛辉煌,锦幢绣幕。虽列着些神主,却看不真。只见贾府诸人分了昭穆排班立定。贾敬主祭,贾赦陪条,贾珍献爵,贾琏、贾琼献帛,宝玉捧香,贾菖、贾菱屏拜垫,守焚池。青衣乐奏、三献爵,兴、拜毕,焚帛,奠酒。礼毕乐止,退出。<br>—(清)曹雪芹/《红楼梦》</p></blockquote><hr><h2 id="守岁"><a href="#守岁" class="headerlink" title="守岁"></a>守岁</h2><p>守岁之俗,古已有之。孟元老《东京梦华录》记宋都沐梁(今河南开封):“是夜,禁中爆竹山呼,声闻于外。士庶之家,围炉团坐,达旦不寐。”除夕之夜,四处灯火通明,合家团团围坐夜话,通宵不眠辞旧岁,迎新年,既有对岁月惜别留恋之情,又有对来临的新年寄以美好希望之意。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">        守岁</span><br><span class="line">            宋·苏轼</span><br><span class="line">欲知垂尽岁,有似赴壑蛇。</span><br><span class="line">修鳞半已没,去意谁能遮。</span><br><span class="line">况欲系其尾,虽勤知奈何。</span><br><span class="line">儿童强不睡,相守夜欢哗。</span><br><span class="line">晨鸡且勿唱,更鼓畏添挝。</span><br><span class="line">坐久灯烬落,起看北斗斜。</span><br><span class="line">明年岂无年,心事恐瑳豌。</span><br><span class="line">努力尽今夕,少年犹可夸。</span><br></pre></td></tr></table></figure><p>除夕晚上的年夜饭又称“团圆饭”,“合家欢”,是阖家一年中最重要的一顿饭。年夜饭通常自掌灯时分入席,全家老少欢聚酣饮,回顾旧岁,憧憬新年。古往今来,除夕晚上吃年夜饭已成为最重要的年俗活动。</p><p>年夜饭通常以饺子、年糕为主食。饺子又称“扁食” “煮饽饽” ,一般在除夕夜里包好,待子时食用,取其“更岁交子”之意,故称为“饺子”。为讨吉利,有些家庭会在个别饺子里包上硬币或花生,据说吃到这种饺子,一年到头都会吉星高照走好运。年糕谐音“年年高”,含有期望生活一年比一年更好之意。</p><hr><h2 id="放爆竹"><a href="#放爆竹" class="headerlink" title="放爆竹"></a>放爆竹</h2><p>古时人们守岁,又有燃“岁火”的习俗。南北朝时期的荆楚地区“爆竹、燃草”用来驱避山鬼,发展到隋唐,则“燎火”以示兴盛。明清时期,各家都要”烧松盆”,用松柏枝与柴木烧于庭院,祈福驱凶。“岁火”越旺越好,预兆新的一年五谷丰登、人丁兴旺。如今,人们在大年夜通常是燃放烟花燥竹,点亮全部灯盆,辞旧迎新,接祥纳福。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">            元日</span><br><span class="line">                宋·王安石</span><br><span class="line">爆竹声中一岁除,春风送暖入屠苏。</span><br><span class="line">千门万户瞳瞳日,总把新桃换旧符。</span><br></pre></td></tr></table></figure><hr><h2 id="拜年"><a href="#拜年" class="headerlink" title="拜年"></a>拜年</h2><p>正月初一拜年,也称贺年、贺岁、贺正、拜节等。史书记载: “孟春元日,鸡鸣,男女盛服,列拜上下神祇,祭祖先,拜尊长及族党。邻里往来数日以相贺。通常拜年是指向长辈叩拜,贺年则是平辈相互道贺。随着时代发展和社会进步,贺年卡、电子邮件、电话、短信、微信等新的拜年方式层出不穷,丰富和扩大了人与人之间的社会交流活动。</p><blockquote><p>初一特别起得早,梳小辫儿,换新衣裳,大棉袄加上一件新蓝布罩袍、黑马褂、灰鼠绒绿鼻脸儿的靴子。见人就得请安,口说: “新喜”。日上三竿,骡子轿车已经套好,跟班的捧着拜匣,奉命到几家最亲近的人家拜年去也。如果运气好,人家“挡驾”,最好不过,递进一张帖子,掉头就走。否则一声“请”,便得升堂入室,至少要朝上磕三个头,才算礼成。<br>—梁实秋《过年》</p></blockquote><h3 id="压岁钱"><a href="#压岁钱" class="headerlink" title="压岁钱"></a>压岁钱</h3><p>压岁钱古称厌胜钱、压崇钱、押岁钱。《燕京岁时记》 : “以彩绳穿钱,编作龙形,置于床脚,谓之”压岁钱。尊长之赐小儿者,亦谓之“压岁钱。”古人认为,压岁钱可以驱邪除凶,保佑平安。每到除夕夜或正月初一,晚辈要给长辈拜年,长辈也要给晚辈压岁钱。压岁钱可以在除夕夜孩子睡着后悄悄放置于孩子的枕头下,亦可在晚辈拜年后当众赏给。</p><blockquote><p>长幼度岁,互以糕果、朱提相赉(lai)献,谓之“压岁盘” 。长者贻小儿以朱绳缀百钱,谓之“压岁钱”;置橘、荔诸果于枕畔,谓之“压岁果子”。<br>—(清)顾禄《清素录》</p></blockquote><h3 id="压岁演变"><a href="#压岁演变" class="headerlink" title="压岁演变"></a>压岁演变</h3><p>压岁钱因时代不同所用钱币各异,使用铜板一百文寓意“长命百岁”;使用大洋一枚表示“一本万利”;使用连号新钞票表示 “连连高升”。随着人们思想观念的变化,很多家庭过年时开始送给孩子“压岁言”或“压岁物”。</p><h3 id="叩拜"><a href="#叩拜" class="headerlink" title="叩拜"></a>叩拜</h3><p>“拜年”一词的原义,是晚辈为长者拜贺新年,包括向长者叩头施礼、祝贺新年如意、问候生活安好等内容。通常在初一早晨起床后,要先拜年,晚辈给长辈跪拜磕头,祝福长辈长寿,万事如意。</p><blockquote><p>初一,我们一早就穿起新衣,对父母亲和长辈磕头拜年,也拿到了包着红纸的压岁钱,里面是锂亮的一块墨西哥“站人”银元!<br>—冰心《漫淡过年》</p></blockquote><h3 id="作揖"><a href="#作揖" class="headerlink" title="作揖"></a>作揖</h3><p>古时平辈间贺年时行作揖礼,行礼时两手抱拳高拱,身子略弯,但不与对方身体接触,表示向人敬礼。时至当今,作揖依然用于新春贺年及日常交际。贺年时,作揖的正确手势应该是:第一,右手握拳,左手成掌,对右拳或包或盖,这样的作握手势是“吉祥”;第二,两个拇指要并齐,不能相互叠压;第三,拜年时手晃三下即可。</p><h3 id="万福"><a href="#万福" class="headerlink" title="万福"></a>万福</h3><p>中国传统历来男女有别,作揖为男子平辈间贺年礼,而女子则行万福礼。行礼时,遵循“男左女右”,右手覆左手,附于右侧腰肋间双膝微微下蹲,边行礼，边口称“万福” 。</p><h3 id="贺帖"><a href="#贺帖" class="headerlink" title="贺帖"></a>贺帖</h3><p>春节拜年时,往往因坊邻亲朋较多而无法亲往,亦或虽亲往拜年,但家主不在的情况,于是便产生了贺帖。贺帖又称飞帖,最早起源于宋代,用梅花笺纸裁成,上书受贺人姓名、住址和恭贺话语。当时大户人家门前通常贴一红纸袋,上写“接福”两字,即为承放贺帖之用。到了清代,改用大红硬纸制作,更添喜庆气氛。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">        元日书事效刘村</span><br><span class="line">                明·文徵明</span><br><span class="line">不求见面惟通谒,明纸朝来满敝庐。</span><br><span class="line">我亦随人投数纸,世情嫌简不嫌虚。</span><br></pre></td></tr></table></figure><hr><h2 id="走亲戚"><a href="#走亲戚" class="headerlink" title="走亲戚"></a>走亲戚</h2><p>通常自正月初二起,人们开始走亲戚,互相拜访,宴饮酬酢(zuo)。走亲戚,旧时称“拜节”,“甥婿辈各携束脯往拜其长,日拜节” 。按照血缘和宗族关系的亲疏远近,一般是正月初二外甥走舅家,女儿女婿回娘家;正月初三走姨家和姑家。也有一些地方的探亲顺序为先舅家,次姑家,再岳父母家。</p><h3 id="回娘家"><a href="#回娘家" class="headerlink" title="回娘家"></a>回娘家</h3><p>回娘家又称归宁,指出嫁的女儿回门省亲。过去观念认为, 已逝的祖先年底要回家享受供奉,如果看到家里有“外人” ,不愿进家门了。“嫁出去的女儿泼出去的水”,出嫁的女儿过去被认为是“外人”,要等到祖先享用供奉后,在正月初二才可以回娘家,有些地区也有正月初三回娘家的习俗。</p><hr><h2 id="迎财神"><a href="#迎财神" class="headerlink" title="迎财神"></a>迎财神</h2><p>又称“请财神”,通常在正月初四或初五举行仪式,俗称“接五路”。各店铺从初四下午起,张灯结彩,举办隆重的祭祀仪式,准备迎接五路财神,五路财神一般是指:东路招财、西路进宝、南路利市、北路财神、中路玄坛。</p><p>迎财神仪式中,供桌上的供品也有着特殊的寓意,果品多以广橘、福橘、蜜橘为主,取生意广聚、福星高照、生活甜蜜之意;糕点以年糕、蜜饯为主,取年年高、甜蜜蜜 之意;三牲供以猪头、全鸡、全鸭等,含有振兴、进宝之意。</p><hr><h2 id="赏花灯"><a href="#赏花灯" class="headerlink" title="赏花灯"></a>赏花灯</h2><p>正月十五是我国传统节日“元宵节” ,又称“上元节” “灯节” 。赏花灯是元宵节最为普遍的礼俗,在古代,无论王公贵族还是平常百姓,都会在这一天上街赏灯。人们要在自家门口、并沿、石唐等处送灯,各地还会举办各种灯会、正月十五通常也被视为庆祝,春节的最后一天。</p><h3 id="习俗沿袭"><a href="#习俗沿袭" class="headerlink" title="习俗沿袭"></a>习俗沿袭</h3><p>元节贯花灯的习俗始于汉代,唐代发展到盛况空前的灯市游乐,唐诗中对元背节张灯盛况和游人赏灯情景多有描述。贯灯之仪,宋时最盛,并出现了灯谜游戏,灯市往往是观者如云,通肖达旦。明代元宵节张灯时间最长,从正月初八一直持续到正月十七,共赏“十夜灯”。清代更注重张灯,以赏灯、看戏、猜灯谜、放烟火等娱乐为主。近代以来,十五赏灯多以庙会的形式进行,这一天,各庙会张灯结彩,热闹非凡。</p><hr><h2 id="文化之魂"><a href="#文化之魂" class="headerlink" title="文化之魂"></a>文化之魂</h2><p>文化自信是一个国家、一个民族发展中更基本、更深沉、更持久的力量。必须坚持马克思主义,牢固树立共产主义远大理想和中国特色社会主义共同理想,培育和践行社会主义核心价值观,不断增强意识形态领域主导权和话语权,推动中华优秀传统文化创造性转化、创新性发展,继承革命文化,发展社会主义先进文化,不忘本来、吸收外来、面向未来,更好构筑中国精神、中国价值、中国力量,为人民提供精神指引。<br>— 习近平</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>删除无用的打开方式</title>
      <link href="/2020/06/11/remove-useless-open-way/"/>
      <url>/2020/06/11/remove-useless-open-way/</url>
      
        <content type="html"><![CDATA[<p>问题描述：</p><p>选中PDF文件 –&gt; 右键 –&gt; 打开方式</p><p>在打开方式列表里，出现了一个已经卸载的软件，但是无法删除。</p><p>解决方案：</p><p>快捷键 Win + R 打开 运行 命令窗口，输入 regedit</p><p>找到如下注册表路径：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 系统版本：Windows 10</span><br><span class="line">计算机\HKEY_CLASSES_ROOT\.pdf\OpenWithProgids</span><br></pre></td></tr></table></figure><p>右侧的区域中，选中找到你想要删除的项，右键删除即可。</p><p>参考：</p><p><a href="https://jingyan.baidu.com/article/ca41422fc54e481eae99edbd.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/ca41422fc54e481eae99edbd.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Windows使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA中SVN的使用03</title>
      <link href="/2020/05/29/idea-svn-03/"/>
      <url>/2020/05/29/idea-svn-03/</url>
      
        <content type="html"><![CDATA[<p>参考：</p><p>IntelliJ IDEA 下的SVN使用：<a href="https://blog.csdn.net/u013412790/article/details/71022784" target="_blank" rel="noopener">https://blog.csdn.net/u013412790/article/details/71022784</a></p><p>IntelliJ IDEA 下的svn配置及使用的非常详细的图文总结：<a href="https://blog.csdn.net/qq_27093465/article/details/74898489" target="_blank" rel="noopener">https://blog.csdn.net/qq_27093465/article/details/74898489</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA常见问题02</title>
      <link href="/2020/05/29/idea-use-02/"/>
      <url>/2020/05/29/idea-use-02/</url>
      
        <content type="html"><![CDATA[<h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><p>1、java项目怎么引入自己的jar包</p><ul><li>新建lib目录，复制对应的jar包</li><li>选中所有的jar，右键单击，add as Library</li></ul><p>2、Maven项目的文件夹设置（目录无法新建java文件和包）</p><p>原因：maven中央仓库访问慢，项目生成时没有自动配置对应maven文件夹，需要手动进行设置。</p><p>选中项目，F4，打开模块设置，增加项目上下文，一般为工程的路径。</p><p>然后选中对应的文件夹，右键设置为源代码文件夹或资源文件夹</p><p>3、Maven插件打包</p><p>点击Maven模块，打开当前项目Lifecycle的，点击Toggle ‘Skip Tests’ Mode图标，双击package</p><p>在项目的target目录下就会生成对应的jar包</p><p>4、使用终端,执行java程序</p><p>点击Terminal模块，进入终端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar commandlinerunner-0.0.1-SNAPSHOT.jar longlong woilanlan.github.io</span><br></pre></td></tr></table></figure><p>5、更改项目Properties文件的编码为UTF-8</p><p>File &gt;&gt; Settings &gt;&gt; Editor &gt;&gt; File Encodings</p><p>修改 Project Encoding , Properties Files 的编码格式为 UTF-8，勾选自动转为 ASCII 码</p><p>5、隐藏IDEA的项目配置文件</p><p>Editor &gt;&gt; File Types &gt;&gt; ignore files and folders &gt;&gt; ;.idea;*.iml;</p><p>6、编辑文件模板</p><p>选中文件夹右键 &gt;&gt; New &gt;&gt; Edit File Templates &gt;&gt; 打开 File and Code Templates 窗口</p><p>点击加号 &gt;&gt; 输入Name 和 Extension &gt;&gt; 输入模板内容 &gt;&gt; 选中 Enable Live Templates &gt;&gt; 点击 OK</p><p>7、代码重复提示</p><p>navigate to duplicate &gt;&gt; disable inspection</p><p>8、配置自动生成 serialVersionUID</p><p>File &gt;&gt; Settings &gt;&gt; Editor &gt;&gt; Inspections，勾选 Serializable class without ‘serialVersionUID’</p><h2 id="创建maven-web项目"><a href="#创建maven-web项目" class="headerlink" title="创建maven web项目"></a>创建maven web项目</h2><p>1、Maven项目，增加webapp目录</p><p>选中项目，F4，打开模块设置，选中项目名称，右键Add Web,添加Web Resource Directory文件夹</p><p>Web Resource Directories设置webapp目录：D:\springmvc\springmvc01\src\main\webapp</p><p>Web Module Deployment Descriptor设置web.xml文件：D:\springmvc\springmvc01\src\main\webapp\WEB-INF\web.xml</p><p>2、打开Artifacts设置</p><p>点击添加，Web Application:Exploded,From Modules,选中项目名称，完成添加</p><p>3、配置Tomcat</p><p>Run/Debug Configurations,点击添加，Tomcat Server,Local</p><p>打开Server设置，在Application server,点击configure,在Tomcat Home项，选择Tomcat的安装位置</p><p>打开Deployment设置，点击添加，添加我们的项目，在Application context项设置项目部署的名称</p><p>4、运行提示，找不到DispatcherServlet类</p><p>打开Artifacts设置，在右侧Output Layout右击项目名，选择Put into Output Root</p><p>​执行后，在WEB-INF在增加了lib目录，里面是项目引用的jar包</p><p>5、SpringMVC中配置了静态资源目录，但是找不到webapp目录下的图片文件。</p><p>检查输出目录:out\artifacts\项目名称\static\ 发现唯独缺少了图片的目录。</p><p>打开Artifacts设置，在右侧Output Layout里的<code>&lt;output root&gt;</code>上面点击加号，选择Directory Content,添加img的目录。</p><p>或者</p><p>点开Tomcat的配置，点击右侧的加号，选择External Source…选择你存图片的路径，然后在Application context中输入访问你静态图片的路径:/img<br>在浏览器里直接通过 localhost:8080/img/… 就可以访问你的图片了</p><p><a href="https://www.cnblogs.com/hanszhao/p/9865098.html" target="_blank" rel="noopener">IDEA中创建maven web项目</a></p><p><a href="https://blog.csdn.net/zhang8907xiaoyue/article/details/82942822" target="_blank" rel="noopener">IDEA使用Maven搭建web项目启动报找不到类</a></p><p><a href="https://blog.csdn.net/jacksonzhou88/article/details/62508188" target="_blank" rel="noopener">idea用tomcat发布javaWeb项目中的存在的图片存储路径问题解决</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA快捷键01</title>
      <link href="/2020/05/29/idea-use-01/"/>
      <url>/2020/05/29/idea-use-01/</url>
      
        <content type="html"><![CDATA[<p><a href="https://mp.weixin.qq.com/s/3Ij-jPPbF2R-Un0lNKzOOg" target="_blank" rel="noopener">这样配置：让你的 IDEA 好用到飞起来</a></p><h2 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h2><p>1、快速查找</p><ul><li>快速搜索类：Ctrl + N</li><li>快速搜索文件：Ctrl + Shift + N</li><li>替换当前文件中的内容：Ctrl + R</li><li>查看某一个方法或者变量在哪里被使用：Alt + F7</li><li>查看代码提示及内容：Ctrl + Q</li><li>查看类的定义：Ctrl + B 或者 按下Ctrl再鼠标左键单击</li><li>列出类中的所有方法: Ctrl + F12</li><li>查看接口或者抽象类的子类：Ctrl + Alt + B</li><li>查看类的层级关系：Ctrl + H</li><li>光标的 上/下一个位置（查看源码）：Ctrl + Alt + ←/→</li></ul><p>2、代码编辑</p><ul><li>new对象补全：Alt + Enter<ul><li>new User().var代表新增一个局部变量</li><li>new User().field代表新增一个全局变量</li></ul></li><li>类型强转：ctx.getBean(“user1”).cast</li><li>代码复制到新的一行：Ctrl + D</li><li>删除当前行：Ctrl+Y</li><li>代码向上或者向下移动：Shift + Alt + ↑/↓</li><li>在当前行的上面创建新的一行：Ctrl + Alt + Enter</li><li>在当前行的下面新建一行：Shift + Enter</li><li>行注释：Ctrl + /</li><li>块注释：Ctrl + Shift + /</li><li>代码补全：Ctrl + Alt + 空格</li><li>查看方法参数：Ctrl + P</li><li>移除无效import：Ctrl + Alt + O</li></ul><p>3、代码重构</p><ul><li>新建文件：Alt + Insert</li><li>生成get/set等方法：Alt + Insert</li><li>变量或者类名重命名: Shift + F6</li><li>打开模块设置：选中项目，F4</li><li>切换项目的JDK版本：Ctrl + shift + Alt + /</li><li>提取全局变量：Ctrl + Alt + F<ul><li>选中变量右键 –&gt; Refactor –&gt; Extract –&gt; Field</li></ul></li><li>代码包裹，选中代码后，可以被 for/if/trycache 等代码块包裹：Ctrl + Alt + T</li></ul><p>4、编译运行</p><h2 id="便捷的功能"><a href="#便捷的功能" class="headerlink" title="便捷的功能"></a>便捷的功能</h2><p>1、智能的选取</p><p>从某个变量到表达式到方法甚至到类，扩充者选取：Ctrl + W</p><p>2、丰富的导航模式</p><p>显示最近打开过的文件: Ctrl + E</p><p>打开类名搜索框：Ctrl + N 或者连按两下Shift</p><p>3、历史记录功能</p><p>在当前文件的编辑界面 –&gt; 右键 –&gt; Local History</p><p>4、辅助编码</p><p>自动在Java Bean中生成 toString()、hashCode()、equals() 以及所有的get/set 方法</p><p>Windows是 Alt + Insert，Mac是 Command + N</p><p>5、XML的完美支持</p><p>引入Spring依赖之后，就会有Spring的XML模板，可以直接用。</p><p>new –&gt; XML Configuration File –&gt; Spring Config</p><p>6、列编辑模式</p><p>按住Alt键下拉同时编辑多行</p><p>7、预置模板</p><p>显示代码模板提示：Ctrl + J</p><p><strong>main方法的生成</strong>：psvm</p><p>System.out.println的快捷输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&quot;abc&quot;.sout &#x3D;&gt; System.out.println(&quot;abc&quot;);</span><br></pre></td></tr></table></figure><p><strong>for循环</strong>:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">List&lt;String&gt; list &#x3D; new ArrayList&lt;String&gt;();</span><br><span class="line"></span><br><span class="line">输入: list.for 即可输出</span><br><span class="line"></span><br><span class="line">for(String s:list)&#123;&#125;</span><br></pre></td></tr></table></figure><p><strong>SQL语句</strong>：</p><p>ins、upd</p><p>在设置中新增：Live Templates</p><p>8、对Git的友好支持</p><p>IDEA集成了目前大部分的版本工智工具插件</p><p>9、智能代码</p><p>自动检查代码，发现与预置规范有出入的代码给出提示，自动完成修改</p><p>10、html相关操作</p><p>在html文件中快速引入js文件，直接拖动js文件到html的对应位置。</p><p>输入</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">div#header+div.page+div#footer.class1.class2.class3</span><br></pre></td></tr></table></figure><p>按下TAB键</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"header"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"page"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"footer"</span> <span class="attr">class</span>=<span class="string">"class1 class2 class3"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/Black1499/article/details/81515301" target="_blank" rel="noopener">IDEA快捷键以及emmet插件的自动补全</a></p>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大学1</title>
      <link href="/2020/05/19/dx-01/"/>
      <url>/2020/05/19/dx-01/</url>
      
        <content type="html"><![CDATA[<p>大学之道，在明明德，在新民，在止于至善。</p><p>知止而后有定，定而后能静，静而后能安，安而后能虑，虑而后能得。物有本末，事有终始。知所先后，则近道矣。</p><p>古之欲明明德于天下者，先治其国；欲治其国者，先齐其家；欲齐其家者，先修其身；欲修其身者，先正其心；欲正其心者，先诚其意；欲诚其意者，先致其知。致知在格物。物格而后知至，知至而后意诚，意诚而后心正，心正而后身修，身修而后家齐，家齐而后国治，国治而后天下平。自天子以至于庶人，壹是皆以修身为本。</p><p>其本乱而末治者，否矣。其所厚者薄，而其所薄者厚，未之有也。此谓知本，此谓知之至也。</p><p>译文：</p><p>大学的道理，在于彰显人人本有，自身所具的光明德性（明明德），再推己及人，使人人都能去除污染而自新（亲民，新民也），而且精益求精，做到最完善的地步并且保持不变。</p><p>能够知其所止，止于至善，然后意志才有定力；意志有了定力，然后心才能静下来，不会妄动；能做到心不妄动，然后才能安于处境随遇而安；能够随遇而安，然后才能处事精当思虑周详；能够思虑周详，才能得到至善的境界。</p><p>天地万物皆有本有末，凡事都有开始和终了，能够明白本末、终始的先后次序，就能接近大学所讲的修己治人的道理了。</p><p>要想治理好自己的国家（治国），一定要先治理好自己的家庭（齐家）；要想治理好自己的家庭，一定要先修养好自己本身的德行（修身）；要想修养自己本身的德行，必须先端正自己的心意（正心）；要想端正自己的心意，必先使自己的念头真诚、无私（诚意）；要想使自己的念头真诚无私，必先明理一穷究事物的道理（致知）；要想明理致知，必先要革除物欲，修正其不正确的观念（格物）。</p><p>经过一番穷理尽性的功夫，物欲革除之后（物格），一切事物的道理无不清楚明白（知至）；明理之后，起心动念皆是真诚无妄（意诚）；起心动念真诚无妄，自然存心端正无私无偏（心正）；身心端正无私，自然会好好地修养德行（身修）；能够修养德行身体力行，自然一家和睦井然有序（家齐）；家庭经营得井井有条之后，才能够治理好国家（国治）；国家的治理能够上轨道之后，才能进一步使天下太平（天下平）。</p><p>上自天子，下至平民，一切都要以修身为做人处事的根本，如果不修身，连根本的修身都搞乱了，却想要治国平天下那是不可能的；把切近的修身、齐家看得不重要，反而去高谈治国平天下，从来没有这样的道理。</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>孙子兵法-始计篇</title>
      <link href="/2020/05/19/szbf-01shiji/"/>
      <url>/2020/05/19/szbf-01shiji/</url>
      
        <content type="html"><![CDATA[<p>孙子曰：兵者，国之大事，死生之地，存亡之道，不可不察也。</p><p>故经之以五事，校之以计而索其情。一曰道，二曰天，三曰地，四曰将，五曰法。道者，令民于上同意，可与之死，可与之生，而不畏危也。天者，阴阳、寒暑、时制也。地者，远近、险易、广狭、死生也。将者，智、信、仁、勇、严也。法者，曲制、官道、主用也。凡此五者，将莫不闻，知之者胜，不知之者不胜。故校之以计而索其情。曰：主孰有道？将孰有能？天地孰得？法令孰行？兵众孰强？士卒孰练？赏罚孰明？吾以此知胜负矣。</p><p>将听吾计，用之必胜，留之；将不听吾计，用之必败，去之。计利以听，乃为之势，以佐其外。势者，因利而制权也。</p><p>兵者，诡道也。故能而示之不能，用而示之不用，近而示之远，远而示之近。利而诱之，乱而取之，实而备之，强而避之，怒而挠之，卑而骄之，佚而劳之，亲而离之，攻其无备，出其不意。此兵家之胜，不可先传也。</p><p>夫未战而庙算胜者，得算多也；未战而庙算不胜者，得算少也。多算胜，少算不胜，而况于无算乎！吾以此观之，胜负见矣。</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>springboot-01</title>
      <link href="/2020/05/07/springboot-01/"/>
      <url>/2020/05/07/springboot-01/</url>
      
        <content type="html"><![CDATA[<h2 id="Spring-Boot"><a href="#Spring-Boot" class="headerlink" title="Spring Boot"></a>Spring Boot</h2><p>官方文档：</p><p><a href="https://docs.spring.io/spring-boot/docs/2.1.3.RELEASE/reference/htmlsingle/" target="_blank" rel="noopener">https://docs.spring.io/spring-boot/docs/2.1.3.RELEASE/reference/htmlsingle/</a></p><p>Spring Boot可以轻松创建可以运行的独立的，生产级的基于Spring的应用程序。</p><p>可以使用Spring Boot创建可以使用java -jar或更传统的war部署启动的Java应用程序</p><h2 id="一、开发您的第一个Spring-Boot应用程序"><a href="#一、开发您的第一个Spring-Boot应用程序" class="headerlink" title="一、开发您的第一个Spring Boot应用程序"></a>一、开发您的第一个Spring Boot应用程序</h2><p>在开始之前，打开终端并运行以下命令以确保安装了有效的Java和Maven版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ java -version</span><br><span class="line">java version &quot;1.8.0_102&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_102-b14)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.102-b14, mixed mode)</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mvn -v</span><br><span class="line">Apache Maven 3.5.4 (1edded0938998edf8bf061f1ceb3cfdeccf443fe; 2018-06-17T14:33:14-04:00)</span><br><span class="line">Maven home: &#x2F;usr&#x2F;local&#x2F;Cellar&#x2F;maven&#x2F;3.3.9&#x2F;libexec</span><br><span class="line">Java version: 1.8.0_102, vendor: Oracle Corporation</span><br></pre></td></tr></table></figure><h3 id="1、构建一个maven项目：创建POM"><a href="#1、构建一个maven项目：创建POM" class="headerlink" title="1、构建一个maven项目：创建POM"></a>1、构建一个maven项目：创建POM</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">project</span> <span class="attr">xmlns</span>=<span class="string">"http://maven.apache.org/POM/4.0.0"</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xsi:schemaLocation</span>=<span class="string">"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">modelVersion</span>&gt;</span>4.0.0<span class="tag">&lt;/<span class="name">modelVersion</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.example<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>myproject<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>0.0.1-SNAPSHOT<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">parent</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-parent<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.3.RELEASE<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">parent</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- Additional lines to be added here... --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">project</span>&gt;</span></span><br></pre></td></tr></table></figure><p>可以通过运行 mvn package 来测试它</p><h3 id="2、添加类路径依赖关系"><a href="#2、添加类路径依赖关系" class="headerlink" title="2、添加类路径依赖关系"></a>2、添加类路径依赖关系</h3><p>打印项目依赖项的树,可以看到 spring-boot-starter-parent 本身不提供依赖关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ mvn dependency:tree</span><br><span class="line"></span><br><span class="line">[INFO] com.example:myproject:jar:0.0.1-SNAPSHOT</span><br></pre></td></tr></table></figure><p>要开发Web应用程序，我们编辑pom.xml添加了spring-boot-starter-web依赖项</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure><p>如果再次运行mvn dependency:tree，您会发现现在有许多其他依赖项。</p><h3 id="3、写代码"><a href="#3、写代码" class="headerlink" title="3、写代码"></a>3、写代码</h3><p>默认情况下，Maven编译源代码src/main/java，因此您需要创建该文件夹结构，然后添加一个名为src/main/java/Example.java</p><p>包含以下代码的文件：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> org.springframework.boot.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.boot.autoconfigure.*;</span><br><span class="line"><span class="keyword">import</span> org.springframework.web.bind.annotation.*;</span><br><span class="line"></span><br><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@EnableAutoConfiguration</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Example</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/"</span>)</span><br><span class="line">    <span class="function">String <span class="title">home</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Hello World!"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        SpringApplication.run(Example.class, args);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注解说明：</p><p>@RestController：</p><p>这被称为构造型注释。它为阅读代码的人提供了提示，而为Spring提供了特定角色的提示。在这种情况下，我们的类是一个Web @Controller，因此Spring在处理传入的Web请求时会考虑它。</p><p>@RequestMapping：</p><p>注释提供“路由”的信息。它告诉Spring，任何带“/”路径的HTTP请求都应该映射到该home方法。该@RestController注解告诉Spring使得到的字符串直接返回给调用者。</p><p>@EnableAutoConfiguration：</p><p>这个注释告诉Spring Boot根据你添加的jar依赖关系“猜测”你想要如何配置Spring。自从spring-boot-starter-web添加了Tomcat和Spring MVC 以来，自动配置假定您正在开发Web应用程序并相应地设置Spring。</p><p>mian()方法：</p><p>遵循应用程序入口点的Java约定的标准方法。我们的main方法SpringApplication通过调用委托给Spring Boot的类run。 SpringApplication引导我们的应用程序，启动Spring，然后启动自动配置的Tomcat Web服务器。我们需要Example.class作为参数传递给run方法，以告诉SpringApplication哪个是主要的Spring组件。该args数组也被传递以公开任何命令行参数。</p><h3 id="4、运行示例"><a href="#4、运行示例" class="headerlink" title="4、运行示例"></a>4、运行示例</h3><p>在当前maven项目下运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ mvn spring-boot:run</span><br><span class="line"></span><br><span class="line">  .   ____          _            __ _ _</span><br><span class="line"> &#x2F;\\ &#x2F; ___&#39;_ __ _ _(_)_ __  __ _ \ \ \ \</span><br><span class="line">( ( )\___ | &#39;_ | &#39;_| | &#39;_ \&#x2F; _&#96; | \ \ \ \</span><br><span class="line"> \\&#x2F;  ___)| |_)| | | | | || (_| |  ) ) ) )</span><br><span class="line">  &#39;  |____| .__|_| |_|_| |_\__, | &#x2F; &#x2F; &#x2F; &#x2F;</span><br><span class="line"> &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|_|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|___&#x2F;&#x3D;&#x2F;_&#x2F;_&#x2F;_&#x2F;</span><br><span class="line"> :: Spring Boot ::  (v2.1.3.RELEASE)</span><br><span class="line">....... . . .</span><br><span class="line">....... . . . (log output here)</span><br><span class="line">....... . . .</span><br><span class="line">........ Started Example in 2.222 seconds (JVM running for 6.514)</span><br></pre></td></tr></table></figure><p>打开Web浏览器访问地址：<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080</a></p><p>您应该看到以下输出：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Hello World!</span><br></pre></td></tr></table></figure><p>正常退出程序，请按：Ctrl + C</p><h3 id="5、创建一个可执行的Jar"><a href="#5、创建一个可执行的Jar" class="headerlink" title="5、创建一个可执行的Jar"></a>5、创建一个可执行的Jar</h3><p>要创建可执行jar，我们需要添加spring-boot-maven-plugin到我们的pom.xml</p><p>在dependencies部分下方插入以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-maven-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br></pre></td></tr></table></figure><p>保存pom.xml并从命令行运行mvn package</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ mvn package</span><br><span class="line"></span><br><span class="line">[INFO] Scanning for projects...</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] Building myproject 0.0.1-SNAPSHOT</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] .... ..</span><br><span class="line">[INFO] --- maven-jar-plugin:2.4:jar (default-jar) @ myproject ---</span><br><span class="line">[INFO] Building jar: &#x2F;Users&#x2F;developer&#x2F;example&#x2F;spring-boot-example&#x2F;target&#x2F;myproject-0.0.1-SNAPSHOT.jar</span><br><span class="line">[INFO]</span><br><span class="line">[INFO] --- spring-boot-maven-plugin:2.1.3.RELEASE:repackage (default) @ myproject ---</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br><span class="line">[INFO] BUILD SUCCESS</span><br><span class="line">[INFO] ------------------------------------------------------------------------</span><br></pre></td></tr></table></figure><p>如果你查看target目录，你应该看到myproject-0.0.1-SNAPSHOT.jar。该文件大小应为10 MB左右。如果你想查看内部，你可以使用jar tvf，如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jar tvf target&#x2F;myproject-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p>您还应该看到目录中命名myproject-0.0.1-SNAPSHOT.jar.original的文件小得多target。这是Maven在Spring Boot重新打包之前创建的原始jar文件。</p><p>要运行该应用程序，请使用以下java -jar命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar target&#x2F;myproject-0.0.1-SNAPSHOT.jar</span><br></pre></td></tr></table></figure><p>正常退出程序，请按：Ctrl + C</p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> springboot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WSL2的安装</title>
      <link href="/2020/05/07/WSL2-install/"/>
      <url>/2020/05/07/WSL2-install/</url>
      
        <content type="html"><![CDATA[<p>WSL 2 的安装说明：<a href="https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-install" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/wsl/wsl2-install</a></p><h2 id="1、Windows-10-进行版本升级"><a href="#1、Windows-10-进行版本升级" class="headerlink" title="1、Windows 10 进行版本升级"></a>1、Windows 10 进行版本升级</h2><p>升级到18917版本或更高版本</p><p>打开命令提示符并运行 ver 命令来检查 Windows 版本。</p><p>打开“Windows 设置”，选择“更新和安全”，在“Windows 更新”，点击检查更新，更新到新版本。</p><h2 id="2、加入Windows-预览体验计划"><a href="#2、加入Windows-预览体验计划" class="headerlink" title="2、加入Windows 预览体验计划"></a>2、加入Windows 预览体验计划</h2><p>如果没有版本升级的更新，选择“Windows 预览体验计划”，点击开始，登录Windows账号，并选择 “快速” 环或 “慢速” 环，即可收到新版本更新的提示</p><h2 id="3、启用-“虚拟机平台”-可选组件，并确保已启用-WSL"><a href="#3、启用-“虚拟机平台”-可选组件，并确保已启用-WSL" class="headerlink" title="3、启用 “虚拟机平台” 可选组件，并确保已启用 WSL"></a>3、启用 “虚拟机平台” 可选组件，并确保已启用 WSL</h2><p>通过在 PowerShell 中运行以下命令来执行此操作</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">dism.exe &#x2F;online &#x2F;enable-feature &#x2F;featurename:Microsoft-Windows-Subsystem-Linux &#x2F;all &#x2F;norestart</span><br><span class="line">dism.exe &#x2F;online &#x2F;enable-feature &#x2F;featurename:VirtualMachinePlatform &#x2F;all &#x2F;norestart</span><br></pre></td></tr></table></figure><p>请重新启动计算机以完成两个组件的安装。</p><h2 id="4、启用-WSL"><a href="#4、启用-WSL" class="headerlink" title="4、启用 WSL"></a>4、启用 WSL</h2><p>网址：<a href="https://docs.microsoft.com/zh-cn/windows/wsl/install-win10" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/wsl/install-win10</a></p><p>请在 Powershell 提示符下以具有管理员权限的身份运行此命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br></pre></td></tr></table></figure><p>出现提示时，重启计算机。</p><h2 id="5、安装所选的-Linux-分发版"><a href="#5、安装所选的-Linux-分发版" class="headerlink" title="5、安装所选的 Linux 分发版"></a>5、安装所选的 Linux 分发版</h2><p>打开 Microsoft Store，并选择你偏好的 Linux 分发版。</p><p>在分发版的页面中，选择“获取”</p><h2 id="6、完成分发版的初始化"><a href="#6、完成分发版的初始化" class="headerlink" title="6、完成分发版的初始化"></a>6、完成分发版的初始化</h2><p>网址：<a href="https://docs.microsoft.com/zh-cn/windows/wsl/initialize-distro" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/windows/wsl/initialize-distro</a></p><p>下载并安装分发版后，需要对新的分发版完成初始化</p><h3 id="启动分发版"><a href="#启动分发版" class="headerlink" title="启动分发版"></a>启动分发版</h3><p>若要完成新安装的分发版的初始化，请启动新实例。 为此，可以单击 Microsoft Store 应用中的“启动”按钮，或者从“开始”菜单启动分发版</p><p>首次运行新安装的分发版时，会打开一个控制台窗口，其中指出需要等待一两分钟时间来完成安装。</p><h3 id="设置新的-Linux-用户帐户"><a href="#设置新的-Linux-用户帐户" class="headerlink" title="设置新的 Linux 用户帐户"></a>设置新的 Linux 用户帐户</h3><p>安装完成后，系统会提示创建新的用户帐户（及其密码）。</p><p>此用户帐户用于启动分发版时默认登录的非管理员用户。</p><p>打开新的分发版实例时，系统不会提示你输入密码，但如果使用 sudo 提升了进程的权限，则需要输入密码，因此请确保选择一个容易记住的密码！</p><h3 id="更新和升级分发版的包"><a href="#更新和升级分发版的包" class="headerlink" title="更新和升级分发版的包"></a>更新和升级分发版的包</h3><p>大多数分发版随附了一个空的/精简的包目录。 我们强烈建议定期更新包目录，并使用分发版的首选包管理器升级已安装的包。 在 Debian/Ubuntu 上使用 apt：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade</span><br></pre></td></tr></table></figure><h2 id="7、使用命令行设置要由-WSL-2-支持的发行版"><a href="#7、使用命令行设置要由-WSL-2-支持的发行版" class="headerlink" title="7、使用命令行设置要由 WSL 2 支持的发行版"></a>7、使用命令行设置要由 WSL 2 支持的发行版</h2><p>1、查看每个发行版使用的 WSL 版本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --list --verbose 或 wsl -l -v</span><br></pre></td></tr></table></figure><p>2、设置发行版</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --set-version Ubuntu 2</span><br></pre></td></tr></table></figure><p>Ubuntu为你的发行版的实际名称</p><p>可以随时更改回 WSL 1，方法是运行与上面相同的命令，但将“2”替换为“1”。</p><p>3、设置 WSL 2 成为你的默认体系结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure><p>使你安装的任何新发行版均初始化为 WSL 2 发行版。</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>1、由于虚拟磁盘系统限制，无法完成请求的操作。虚拟硬盘文件必须是解压缩和未加密的，并且不能是稀疏的。</p><p>网址：<a href="https://github.com/microsoft/WSL/issues/4103" target="_blank" rel="noopener">https://github.com/microsoft/WSL/issues/4103</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">打开个人资料文件夹中的Ubuntu目录</span><br><span class="line"></span><br><span class="line">％USERPROFILE％\ AppData \ Local \ Packages \ CanonicalGroupLimited ...</span><br><span class="line"></span><br><span class="line">右键单击“ LocalState”，“属性”，“高级”，取消选择“压缩内容”。</span><br><span class="line"></span><br><span class="line">当它询问您是要仅应用于此文件夹还是应用于所有子文件夹和文件时，您可以说“仅此文件夹”，因为您要做的只是清除“ compress”标志。</span><br><span class="line"></span><br><span class="line">之后，该wsl --set-version命令应该起作用。</span><br></pre></td></tr></table></figure><p>2、在计算机的 BIOS 内已启用虚拟化</p><p>网址：<a href="https://jingyan.baidu.com/article/ab0b56305f2882c15afa7dda.html" target="_blank" rel="noopener">https://jingyan.baidu.com/article/ab0b56305f2882c15afa7dda.html</a></p><p>打开任务管理器，选择“性能”标签，点击左侧的“CPU”，查看“虚拟化”状态是否为已启用。</p><p>启用</p><ul><li>开机时按F2、F12、DEL、ESC等键就可以进入到BIOS</li><li>找到Configuration选项或者Security选项，</li><li>然后选择Virtualization，或者Intel Virtual Technology</li><li>将其值设置成：设置为Enabled</li><li>保存BIOS设置，重启计算机</li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微软商店点下载没反应</title>
      <link href="/2020/05/07/Microsoft-store-download/"/>
      <url>/2020/05/07/Microsoft-store-download/</url>
      
        <content type="html"><![CDATA[<h2 id="本人解决方案"><a href="#本人解决方案" class="headerlink" title="本人解决方案"></a>本人解决方案</h2><p>注销微软商店登录账号，重置 Microsoft Store 缓存，搜索应用，点击下载，重新登录，一般就会显示下载。</p><p>如没有出现下载，请检查以下相关配置是否正常，可重复几次（可能和本地的网络有关系）</p><h2 id="方案1"><a href="#方案1" class="headerlink" title="方案1"></a>方案1</h2><ul><li>下载及安装微软官方的应用商店检测工具，完成后重启电脑。</li><li>网址：<a href="http://aka.ms/diag_apps10" target="_blank" rel="noopener">http://aka.ms/diag_apps10</a></li></ul><h2 id="方案2"><a href="#方案2" class="headerlink" title="方案2"></a>方案2</h2><p>网址：<a href="https://support.microsoft.com/zh-cn/help/13765/microsoft-store-cant-find-or-install-app" target="_blank" rel="noopener">https://support.microsoft.com/zh-cn/help/13765/microsoft-store-cant-find-or-install-app</a></p><h3 id="重置-Microsoft-Store-缓存（推荐）"><a href="#重置-Microsoft-Store-缓存（推荐）" class="headerlink" title="重置 Microsoft Store 缓存（推荐）"></a>重置 Microsoft Store 缓存（推荐）</h3><p>按 Windows 徽标键 + R 以打开“运行”对话框，键入“wsreset.exe”，然后选择“确定”。</p><p>注意：</p><p>将打开一个空白的“命令提示符”窗口，在大约 10 秒钟后，该窗口将关闭并自动打开 Microsoft Store。</p><h3 id="重置您的应用商店-慎用"><a href="#重置您的应用商店-慎用" class="headerlink" title="重置您的应用商店(慎用)"></a>重置您的应用商店(慎用)</h3><p>在打开的“管理员：Windows Powershell”窗口中输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">get-appxpackage *store* | remove-Appxpackage</span><br></pre></td></tr></table></figure><p>再次安装：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">add-appxpackage -register &quot;C:\Program Files\WindowsApps\*Store*\AppxManifest.xml&quot; -disabledevelopmentmode</span><br></pre></td></tr></table></figure><h2 id="方案3"><a href="#方案3" class="headerlink" title="方案3"></a>方案3</h2><p>恢复原来的hosts文件，并在命令行中刷新DNS</p><h2 id="方案4"><a href="#方案4" class="headerlink" title="方案4"></a>方案4</h2><p>网址：<a href="https://www.pconline.com.cn/win10/1113/11135679.html" target="_blank" rel="noopener">https://www.pconline.com.cn/win10/1113/11135679.html</a></p><p>1、重新登录Win10商店</p><p>打开商店后，点击你的头像；<br>点击你的账户名称，进入账户页面；<br>点击你的账户名，然后点击“注销”；<br>再次点击头像图标，然后点击“登录”</p><p>2、检查Windows Update服务是否启动</p><h2 id="方案5"><a href="#方案5" class="headerlink" title="方案5"></a>方案5</h2><p>搜索IE，点击“设置”图标，点击“Internet 选项”，高级，确定勾选了“使用 TLS 1.2”，点击还原高级设置。重启电脑。</p>]]></content>
      
      
      <categories>
          
          <category> Windows使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>修改hosts文件</title>
      <link href="/2020/05/07/modify-hosts/"/>
      <url>/2020/05/07/modify-hosts/</url>
      
        <content type="html"><![CDATA[<h2 id="1、完美解决Github访问缓慢问题"><a href="#1、完美解决Github访问缓慢问题" class="headerlink" title="1、完美解决Github访问缓慢问题"></a>1、完美解决Github访问缓慢问题</h2><p>国内访问 GitHub 为什么很慢？</p><p>GitHub 的 CDN 域名遭到 DNS 污染，导致无法连接使用 GitHub 的加速分发服务器，才使得国内访问速度很慢。</p><p>如何解决 DNS 污染？</p><p>通过修改 Hosts 文件，将域名解析直接指向 IP 地址来绕过 DNS 的解析，以此解决污染问题。</p><p>解决步骤</p><p>1、访问 <a href="https://www.ipaddress.com/" target="_blank" rel="noopener">https://www.ipaddress.com/</a> 获取 github 最新的 ip 地址</p><p>2、修改 host 文件</p><p>文件路径：C:\Windows\System32\drivers\etc\host</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">192.30.253.112    github.com</span><br><span class="line">199.232.5.194   github.global.ssl.fastly.net</span><br><span class="line">99.84.240.40    d3c33hcgiwev3.cloudfront.net</span><br></pre></td></tr></table></figure><p>3、更新dns缓存</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ipconfig &#x2F;flushdns</span><br></pre></td></tr></table></figure><h2 id="hosts-原始文件"><a href="#hosts-原始文件" class="headerlink" title="hosts 原始文件"></a>hosts 原始文件</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># Copyright (c) 1993-2009 Microsoft Corp.</span><br><span class="line">#</span><br><span class="line"># This is a sample HOSTS file used by Microsoft TCP&#x2F;IP for Windows.</span><br><span class="line">#</span><br><span class="line"># This file contains the mappings of IP addresses to host names. Each</span><br><span class="line"># entry should be kept on an individual line. The IP address should</span><br><span class="line"># be placed in the first column followed by the corresponding host name.</span><br><span class="line"># The IP address and the host name should be separated by at least one</span><br><span class="line"># space.</span><br><span class="line">#</span><br><span class="line"># Additionally, comments (such as these) may be inserted on individual</span><br><span class="line"># lines or following the machine name denoted by a &#39;#&#39; symbol.</span><br><span class="line">#</span><br><span class="line"># For example:</span><br><span class="line">#</span><br><span class="line">#      102.54.94.97     rhino.acme.com          # source server</span><br><span class="line">#       38.25.63.10     x.acme.com              # x client host</span><br><span class="line"></span><br><span class="line"># localhost name resolution is handled within DNS itself.</span><br><span class="line"># 127.0.0.1       localhost</span><br><span class="line"># ::1             localhost</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Windows使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows使用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>曾国藩家训3</title>
      <link href="/2020/05/05/zgf-jiaxun3/"/>
      <url>/2020/05/05/zgf-jiaxun3/</url>
      
        <content type="html"><![CDATA[<h2 id="咸丰八年八月初三日"><a href="#咸丰八年八月初三日" class="headerlink" title="咸丰八年八月初三日"></a>咸丰八年八月初三日</h2><p>字谕纪泽儿:</p><p>八月一日刘曾<strong>撰</strong>来营，接尔第二号信并薛晓帆信，得悉家中四宅平安，<strong>至以为慰</strong>。</p><ul><li>撰：zhuàn，才能；写作，撰写；</li><li>至以为慰：使我非常的欣慰。如：惠书敬悉，甚以为慰；久不通函，至以为念。</li></ul><p>汝读《四书》无甚心得，<strong>由</strong>不能<strong>虚心涵泳</strong>，<strong>切己体察</strong>。朱子教人读书之法，此二语最为<strong>精当</strong>。</p><ul><li>由：原因，原由</li><li>虚心涵泳：谦虚，不自满；潜游；深入领会。</li><li>切己体察：密切联系自身，体会省察；体验观察。</li><li>精当：精确恰当</li></ul><p>尔现读《离娄》，即如《离娄》首章“<strong>上无道揆，下无法守</strong>”。吾往年读之，亦无甚警惕。近岁在外办事，乃知上之人必揆诸道，下之人必守乎法。若人人以道揆自许，从心而不从法，则下凌上矣。“<strong>爱人不亲</strong>”章，往年读之，不甚亲切。近岁阅历日久，乃知治人不治者，智不足也。此切已体察之一端也。</p><ul><li>揆：kuí，度（duó），揣测：揆度；道理，准则</li><li>爱人不亲：参考曾国藩家训2</li><li>离娄：参考文末补充</li></ul><p>涵泳二字最不易识，余尝以意测之。日:涵者，如春雨之润花，如清渠之溉稻。雨之润花，过小则难透，过大则<strong>离披</strong>，适中则<strong>涵濡</strong>而<strong>滋液</strong>;清渠之溉稻，过小则枯槁，过多则<strong>伤涝</strong>，适中则<strong>涵养</strong>而<strong>浡兴</strong>。</p><ul><li>离披:分散下垂貌；花枝分离</li><li>涵濡：滋润；沉浸。</li><li>滋液：汁液渗透。</li><li>伤涝：内涝成灾。</li><li>涵养：滋润养育</li><li>浡兴：旺盛的样子</li></ul><p>泳者，如鱼之游水，如人之<strong>濯足</strong>。程子谓<strong>鱼跃于渊</strong>，活泼泼地;庄子言<strong>濠梁观鱼</strong>，安知非乐?此鱼水之快也。左太冲有“<strong>濯足万里流</strong>”之句，苏子瞻有《夜卧濯足》诗，有《浴罢》诗，亦人性乐水者之一快也。</p><ul><li>濯：zhuó，洗</li><li>鸢飞戾天,鱼跃于渊：老鹰展翅飞上蓝天，鱼儿摇尾跃在深渊，指万物各得其所。</li><li>濠梁观鱼:濠梁在今安徽凤阳。在濠水的桥梁上观鱼。形容悠然自得。</li><li>左太冲：左思，字太冲。西晋著名文学家，其《三都赋》颇被当时称颂，造成“洛阳纸贵”。</li><li>振衣千仞冈，濯足万里流：在极高的山岗上整饬衣服,抖落衣服的灰尘,在长河中洗去脚上的污浊。</li><li>苏子瞻：苏轼，字子瞻、和仲，号铁冠道人、东坡居士，世称苏东坡、苏仙。北宋著名文学家、书法家、画家。</li></ul><p>善读书者须视书如水，而视此心如花，如稻、如鱼、如濯足，则涵泳二字，庶可得之于意言之表。尔读书易于解说文义，却不甚能深入，可就朱子涵泳体察二语悉心求之。</p><ul><li>故善于读书的人，就要视书如水，而把看书时的心情比作稻和花，让细水慢灌润物无声。像鱼游一样其乐无穷，乐在其中，像浴脚一样由表及里，温心愉悦。</li><li>切已体察，就是说将自身置到书中去体验，观察和品味，切不可读过看过，读了忘了，来个走马观花而无动于衷。</li></ul><p>邹叔明新刊地图甚好。余寄书左季翁，托购致十副。尔收得后，可好藏之。薛晓帆百两宜璧还。余有复信，可并交季翁也。此嘱。</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="《离娄》"><a href="#《离娄》" class="headerlink" title="《离娄》"></a>《离娄》</h3><p>圣人既竭目力焉，继之以规榘准绳；以为方员平直，不可胜用也。既竭耳力焉，继之以六律，正五音，不可胜用也。既竭心思焉，继之以不忍人之政；而仁覆天下矣。故曰：为高必因丘陵，为下必因川泽。</p><p>为政不因先王之道，可谓智乎？是以惟仁者，宜在高位;不仁而在高位，是播其恶于众也。上无道揆也，下无法守也；朝不信道，工不信度；君子犯义，小人犯刑，国之所存者，幸也。</p><p>故曰：城郭不完，兵甲不多，非国之灾也；田野不辟，货财不聚，非国之害也；上无礼，下无学，贼民兴，丧无日矣。</p><ul><li>圣人既已竭尽了视力，再加以圆规、曲尺、水准、墨线，来制作方、圆、平、直的东西，使这些东西用之不尽；既已竭尽了听力，又用六律来校正五音，使各种音阶应用无穷；既已竭尽了心思，再接着推行不忍心别人受苦的政策，使仁爱足以遍惠天下。所以说：筑高台必定要依傍山丘，掘深池必定要依傍河泽。</li><li>治理国政却不依靠先王之道，能称得上明智吗？因此，只有仁者才适宜处在领导地位，不仁的人如果处在领导地位，就会把他的罪恶传播给天下的百姓。在上者没有行为准则，在下者不守法规制度，朝廷不相信道义，工匠不相信尺度，官员触犯义理，百姓触犯刑律，这样的国家还能保存下来，那是侥幸。</li><li>所以说：城垒不坚固，武器甲胄不充足，不是国家的灾难；土地没有开垦，财物没有积蓄，不是国家的灾害。在上者不讲礼义，在下者没有学问，作乱的小人兴起，国家的灭亡就在眼前了。</li></ul><h3 id="濠梁观鱼"><a href="#濠梁观鱼" class="headerlink" title="濠梁观鱼"></a>濠梁观鱼</h3><p>庄子与惠子游于濠梁之上。<br>庄子曰：“儵鱼出游从容，是鱼之乐也？”<br>惠子曰：“子非鱼，安知鱼之乐？”<br>庄子曰：“子非我，安知我不知鱼之乐？”<br>惠子曰：“我非子，固不知子矣；子固非鱼也，子之不知鱼之乐，全矣。”<br>庄子曰：“请循其本。子曰‘汝安知鱼乐’云者，既已知吾知之而问我。我知之濠上也。”</p><h3 id="夜卧濯足"><a href="#夜卧濯足" class="headerlink" title="夜卧濯足"></a>夜卧濯足</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">夜卧濯足</span><br><span class="line">[宋] 苏轼</span><br><span class="line">长安大雪年，束薪抱衾裯。</span><br><span class="line">云安市无井，斗水宽百忧。</span><br><span class="line">今我逃空谷，孤城啸鸺鹠。</span><br><span class="line">得米如得珠，食菜不敢留。</span><br><span class="line">况有松风声，釜鬲鸣飕飕。</span><br><span class="line">瓦盎深及膝，时复冷暖投。</span><br><span class="line">明灯一爪剪，快若鹰辞鞲。</span><br><span class="line">天低瘴云重，地薄海气浮。</span><br><span class="line">土无重膇药，独以薪水瘳。</span><br><span class="line">谁能更包裹，冠履装沐猴。</span><br></pre></td></tr></table></figure><h3 id="浴罢"><a href="#浴罢" class="headerlink" title="浴罢"></a>浴罢</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">浴罢</span><br><span class="line">[宋] 许月卿</span><br><span class="line">浴罢披襟竹影斜，客中残暑散空花。</span><br><span class="line">人行窗外云无脚，月起林间灯映纱。</span><br><span class="line">举酒闻钟知近寺，谈诗食李却忘家。</span><br><span class="line">明朝又浴还来此，何秘开樽只煮茶。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>曾国藩家训2</title>
      <link href="/2020/05/01/zgf-jiaxun2/"/>
      <url>/2020/05/01/zgf-jiaxun2/</url>
      
        <content type="html"><![CDATA[<h2 id="咸丰八年七月二十一日，舟次樵舍下，去江西省城八十里"><a href="#咸丰八年七月二十一日，舟次樵舍下，去江西省城八十里" class="headerlink" title="咸丰八年七月二十一日，舟次樵舍下，去江西省城八十里"></a>咸丰八年七月二十一日，舟次樵舍下，去江西省城八十里</h2><p>字谕纪泽儿：</p><p>余此次出门，略<strong>载</strong>日记，即将日记封每次家信中。闻林文忠家书即系如此办法。尔在省仅至丁、左两家，余不<strong>轻出</strong>，<strong>足慰远怀</strong>。</p><ul><li>载：记载</li><li>轻出：轻易外出</li><li>足慰远怀：足够欣慰，永远记怀。远怀：远大的抱负</li></ul><p>读书之法，看、读、写、作四者每日不可缺一。看者，如尔去年看《史记》、《汉书》韩文、《近思录》，今年看《周易折中》之类是也。读者，如《四书》、《诗》、《书》、《易经》、《左传》诸经，《昭明文选》，李、杜、韩、苏之诗，韩、欧、曾、王之文，非高声朗诵则不能得其雄伟之概，非密咏恬吟则不能探其深远之韵。</p><ul><li>真正读书的方法是看、读、写、作合而为一,每天都应该这么去做。所谓看,就是博览群书,年年所读各不同。所谓的读,首先要根据作者与文体的不同而采取不同的方法,如李白、杜甫等的诗如果不是高声朗诵,很难领略其中雄伟的气慨,韩愈、欧阳修等的文章,如果不是反复斟酌,很难领会其中深远的韵味。</li></ul><p>譬之富家居积，看书则在外贸易，获利三倍者也；读书则在家慎守，不轻花费者也。譬之兵家战争，看书则攻城略地，开拓土宇者也；读书则深沟坚垒，得地能守者也。看书如子夏之“日知所亡”相近，读书与“无忘所能”相近，二者不可偏废。</p><ul><li>拿致富持家来打比方,看书好比通过做生意来收获财富,读书则如利用勤俭持家来减少开支。拿战争来作比喻,看书相当于攻城略地,读书却好似坚壁固守。看书能够让人获得知识,明白道理,读书能够让人掌握技能,开拓创新。二者相辅相承,互为补益。</li><li>子夏：孔子的弟子。</li><li>子夏曰：日知其所亡，月无忘其所能，可谓，好学也已矣。<ul><li>每天知道过去所不知道的知识，每月不忘记已经掌握的东西。</li></ul></li></ul><p>至于写字，真、行、篆、隶，尔颇好之，切不可间断一日。既要求好，又要求快。余生平因作字迟钝吃亏不少，尔须力求敏捷，每日能作楷书万则几矣。至于作诸文，亦宜在二三十岁立定<strong>规模</strong>，过三十后则长进极难。作四书文，作试帖诗，作律赋，作古今体诗，作古文，作骈体文，数者不可不一一<strong>讲求</strong>，一一<strong>试</strong>为之。少年不可怕<strong>丑</strong>，须有<strong>狂者</strong>进取之<strong>趣</strong>，过时不试为之，则后此<strong>弥</strong>不肯为矣。</p><ul><li>规模：规划，计划。制度，程式。</li><li>讲求：修习研究</li><li>试：尝试，非正式的去做</li><li>丑：不光荣</li><li>狂者：志向高远，勇于进取之人</li><li>趣：意向</li><li>弥：更加</li></ul><p>至于作人之道，圣贤千言万语，大抵不外敬、恕二字。“<strong>仲弓问仁</strong>”一章，言敬、恕最为亲切。自此以外，<strong>如立则见其参于前也，在舆则见其倚于衡也</strong>。</p><ul><li>仲弓问仁：见补充1</li><li>子张问行：见补充2</li></ul><p>君子无众寡，无大小，无敢慢，<strong>斯为泰而不骄</strong>;正其衣冠，俨然人望而畏，<strong>斯为威而不猛</strong>。是皆言敬之最好下手者。</p><ul><li>君子对人，无论多少，势力大小，都不怠慢他们，这不就是庄重而不傲慢吗?君子衣冠整齐，目不邪视，使人见了就让人生敬畏之心，这不也是威严而不凶猛吗?”</li></ul><p>孔言<strong>欲立立人，欲达达人</strong>;孟言<strong>行有不得，反求诸己</strong>。</p><ul><li>欲立立人，欲达达人：见补充4</li><li>行有不得，反求诸己：见补充5</li></ul><p><strong>以仁存心，以礼存心</strong>，<strong>有终身之忧，无一朝之患</strong>。是皆言恕之最好下手者。</p><ul><li>以仁存心，以礼存心：见补充6</li><li>君子有终身的忧虑，没有一时的担心。智慧的人，只有对前途的忧虑，没有对一时一事得失的忧患。目光短浅、斤斤计较眼前利益的人是难以有成就的。</li></ul><p>尔心境明白，于恕字或易著功，敬字则宜勉强行之。此立德之基，不可不谨。</p><p>科场在即，亦宜保养身体。余在外平安，不多及。</p><p>再，此次日记已封入澄侯叔函中寄至家矣。余自十二至湖口，十九夜五更开船晋江西省，二十一申刻至章门。余不多及。又示。</p><h2 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h2><h3 id="1、论语·颜渊篇第二章"><a href="#1、论语·颜渊篇第二章" class="headerlink" title="1、论语·颜渊篇第二章"></a>1、论语·颜渊篇第二章</h3><p>仲弓问仁。子曰：“出门如见大宾，使民如承大祭;己所不欲，勿施于人;在邦无怨，在家无怨。”<br>仲弓曰：“雍虽不敏，请事斯语矣。”</p><ul><li>仲弓问怎样做才是仁。孔子说：“出门办事如同去接待贵宾，使唤百姓如同去进行重大的祭祀，(都要认真严肃)。自己不愿意要的，不要强加于别人;做到在诸侯的朝廷上没人怨恨(自己);在卿大夫的封地里也没人怨恨(自己)。”仲弓说：“我虽然笨，也要照您的话去做。”</li></ul><h3 id="2、论语·卫灵公篇第六章"><a href="#2、论语·卫灵公篇第六章" class="headerlink" title="2、论语·卫灵公篇第六章"></a>2、论语·卫灵公篇第六章</h3><p>子张问行。子曰“言忠信，行笃敬，虽蛮貊之邦，行矣。言不忠信，行不笃敬，虽州里，行乎哉?立则见其参于前也，在舆则见其倚于衡也，夫然后行。”子张书诸绅</p><ul><li>子张问如何才能使自己到处都能行得通。孔子说：“说话要忠信，行事要笃敬，即使到了蛮貊地区，也可以行得通。说话不忠信，行事不笃敬，就是在本乡本土，能行得通吗?站着，就仿佛看到忠信笃敬这几个字显现在面前，坐车，就好像看到这几个字刻在车辕前的横木上，这样才能使自己到处行得通。”子张把这些话写在腰带上。</li></ul><h3 id="3、论语·尧曰篇第二章"><a href="#3、论语·尧曰篇第二章" class="headerlink" title="3、论语·尧曰篇第二章"></a>3、论语·尧曰篇第二章</h3><p>子张问孔子曰：“何如斯可以从政矣?”<br>子曰：“尊五美，屏四恶，斯可以从政矣。”<br>子张曰：“何谓五美?”<br>子曰：“君子惠而不费，劳而不怨，欲而不贪，泰而不骄，威而不猛。”<br>子张曰：“何谓惠而不费?”<br>子曰：“因民之所利而利之，斯不亦惠而不费乎?择可劳而劳之，又谁怨?欲仁而得仁，又焉贪? <strong>君子无众寡，无大小，无敢慢，斯不亦泰而不骄乎?君子正其衣冠，尊其瞻视，俨然人望而畏之，斯不亦威而不猛乎</strong>?”<br>子张曰：“何谓四恶?”<br>子曰：“不教而杀谓之虐;不戒视成谓之暴;慢令致期谓之贼;犹之与人也，出纳之吝谓之有司。”</p><ul><li>子张问孔子说：“怎样才可以治理政事呢?”孔子说：“尊重五种美德，排除四种恶政，这样就可以治理政事了。”</li><li>子张问：“五种美德是什么?”孔子说：“君子要给百姓以恩惠而自已却无所耗费;使百姓劳作而不使他们怨恨;要追求仁德而不贪图财利;庄重而不傲慢;威严而不凶猛。”</li><li>子张说：“怎样叫要给百姓以恩惠而自己却无所耗费呢?”孔子说：“让百姓们去做对他们有利的事，这不就是对百姓有利而不掏自己的腰包嘛!选择可以让百姓劳作的时间和事情让百姓去做。这又有谁会怨恨呢?自己要追求仁德便得到了仁，又还有什么可贪的呢?君子对人，无论多少，势力大小，都不怠慢他们，这不就是庄重而不傲慢吗?君子衣冠整齐，目不邪视，使人见了就让人生敬畏之心，这不也是威严而不凶猛吗?”</li><li>子张问：“什么叫四种恶政呢?”孔子说：“不经教化便加以杀戮叫做虐;不加告诫便要求成功叫做暴;不加监督而突然限期叫做贼，同样是给人财物，却出手吝啬，叫做小气。”</li></ul><h3 id="4、论语·雍也篇第三十章"><a href="#4、论语·雍也篇第三十章" class="headerlink" title="4、论语·雍也篇第三十章"></a>4、论语·雍也篇第三十章</h3><p>子贡曰：“如有博施于民而能济众，何如?可谓仁乎?”<br>子曰：“何事于仁?必也圣乎!尧舜其犹病诸。夫仁者，<strong>己欲立而立人，己欲达而达人</strong>。能近取譬，可谓仁之方也已。”</p><ul><li>子贡问孔子：“如果有人非常地博有，腾达，并且能够周济众人，救济民众。这个人怎么样？可以称为仁吗？”</li><li>孔子说：“岂止是仁，必须可以是圣啊！尧舜二帝也因为不能做到博施济众而感到愧对于民呀！可以称之为仁的人，一定是自己要先站稳，才能扶起摔倒的人，自己要先腾达，方能博施济众。只有从自己身边力所能及的事情做起，乐于助人，这才是可能通往仁的路。”</li></ul><h3 id="5、离娄上·第四章"><a href="#5、离娄上·第四章" class="headerlink" title="5、离娄上·第四章"></a>5、离娄上·第四章</h3><p>孟子曰：“爱人不亲，反其仁；治人不治，反其智；礼人不答，反其敬；<strong>行有不得者皆反求诸己</strong>，其身正而天下归之。《诗》云：永言配命，自求多福。”</p><ul><li>孟子说：“爱别人却得不到别人的亲近，那就应反问自己的仁爱是否够；管理别人却不能够管理好，那就应反问自己的管理才智是否有问题；礼貌待人却得不到别人相应的礼貌，那就应反问自己的礼貌是否得当；凡是行为得不到预期的效果，都应该反过来检查自己，自身行为端正了，天下的人自然就会归服。《诗经》说：常思虑自己的行为是否合乎天理，以求美好的幸福生活。”</li></ul><h3 id="6、离娄章句下·第二十八节"><a href="#6、离娄章句下·第二十八节" class="headerlink" title="6、离娄章句下·第二十八节"></a>6、离娄章句下·第二十八节</h3><p>孟子曰：“君子所以异于人者，以其存心也。<strong>君子以仁存心，以礼存心。仁者爱人，有礼者敬人。爱人者人恒爱之，敬人者人恒敬之。</strong></p><p>有人于此，其待我以横逆，则君子必自反也：我必不仁也，必无礼也，此物奚宜至哉？其自反而仁矣，自反而有礼矣，其横逆由是也，君子必自反也：我必不忠。自反而忠矣，其横逆由是也，君子曰：‘此亦妄人也已矣。如此则与禽兽奚择哉？于禽兽又何难焉？’</p><p><strong>是故，君子有终身之忧，无一朝之患也</strong>。乃若所忧则有之：舜人也，我亦人也。舜为法于天下，可传于后世，我由未免为乡人也，是则可忧也。忧之如何？如舜而已矣。</p><p>若夫君子所患则亡矣。非仁无为也，非礼无行也。如有一朝之患，则君子不患矣。”</p>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>曾国藩家训1</title>
      <link href="/2020/05/01/zgf-jiaxun1/"/>
      <url>/2020/05/01/zgf-jiaxun1/</url>
      
        <content type="html"><![CDATA[<h2 id="咸丰六年丙辰九月廿九夜，手谕，时在江西抚州门外"><a href="#咸丰六年丙辰九月廿九夜，手谕，时在江西抚州门外" class="headerlink" title="咸丰六年丙辰九月廿九夜，手谕，时在江西抚州门外"></a>咸丰六年丙辰九月廿九夜，手谕，时在江西抚州门外</h2><p>字谕纪泽儿:</p><p>家中人来营者多称尔举止大方，余为少慰。凡人多望子孙为大官，余不愿为大官，但愿为读书明理之君子。勤俭自持，习劳习苦，可以处乐，可以处约，此君子也。余服官二十年，不敢稍染官宦气习，饮食起居尚守寒素家风，极俭也可，略丰也可，太丰则吾不敢也。凡仕宦之家，由俭入奢易，由奢返俭难。尔年尚幼，切不可贪爱奢华，不可惯习懒情。无论大家小家，士农工商，勤苦俭约未有不兴，骄奢倦怠未有不败。尔读书写字不可间断，早晨要早起，莫坠高、曾、<strong>祖考</strong>以来相传之家风。吾父、吾叔皆黎明即起，尔之所知也。</p><p>凡富贵功名皆有命定，半由人力半由天事。惟学作圣贤全由自己作主，不与天命相干涉。吾有志学为圣贤，少时欠<strong>居敬工夫</strong>，至今犹不免偶有戏言戏动。尔宜举止端庄，言不妄发，则入<strong>德</strong>之基也。</p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ul><li>祖考：祖先</li><li>居敬工夫：居敬而行简，以恭敬自持，保持心的专一</li><li>德：好的品行</li></ul>]]></content>
      
      
      <categories>
          
          <category> 读书 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读书 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人事项管理</title>
      <link href="/2020/04/30/Todo/"/>
      <url>/2020/04/30/Todo/</url>
      
        <content type="html"><![CDATA[<h2 id="使用-Microsoft-TO-DO"><a href="#使用-Microsoft-TO-DO" class="headerlink" title="使用 Microsoft TO DO"></a>使用 Microsoft TO DO</h2><p>任务</p><p>大于20分钟，计划或将要去做的。每个任务可以拆成多个步骤。</p><p>属性:</p><ul><li>对于当天要完成的，请放在任务目录下。每日睡前进行检查。</li><li>对于一周以内要完成的任务，请放在Watch目录下。添加重要。</li><li>对于未来有计划，但是短期不紧急，放在Later目录下，添加截止日期。</li></ul><p>归档（是否需要回顾）</p><ol><li>日常生活经验的，记录到日记中。</li><li>对于工程项目，创建组和目录，当任务完成后则移动到对应目录下。待目录事项全部完成后，打印清单，结束。</li><li>无需归档的琐碎日常任务直接删除。</li></ol><p>注意事项</p><ol><li>保证我的一天聚焦于重要事件。</li><li>重复的事情一般与个人生活相关，放在个人目录下，在计划日程中进行查看。</li><li>当天完不成的任务，记录原因，制定更合理的任务计划，添加截止日期。</li><li>超出能力范围的任务，不耻下问，积极寻求解决方案，学会面对困难。</li><li>其他事情占用，孰重孰轻，一称便知。权衡利弊，争取利益最大化。</li></ol><p>表格：</p><table><thead><tr><th>列表</th><th>对应</th></tr></thead><tbody><tr><td>Today</td><td>我的一天</td></tr><tr><td>Done</td><td>已完成</td></tr><tr><td>Todo</td><td>任务</td></tr><tr><td>Watch</td><td>重要</td></tr><tr><td>Later</td><td>已计划日程</td></tr></tbody></table><h2 id="使用-Trello"><a href="#使用-Trello" class="headerlink" title="使用 Trello"></a>使用 Trello</h2><p>参考：</p><p><a href="https://baijiahao.baidu.com/s?id=1628120339350587264&wfr=spider&for=pc" target="_blank" rel="noopener">在Trello平台上，使用马克·安德森个人效率系统</a></p><p>制定严格的日程表，并努力坚持，但是这种精确严密的日程是有局限性的。<br>不做任何计划，完全缺乏组织性让人欠缺对工作的动力和责任感。</p><p>Trello的神奇之处在于，你可以在看板上完整地看到你的所有列表。所有的任务列表出现在你面前时，它的效果大于部分——你的列表变成了个人效率系统的一部分。</p><p>在Trello中，你可以新建看板、列表和任务卡。</p><ul><li>Board ：你可以把它看作是“列表的列表”，即工作区</li><li>List ：列表由一组按某种顺序排列的任务卡组成</li><li>Card ：组成列表的条目，是工作中的每一项任务。</li></ul><h3 id="创建你最重要的三个列表"><a href="#创建你最重要的三个列表" class="headerlink" title="创建你最重要的三个列表"></a>创建你最重要的三个列表</h3><p>Marc Andreessen的个人效率系统是一个极简主义的系统，只有三个核心任务清单</p><ul><li>当前任务列表(Todo)：包含所有需要优先完成的 must do（必须完成）任务。</li><li>留意任务列表(Watch)：包括所有现在需要做，但因为各种原因没法完成的任务，你需要密切关注。</li><li>推迟任务列表(Later)：你想做，但优先级不高的任务，可以推迟。</li></ul><p>这些列表的目的是帮助你分清轻重缓急，把重点放在重要的事情上。</p><p>当某个任务的优先级变高，就把它向上移动</p><h3 id="创建任务卡"><a href="#创建任务卡" class="headerlink" title="创建任务卡"></a>创建任务卡</h3><p>任务卡是Trello的核心，你可以给每张卡片添加描述、评论、附件、清单，还可以设置到期日。</p><h3 id="完整的工作流程"><a href="#完整的工作流程" class="headerlink" title="完整的工作流程"></a>完整的工作流程</h3><p>新建了两个列表：</p><ul><li>今日任务列表(Today)：包括今天我必须要完成的所有任务。</li><li>已完成列表(Done)：包括我今天已经完成的所有任务。</li></ul><p>具体流程</p><ul><li>在前一天晚上把 3-5 个任务卡移到 Today</li><li>工作开始后，每当我完成一项任务，我就把它挪到 Done</li><li>每当出现一项新任务，我就在 Todo 中新建任务</li><li>下班前，检查所有任务，确保已完成的任务都被移动到 Done 列表中</li><li>归档已完成列表中的所有任务卡</li><li>将等待进一步进展而未完成的任务卡移到 Watch 列表中</li><li>决定无限期地推迟一项任务，移动到 Later 列表</li></ul><h3 id="反任务清单"><a href="#反任务清单" class="headerlink" title="反任务清单"></a>反任务清单</h3><p>反任务清单指你不会把它写到三个核心列表中，但又非常有用的日常任务。</p><p>在完成某个非常有用的任务后，在 Done 列表中新建一张任务卡。比如去健身房、打扫房间、甚至是倒垃圾等</p><p>帮助自己养成使用任务列表的习惯</p>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>20200429</title>
      <link href="/2020/04/29/20200429/"/>
      <url>/2020/04/29/20200429/</url>
      
        <content type="html"><![CDATA[<h2 id="反思"><a href="#反思" class="headerlink" title="反思"></a>反思</h2><p>自己连着熬了几天夜，脑子空空，躺在床上玩手机。</p><p>整个人的思维都是很糟糕的，对生活没有掌控感，随波逐流，没有应对生活风波的能力。</p><p>对时间的流逝一无所知，沉迷于短暂的精神享乐，来逃避生活的艰难。</p><p>回头看看这一段时间都花费在哪里</p><p>先谈谈王者荣耀这款游戏吧，毕竟这是自己花费时间最多的地方。</p><p>内心渴望在游戏中那种无畏，勇敢，超神，拼杀的激情。自己可以凭借一局游戏化身拯救危局的救世主。</p><p>享受那种阶级碾压的感觉，享受那种虚拟的段位荣耀，女孩子的追捧。</p><p>享受那种对胜利的渴望。这就是最真实的人性。</p><p>而游戏恰恰放大了这些心理。将生活过程中的困难降低。</p><p>大部分的英雄只有3个主动技能，通过对英雄的技能的熟练掌握，包括指向性和范围性的技能。<br>借助智能施法，大大降低了用户的上手难度。只要认真练习几局，就可以掌握一个英雄的玩法。</p><p>打破孤独感，玩游戏的人一般更倾向于和自己的朋友或者认识新的朋友一起玩。即志同道合。<br>在玩游戏中，大家之间的配合和互动，在游戏中降低了孤独感。</p><p>也没有各种复杂的人情世故，各种生活规则的约束。即越简单的规则越容易获得快乐。<br>人的本性都是懒惰的。所以游戏才能给大家带来快乐。</p><p>人生如戏，戏如人生</p><p>戏如人生，可人不能陷入戏中不能自拔，当戏结束了，人终究要直面生活。<br>要始终明白，戏只是生活中调味剂。<br>真正的人生之戏要很努力努力，才能演出自己想的样子。</p><h2 id="时间管理"><a href="#时间管理" class="headerlink" title="时间管理"></a>时间管理</h2><p>管理是门很深的学问，也是个很浅显的东西。</p><p>管理的目的是要保障生态的健康和平衡发展。</p><p>最简单的就是衣食住行。穿衣，吃饭，住宿，出行。<br>这是每个人每天最基本的需求。我们怎么解决这几个问题，是我们最基本的诉求。</p><p>穿好看衣服，吃健康美味的食品，住宽敞舒适的房间，便捷的交通出行。<br>所有的努力追踪到底都是为这几点服务。</p><p>达则兼济天下，穷则独善其身。</p><p>我们首要解决的就是我们自己的生活保障。而现在社会，这些都通过金钱来保障。</p><p>所以如何赚钱成为我们最基本的诉求。这无可厚非。</p><p>有句话叫做你永远无法赚到你认知范围之外的钱。所以要想赚钱首先要做的就是开拓自己的认知和眼界。</p><p>多去尝试，多出去走走，多接触一些新的人群。千万不要拒绝和别人沟通。</p><p>人生永远没有无用的经验。关键是这些经验你是否能够真正转换成自己的生产力。</p><p>回到管理上，我们没钱的时候，但是我们有体力，智力和时间。这些都可以转化成金钱。</p><p>首先最基本的管理是身体健康管理，保障我们一个健康的身体是最重要的。</p><ul><li>每天要有按时的作息规律</li><li>每天要有规律的吃饭</li><li>每天要保证有充沛的精神（锻炼身体）</li></ul><p>知识的管理</p><ul><li>腹有诗书气自华，每天是否有看书</li><li>每天是否学到新的知识，是否有新的学习计划</li><li>是否有新的赚钱思路</li><li>是否尝试去掌握一项新的技能</li></ul><p>时间管理</p><ul><li>工作的时间就是上下班的时间，不要有加班的心理<ul><li>工作按照预期是否能够完成，是否能够接受延期</li><li>超期的原因是因为预期的时间过短，还是技术问题。</li><li>如何保证延期后任务的完成。</li></ul></li><li>学习的时间<ul><li>制定学习目标和计划</li><li>每天是否能够按照预定时间学习</li></ul></li></ul><p>情绪管理</p><ul><li>工作心态的调整<ul><li>在这里上班，首要的就是安心做好自己的工作</li><li>让自己在工作中变得更加成熟</li><li>让自己逐步学会处理棘手的工作问题</li><li>让自己变得不可或缺</li><li>让自己创造更大的价值</li></ul></li><li>生活的心态<ul><li>我每一天都要过得很开心充实</li><li>我不要随便生气，要努力去解决困难</li><li>我热爱我的生活</li><li>处理好和父母之间的沟通</li><li>去勇敢追求我自己喜欢的女孩子。</li></ul></li></ul><h2 id="读书笔记"><a href="#读书笔记" class="headerlink" title="读书笔记"></a>读书笔记</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">穿过独立的凋萎</span><br><span class="line">我们也要航行</span><br><span class="line">带着那种细致近乎晦涩的果敢</span><br><span class="line"></span><br><span class="line">--- 杨牧 《我们也要航行》</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01EasyExcel入门</title>
      <link href="/2020/04/27/EasyExcel-01/"/>
      <url>/2020/04/27/EasyExcel-01/</url>
      
        <content type="html"><![CDATA[<h2 id="EasyExcel概述"><a href="#EasyExcel概述" class="headerlink" title="EasyExcel概述"></a>EasyExcel概述</h2><p>EasyExcel是一个基于Java的简单、省内存的读写Excel的开源项目</p><p><a href="https://github.com/alibaba/easyexcel" target="_blank" rel="noopener">EasyExcel项目</a></p><p><a href="https://www.yuque.com/easyexcel/doc/easyexcel" target="_blank" rel="noopener">使用说明</a></p><p>推荐:</p><p><a href="https://mp.weixin.qq.com/s/T_xBuoYgj1NuM7_yHe084Q" target="_blank" rel="noopener">快速生成Excel</a></p><h2 id="使用入门"><a href="#使用入门" class="headerlink" title="使用入门"></a>使用入门</h2><p>1、引入 EasyExcel pom 依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>easyexcel<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.1.6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="web上传、下载"><a href="#web上传、下载" class="headerlink" title="web上传、下载"></a>web上传、下载</h2><p>案例代码:</p><p><a href="https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java" target="_blank" rel="noopener">https://github.com/alibaba/easyexcel/blob/master/src/test/java/com/alibaba/easyexcel/test/demo/web/WebTest.java</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 文件下载（失败了会返回一个有部分数据的Excel）</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;1. 创建excel对应的实体对象 参照&#123;<span class="doctag">@link</span> DownloadData&#125;</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;2. 设置返回的 参数</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;3. 直接写，这里注意，finish的时候会自动关闭OutputStream,当然你外面再关闭流问题不大</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@GetMapping</span>(<span class="string">"download"</span>)</span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(HttpServletResponse response)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">       <span class="comment">// 这里注意 有同学反应使用swagger 会导致各种问题，请直接用浏览器或者用postman</span></span><br><span class="line">       response.setContentType(<span class="string">"application/vnd.ms-excel"</span>);</span><br><span class="line">       response.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">       <span class="comment">// 这里URLEncoder.encode可以防止中文乱码 当然和easyexcel没有关系</span></span><br><span class="line">       String fileName = URLEncoder.encode(<span class="string">"测试"</span>, <span class="string">"UTF-8"</span>);</span><br><span class="line">       response.setHeader(<span class="string">"Content-disposition"</span>, <span class="string">"attachment;filename="</span> + fileName + <span class="string">".xlsx"</span>);</span><br><span class="line">       EasyExcel.write(response.getOutputStream(), DownloadData.class).sheet(<span class="string">"模板"</span>).doWrite(data());</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * 文件上传</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;1. 创建excel对应的实体对象 参照&#123;<span class="doctag">@link</span> UploadData&#125;</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;2. 由于默认一行行的读取excel，所以需要创建excel一行一行的回调监听器，参照&#123;<span class="doctag">@link</span> UploadDataListener&#125;</span></span><br><span class="line"><span class="comment">    * &lt;p&gt;3. 直接读即可</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="meta">@PostMapping</span>(<span class="string">"upload"</span>)</span><br><span class="line">   <span class="meta">@ResponseBody</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> String <span class="title">upload</span><span class="params">(MultipartFile file)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">       EasyExcel.read(file.getInputStream(), UploadData.class, <span class="keyword">new</span> UploadDataListener(uploadDAO)).sheet().doRead();</span><br><span class="line">       <span class="keyword">return</span> <span class="string">"success"</span>;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> EasyExcel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01EasyUI入门</title>
      <link href="/2020/04/15/easyui01/"/>
      <url>/2020/04/15/easyui01/</url>
      
        <content type="html"><![CDATA[<h2 id="EasyUI概述"><a href="#EasyUI概述" class="headerlink" title="EasyUI概述"></a>EasyUI概述</h2><p><a href="http://www.jeasyui.net/" target="_blank" rel="noopener">Jquery EasyUI中文网</a></p><p>推荐：</p><p><a href="https://blog.csdn.net/luoluozlb/article/details/53648705" target="_blank" rel="noopener">EasyUI的下载与使用</a></p><p><a href="https://www.cnblogs.com/xdp-gacl/category/571424.html" target="_blank" rel="noopener">Jquery EasyUI学习使用总结</a></p><p><a href="http://www.cnblogs.com/zjfjava/p/6836912.html" target="_blank" rel="noopener">EasyUI 使用——基本概念</a></p><h2 id="一、解压包中各个目录的说明"><a href="#一、解压包中各个目录的说明" class="headerlink" title="一、解压包中各个目录的说明"></a>一、解压包中各个目录的说明</h2><p>1、demo</p><p>demo目录是EasyUI各个组件的演示例子。</p><p>2、demo-mobile</p><p>这个目录是EasyUI各个组件在移动端开发的演示例子。</p><p>3、locale</p><p>这个目录是EasyUI对于各个国家的语言包。</p><ul><li>简体中文的语言包是：easyui-lang-zh_CN.js，</li><li>繁体中文的语言包是：easyui-lang-zh_TW.js，</li><li>英语的语言包（默认）：easyui-lang-en.js</li></ul><p>4、plugins</p><p>此目录的EasyUI使用的插件js代码</p><p>5、src</p><p>此目录是部分EasyUI插件的js源码。</p><p>6、themes</p><p>此目录是EasyUI主题文件。</p><p>7、根目录</p><p>根目录下的文件有：</p><table><thead><tr><th>文件</th><th>说明</th></tr></thead><tbody><tr><td>changlog.txt</td><td>EasyUI版本更新说明。</td></tr><tr><td>easyloader.js</td><td>EasyUI的模块加载器，用来自动帮助自动加载EasyUI文件。</td></tr><tr><td>jquery.easyui.min.js</td><td>全部easyui核心和插件的集合文件，一般可以直接加载这个文件而不用一个个加载那些插件。</td></tr><tr><td>jquery.easyui.mobile.min.js</td><td>同上，不同的是适用于移动端的。</td></tr><tr><td>jquery.min.js</td><td>jQuery库文件，因为EasyUI是基于jQuery的，所以也得加载jQuery文件。</td></tr><tr><td>license_freeware.txt</td><td>免费使用EasyUI的声明（只能用于非盈利目的）。</td></tr><tr><td>readme.txt</td><td>商业用途许可说明。</td></tr></tbody></table><h2 id="二、加载EasyUI"><a href="#二、加载EasyUI" class="headerlink" title="二、加载EasyUI"></a>二、加载EasyUI</h2><p>通常情况下，我们只需要加载几个文件就够了：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"easyui/themes/default/easyui.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"easyui/themes/icon.css"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"easyui/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"easyui/jquery.easyui.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>第一个和第二个是主题的css样式文件，上面的代码是使用默认主题，我们也很容易切换到其他主题，只要修改defult即可。</p><p>第三个是jQuery库文件，一般使用EasyUI解压包里面的jQuery文件即可。</p><p>第四个是EasyUI核心和组件的集合js文件，加载这个文件会加载所有的EasyUI组件，就不需要一个个导入组件的js文件了。</p><p>我们也可以使用EasyUI的EasyLoader插件，这个插件可以帮助我们自定义加载EasyUI模块。</p><h2 id="三、使用EasyUI的组件的方法"><a href="#三、使用EasyUI的组件的方法" class="headerlink" title="三、使用EasyUI的组件的方法"></a>三、使用EasyUI的组件的方法</h2><p>一般有两种方式来使用EasyUI组件。</p><p>1、通过在html元素直接设置class为EasyUI组件预定义的名称即可，EasyUI就会自动在页面加载时为元素渲染样式。</p><p>例子：我们来创建一个面板（panel）：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"easyui-panel"</span> <span class="attr">style</span>=<span class="string">"width:500px;height:200px;padding:10px"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">title</span>=<span class="string">"我的面板"</span> <span class="attr">data-options</span>=<span class="string">"iconCls:'icon-ok',collapsible:true"</span>&gt;</span></span><br><span class="line">    创建的第一个面板</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、通过js代码来使用EasyUI组件。使用方法：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'selector'</span>).plugin();</span><br></pre></td></tr></table></figure><p>即先通过jQuery选定要渲染的元素，然后调用相应的组件即可，这里的plugin是组件的名字。</p><p>例子：用js使用EasyUI的面板组件：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"my-panel"</span> <span class="attr">style</span>=<span class="string">"padding:10px"</span>&gt;</span></span><br><span class="line">    创建的第一个面板</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>js代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    $(<span class="string">"#my-panel"</span>).panel(&#123;</span><br><span class="line">        width:<span class="number">500</span>,</span><br><span class="line">        height:<span class="number">200</span>,</span><br><span class="line">        title:<span class="string">'我的面板'</span>,</span><br><span class="line">        iconCls:<span class="string">'icon-ok'</span>,</span><br><span class="line">        collapsible:<span class="literal">true</span></span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="补充"><a href="#补充" class="headerlink" title="补充"></a>补充</h3><p>1、collapsible</p><p>boolean 定义是否显示折叠按钮</p><p>2、modal: true</p><p>窗体分为模式的和非模式的。以模式方式打开一个窗口,你只能在将其关闭以后才能操作另外的窗口，但非模式窗口显示时,你可以同时操作这两个窗口。</p><p>3、icon.css</p><p>只有引入这个样式文件，才可以显示对应的图标。</p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> EasyUI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> EasyUI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>06文章归类</title>
      <link href="/2020/04/13/article-classify/"/>
      <url>/2020/04/13/article-classify/</url>
      
        <content type="html"><![CDATA[<h2 id="文章类别和标签"><a href="#文章类别和标签" class="headerlink" title="文章类别和标签"></a>文章类别和标签</h2><p>归类说明：</p><ol><li>文章归类是为了更加条理化的组织知识，所以每一个类都应该可以看做是一个系列文章。</li><li>标签具有更明确的标识意义，标签默认与类名称相同。</li><li>文章暂时不能在当前类中被进一步分类的时候，就放在父类中。一个标签与父类名称相同，一个标签来描述自身名称。</li><li>文章如果已经细分到子类，则标签默认与子类名称相同，根据情况决定是否添加新的标签。</li><li>每一篇文章一定要有一个标签说明。</li></ol><h2 id="将一个系列的文章整理到同一个文件夹"><a href="#将一个系列的文章整理到同一个文件夹" class="headerlink" title="将一个系列的文章整理到同一个文件夹"></a>将一个系列的文章整理到同一个文件夹</h2><p>操作说明：</p><ol><li>将一个系列的相关文章移动到同一个文件夹</li><li>这个文件夹的路径要和文章里的 <code>date</code> 的日期一致</li><li>更改每篇文章里的 <code>date</code>  属性，保证每一篇文章的时间都不一样，按照文章先后顺序设置。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>05docsify快速入门</title>
      <link href="/2020/04/13/docsify-started/"/>
      <url>/2020/04/13/docsify-started/</url>
      
        <content type="html"><![CDATA[<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>官方文档：<a href="https://docsify.js.org/" target="_blank" rel="noopener">https://docsify.js.org/</a></p><p>建议全局安装 <code>docsify-cli</code> ，这有助于在本地初始化和预览网站</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i docsify-cli -g</span><br></pre></td></tr></table></figure><p>如果要在 <code>./docs</code> 子目录中编写文档，则可以使用 <code>init</code> 命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docsify init ./docs</span><br></pre></td></tr></table></figure><p>目录 <code>./docs</code> 的文件如下</p><ul><li><code>index.html</code> 作为入口文件</li><li><code>README.md</code> 作为主页</li><li><code>.nojekyll</code> 防止GitHub Pages忽略以下划线开头的文件</li></ul><p>运行查看</p><p>使用 <code>docsify serve</code> 运行本地服务器。在浏览器中预览站点：<a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docsify serve docs</span><br></pre></td></tr></table></figure><h2 id="创建多个页面"><a href="#创建多个页面" class="headerlink" title="创建多个页面"></a>创建多个页面</h2><p>如果需要更多页面，只需在目录中创建更多markdown文件即可。</p><p>例如：</p><p>创建一个名为 <code>guide.md</code> 的文件，通过 <code>/#/guide</code> 即可访问该文件</p><p>目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">└── docs</span><br><span class="line">    ├── README.md</span><br><span class="line">    ├── guide.md</span><br><span class="line">    └── zh-cn</span><br><span class="line">        ├── README.md</span><br><span class="line">        └── guide.md</span><br></pre></td></tr></table></figure><p>匹配路线</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docs&#x2F;README.md        &#x3D;&gt; http:&#x2F;&#x2F;domain.com</span><br><span class="line">docs&#x2F;guide.md         &#x3D;&gt; http:&#x2F;&#x2F;domain.com&#x2F;#&#x2F;guide</span><br><span class="line">docs&#x2F;zh-cn&#x2F;README.md  &#x3D;&gt; http:&#x2F;&#x2F;domain.com&#x2F;#&#x2F;zh-cn&#x2F;</span><br><span class="line">docs&#x2F;zh-cn&#x2F;guide.md   &#x3D;&gt; http:&#x2F;&#x2F;domain.com&#x2F;#&#x2F;zh-cn&#x2F;guide</span><br></pre></td></tr></table></figure><h2 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h2><p>在 <code>index.html</code> 文件中设置 <code>loadSidebar: true</code> 属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.$docsify = &#123;</span></span><br><span class="line"><span class="actionscript">    loadSidebar: <span class="literal">true</span></span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建文件 <code>_sidebar.md</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- docs&#x2F;_sidebar.md --&gt;</span><br><span class="line"></span><br><span class="line">* [Home](&#x2F;)</span><br><span class="line">* [Guide](guide.md)</span><br></pre></td></tr></table></figure><h3 id="嵌套侧边栏"><a href="#嵌套侧边栏" class="headerlink" title="嵌套侧边栏"></a>嵌套侧边栏</h3><p>_sidebar.md从每个级别目录加载。如果当前目录没有_sidebar.md，它将退回到上级目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- docs&#x2F;zh-cn&#x2F;_sidebar.md --&gt;</span><br><span class="line"></span><br><span class="line">* [首页](zh-cn&#x2F;)</span><br><span class="line">* [指南](zh-cn&#x2F;guide.md &quot;The greatest guide in the world&quot;)</span><br></pre></td></tr></table></figure><h3 id="设置页面标题"><a href="#设置页面标题" class="headerlink" title="设置页面标题"></a>设置页面标题</h3><p>页面的 <code>title</code> 标签是根据所选的侧边栏项目名称生成的。为了获得更好的SEO，您可以通过在文件名后指定字符串来自定义标题。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>创建完成后<code>_sidebar.md</code>，边栏内容将根据markdown文件中的标题自动生成。</p><p>可以通过设置 <code>subMaxLevel: 2</code> 来配置生成目录的层级。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.$docsify = &#123;</span></span><br><span class="line"><span class="actionscript">    loadSidebar: <span class="literal">true</span>,</span></span><br><span class="line">    subMaxLevel: 2</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h2><p>设置 <code>loadNavbar: true</code> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.$docsify = &#123;</span></span><br><span class="line"><span class="actionscript">    loadNavbar: <span class="literal">true</span></span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建 <code>_navbar.md</code> 来自定义导航,通过缩进创建父子关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- _navbar.md --&gt;</span><br><span class="line"></span><br><span class="line">* [Translations](&#x2F;)</span><br><span class="line">  * [English](&#x2F;)</span><br><span class="line">  * [中文](&#x2F;zh-cn&#x2F;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
            <tag> docsify </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重新出发2020</title>
      <link href="/2020/04/10/restart-2020/"/>
      <url>/2020/04/10/restart-2020/</url>
      
        <content type="html"><![CDATA[<h2 id="走出阴霾"><a href="#走出阴霾" class="headerlink" title="走出阴霾"></a>走出阴霾</h2><p>今天再大的事，到了明天就是小事；<br>今年再大的事，到了明年就是故事。<br>我们都会成为有故事的人，却不能一直停留在故事里。</p><p>成长就是你得学会为自己的一言一行，为自己的决定负责任。<br>你是一个男人，男人就得顶天立地，无所畏惧。<br>想做的事情就要勇敢的去做，喜欢的人就要勇敢的去追，犹豫就会败北。</p><h2 id="坚持去做"><a href="#坚持去做" class="headerlink" title="坚持去做"></a>坚持去做</h2><p>你不去做永远变不成你羡慕的那个人。</p><p>一年时光是何其的短暂，一年只有4季，每季只有3月，稍纵即逝。</p><p>4月上旬已过去，留给你还有多少时间去改变呢？</p><p>从今天开始坚持每天学习，坚持每天锻炼，要在今年学会口琴。</p><p>拼搏到无能为力，努力到感动自己。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swagger2使用</title>
      <link href="/2019/12/10/Swagger2%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/12/10/Swagger2%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、工程创建"><a href="#一、工程创建" class="headerlink" title="一、工程创建"></a>一、工程创建</h2><p>创建一个 Spring Boot 项目，加入 web 依赖，创建成功后，加入两个 Swagger2 相关的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、Swagger2-配置"><a href="#二、Swagger2-配置" class="headerlink" title="二、Swagger2 配置"></a>二、Swagger2 配置</h2><p>Swagger2 的配置也是比较容易的，在项目创建成功之后，只需要开发者自己提供一个 Docket 的 Bean 即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">createRestApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .pathMapping(<span class="string">"/"</span>)</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"io.longlong.controller"</span>))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build().apiInfo(<span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                        .title(<span class="string">"项目名称"</span>)</span><br><span class="line">                        .description(<span class="string">"项目简介"</span>)</span><br><span class="line">                        .version(<span class="string">"1.0"</span>)</span><br><span class="line">                        .contact(<span class="keyword">new</span> Contact(<span class="string">"long long"</span>,<span class="string">"https://woilanlan.github.io"</span>,<span class="string">"test@gmail.com"</span>))</span><br><span class="line">                        .license(<span class="string">"The Apache License"</span>)</span><br><span class="line">                        .licenseUrl(<span class="string">"https://woilanlan.github.io"</span>)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里提供一个配置类，首先通过 @EnableSwagger2 注解启用 Swagger2 ，然后配置一个 Docket Bean，这个 Bean 中，配置映射路径和要扫描的接口的位置，</p><p>在 apiInfo 中，主要配置一下 Swagger2 文档网站的信息，例如网站的 title，网站的描述，联系人的信息，使用的协议等等。</p><p>启动项目，访问 <a href="http://localhost:8080/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/swagger-ui.html</a> 进行查看</p><h2 id="三、创建接口"><a href="#三、创建接口" class="headerlink" title="三、创建接口"></a>三、创建接口</h2><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Api</span>(tags = <span class="string">"用户管理相关接口"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/users"</span>)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"查询所有用户的接口"</span>)</span><br><span class="line">    <span class="meta">@ApiImplicitParams</span>(&#123;</span><br><span class="line">            <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"page"</span>,value = <span class="string">"页码"</span>,defaultValue = <span class="string">"1"</span>),</span><br><span class="line">            <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"count"</span>,value = <span class="string">"每页显示几条"</span>,defaultValue = <span class="string">"5"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getAllUser</span><span class="params">(@RequestParam(defaultValue = <span class="string">"1"</span>)</span> Integer page, @<span class="title">RequestParam</span><span class="params">(defaultValue = <span class="string">"5"</span>)</span> Integer count)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"getAllUser"</span>);</span><br><span class="line">        <span class="keyword">return</span> userService.getAllUser(page,count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/user/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"根据id查询用户的接口"</span>)</span><br><span class="line">    <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"id"</span>, value = <span class="string">"用户id"</span>, required = <span class="keyword">true</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserById</span><span class="params">(@PathVariable Integer id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.getUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"新增用户的接口"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUser</span><span class="params">(@RequestBody User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = userService.addUser(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"添加成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注解说明：</p><ul><li>@Api 注解可以用来标记当前 Controller 的功能。</li><li>@ApiOperation 注解用来标记一个方法的作用。</li><li>@ApiImplicitParam 注解用来描述一个参数，可以配置参数的中文含义，也可以给参数设置默认值，这样在接口测试的时候可以避免手动输入。</li><li>如果有多个参数，则需要使用多个 @ApiImplicitParam 注解来描述，多个 @ApiImplicitParam 注解需要放在一个 @ApiImplicitParams 注解中。</li><li>需要注意的是，@ApiImplicitParam 注解中虽然可以指定参数是必填的，但是却不能代替 @RequestParam(required = true) ，前者的必填只是在 Swagger2 框架内必填，抛弃了 Swagger2 ，这个限制就没用了，所以假如开发者需要指定一个参数必填， @RequestParam(required = true) 注解还是不能省略。</li><li>如果参数是一个对象（例如上文的更新接口），对于参数的描述也可以放在实体类中。</li></ul><p>user.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"id"</span>)</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"姓名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"年龄"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"邮箱"</span>)</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刷新刚刚打开的页面，可以看到相关的接口描述</p><p>参数类型下面标记</p><ul><li>query 表示参数以 key/value 的形式传递</li><li>body 表示参数以请求体的方式传递，例如上文的新增接口</li><li>path 表示参数放在路径中传递，例如根据 id 查询用户的接口</li></ul><h2 id="四、在-Security-中的配置"><a href="#四、在-Security-中的配置" class="headerlink" title="四、在 Security 中的配置"></a>四、在 Security 中的配置</h2><p>如果我们的 Spring Boot 项目中集成了 Spring Security，那么如果不做额外配置，Swagger2 文档可能会被拦截。</p><p>需要在 Spring Security 的配置类中重写 configure 方法，添加如下过滤即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    web.ignoring()</span><br><span class="line">            .antMatchers(<span class="string">"/swagger-ui.html"</span>)</span><br><span class="line">            .antMatchers(<span class="string">"/v2/**"</span>)</span><br><span class="line">            .antMatchers(<span class="string">"/swagger-resources/**"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
            <tag> Swagger2 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis Generator</title>
      <link href="/2019/12/10/MyBatis-Generator/"/>
      <url>/2019/12/10/MyBatis-Generator/</url>
      
        <content type="html"><![CDATA[<p>官网：<a href="http://mybatis.org/generator/index.html" target="_blank" rel="noopener">http://mybatis.org/generator/index.html</a></p><p>参考：<a href="https://blog.csdn.net/gnail_oug/article/details/80404870" target="_blank" rel="noopener">https://blog.csdn.net/gnail_oug/article/details/80404870</a></p><h2 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h2><p>访问github地址：<a href="https://github.com/mybatis/generator" target="_blank" rel="noopener">https://github.com/mybatis/generator</a></p><p>在 Release 页面下载 mybatis-generator-core-1.4.0-bundle.zip</p><p>解压下载的文件，创建目录test</p><p>复制 mybatis-generator-core-1.4.0.jar 到目录test<br>复制 mysql-connector-java-8.0.14.jar 到目录test</p><h2 id="2、创建配置文件"><a href="#2、创建配置文件" class="headerlink" title="2、创建配置文件"></a>2、创建配置文件</h2><p>generatorConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">classPathEntry</span> <span class="attr">location</span>=<span class="string">"./mysql-connector-java-8.0.14.jar"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">  MyBatis3DynamicSql 默认值</span></span><br><span class="line"><span class="comment">  MyBatis3Simple MyBatis3 运行时的简化版本，javaClientGenerator的type="XMLMAPPER"才生效</span></span><br><span class="line"><span class="comment">  内部标签有顺序要求</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"mysql"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3Simple"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注释配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"addRemarkComments"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressDate"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 数据库连接 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">connectionURL</span>=<span class="string">"jdbc:mysql://127.0.0.1:3306/test?characterEncoding=UTF-8&amp;amp;useSSL=false&amp;amp;useUnicode=true&amp;amp;serverTimezone=Asia/Shanghai"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">userId</span>=<span class="string">"root"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">password</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"nullCatalogMeansCurrent"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生成POJO对象，并将类放到top.woilanlan.example.bean包下 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"top.woilanlan.example.bean"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生成mapper xml文件，并放到top.woilanlan.example.bean包下 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"top.woilanlan.example.mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span><span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生成mapper xml对应dao接口，放到top.woilanlan.example.mapper包下--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"top.woilanlan.example.mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- table标签可以有多个，至少一个，tableName指定表名，可以使用_和%通配符 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"t_book"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 是否只生成POJO对象 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;property name="modelOnly" value="false"/&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据库中表名有时我们都会带个前缀，而实体又不想带前缀，这个配置可以把实体的前缀去掉 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">domainObjectRenamingRule</span> <span class="attr">searchString</span>=<span class="string">"^T"</span> <span class="attr">replaceString</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、执行"><a href="#3、执行" class="headerlink" title="3、执行"></a>3、执行</h2><p>在test目录，打开命令行工具执行</p><p>在windows环境下也可以将其写到run.bat脚本文件中，双击运行即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar .\mybatis-generator-core-1.4.0.jar -configfile .\generatorConfig.xml -overwrite</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
          <category> mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lombok使用</title>
      <link href="/2019/12/10/Lombok%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/12/10/Lombok%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://mp.weixin.qq.com/s/-4W5-fOK0sGSaNBktXA-YQ" target="_blank" rel="noopener">一份不可多得的 Lombok 学习指南</a></p><p><a href="https://zhuanlan.zhihu.com/p/32779910" target="_blank" rel="noopener">Lombok 看这篇就够了</a></p><h2 id="一、Lombok-简介"><a href="#一、Lombok-简介" class="headerlink" title="一、Lombok 简介"></a>一、Lombok 简介</h2><p>Lombok 是一款 Java 开发插件，使得 Java 开发者可以通过其定义的一些注解来消除业务工程中冗长和繁琐的代码，尤其对于简单的 Java 模型对象（POJO）。在开发环境中使用 Lombok 插件后，Java 开发人员可以节省出重复构建，诸如 hashCode 和 equals 这样的方法以及各种业务对象模型的 accessor 和 toString 等方法的大量时间。对于这些方法，Lombok 能够在编译源代码期间自动帮我们生成这些方法，但并不会像反射那样降低程序的性能。</p><h2 id="二、Lombok-安装"><a href="#二、Lombok-安装" class="headerlink" title="二、Lombok 安装"></a>二、Lombok 安装</h2><p>2.1 构建工具</p><p>Maven</p><p>在 Maven 项目的 pom.xml 文件中添加 Lombok 依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.2 IDEA 中安装 lombok 插件</p><p>打开 IDEA 的 Settings 面板 &gt;&gt; 选择 Plugins 选项 &gt;&gt; 在输入框输入”lombok” &gt;&gt; 点击安装 &gt;&gt; 提示重启 IDEA，安装成功</p><h2 id="三、Lombok-详解"><a href="#三、Lombok-详解" class="headerlink" title="三、Lombok 详解"></a>三、Lombok 详解</h2><p>使用：在实体类上引入相关的注解</p><h3 id="Getter-and-Setter"><a href="#Getter-and-Setter" class="headerlink" title="@Getter and @Setter"></a>@Getter and @Setter</h3><p>自动生成默认的 getter/setter 方法。</p><h3 id="Constructor-Annotations"><a href="#Constructor-Annotations" class="headerlink" title="Constructor Annotations"></a>Constructor Annotations</h3><p>使用 @NoArgsConstructor 注解可以为指定类，生成默认的构造函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//若设置 staticName 属性，将会生成一个私有的构造函数且生成一个staticName指定的静态方法</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span>(staticName = <span class="string">"getInstance"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NoArgsConstructorDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 @AllArgsConstructor 注解可以为指定类，生成包含所有成员的构造函数</p><p>使用 @RequiredArgsConstructor 注解可以为指定类必需初始化的成员变量，如 final 成员变量，生成对应的构造函数</p><h3 id="EqualsAndHashCode"><a href="#EqualsAndHashCode" class="headerlink" title="@EqualsAndHashCode"></a>@EqualsAndHashCode</h3><p>为指定类生成 equals 和 hashCode 方法</p><h3 id="ToString"><a href="#ToString" class="headerlink" title="@ToString"></a>@ToString</h3><p>为指定类生成 toString 方法</p><h3 id="Data"><a href="#Data" class="headerlink" title="@Data"></a>@Data</h3><p>@Data 注解与同时使用以下的注解的效果是一样的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span></span><br></pre></td></tr></table></figure><h3 id="Log"><a href="#Log" class="headerlink" title="@Log"></a>@Log</h3><p>若你将 @Log 的变体放在类上（适用于你所使用的日志记录系统的任何一种）；之后，你将拥有一个静态的 final log 字段，然后你就可以使用该字段来输出日志。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Log</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> java.util.logging.Logger log = java.util.logging.Logger.getLogger(LogExample.class.getName());</span><br><span class="line"><span class="meta">@Log</span>4j</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(LogExample.class);</span><br><span class="line"><span class="meta">@Log</span>4j2</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.logging.log4j.Logger log = org.apache.logging.log4j.LogManager.getLogger(LogExample.class);</span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(LogExample.class);</span><br><span class="line"><span class="meta">@XSlf</span>4j</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.slf4j.ext.XLogger log = org.slf4j.ext.XLoggerFactory.getXLogger(LogExample.class);</span><br><span class="line"><span class="meta">@CommonsLog</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.commons.logging.Log log = org.apache.commons.logging.LogFactory.getLog(LogExample.class);</span><br></pre></td></tr></table></figure><h3 id="Synchronized"><a href="#Synchronized" class="headerlink" title="@Synchronized"></a>@Synchronized</h3><p>@Synchronized 是同步方法修饰符的更安全的变体。与 synchronized 一样，该注解只能应用在静态和实例方法上。它的操作类似于 synchronized 关键字，但是它锁定在不同的对象上。</p><p>synchronized 关键字应用在实例方法时，锁定的是 this 对象，而应用在静态方法上锁定的是类对象。对于 @Synchronized 注解声明的方法来说，它锁定的是 LOCK 或 lock</p><h3 id="Builder"><a href="#Builder" class="headerlink" title="@Builder"></a>@Builder</h3><p>使用 @Builder 注解可以为指定类实现建造者模式，该注解可以放在类、构造函数或方法上</p><h3 id="SneakyThrows"><a href="#SneakyThrows" class="headerlink" title="@SneakyThrows"></a>@SneakyThrows</h3><p>@SneakyThrows 注解用于自动抛出已检查的异常，而无需在方法中使用 throw 语句显式抛出。</p><h3 id="NonNull"><a href="#NonNull" class="headerlink" title="@NonNull"></a>@NonNull</h3><p>在方法或构造函数的参数上使用 @NonNull 注解，它将会为你自动生成非空校验语句</p><h3 id="Clean"><a href="#Clean" class="headerlink" title="@Clean"></a>@Clean</h3><p>@Clean 注解用于自动管理资源，用在局部变量之前，在当前变量范围内即将执行完毕退出之前会自动清理资源，自动生成 try-finally 这样的代码来关闭流。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CleanupDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="meta">@Cleanup</span> InputStream in = <span class="keyword">new</span> FileInputStream(args[<span class="number">0</span>]);</span><br><span class="line">        <span class="meta">@Cleanup</span> OutputStream out = <span class="keyword">new</span> FileOutputStream(args[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">10000</span>];</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> r = in.read(b);</span><br><span class="line">            <span class="keyword">if</span> (r == -<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            out.write(b, <span class="number">0</span>, r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="With"><a href="#With" class="headerlink" title="@With"></a>@With</h3><p>在类的字段上应用 @With 注解之后，将会自动生成一个 withFieldName(newValue) 的方法，该方法会基于 newValue 调用相应构造函数，创建一个当前类对应的实例。</p>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaWeb </tag>
            
            <tag> Lombok </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java环境配置</title>
      <link href="/2019/12/10/Java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/12/10/Java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="1、JDK下载"><a href="#1、JDK下载" class="headerlink" title="1、JDK下载"></a>1、JDK下载</h2><p>进入java SE的下载页面，找到JDK，点击下载。</p><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><h2 id="2、环境变量配置"><a href="#2、环境变量配置" class="headerlink" title="2、环境变量配置"></a>2、环境变量配置</h2><p><a href="https://blog.csdn.net/ZZQ928000/article/details/80373354" target="_blank" rel="noopener">https://blog.csdn.net/ZZQ928000/article/details/80373354</a></p><p>从jdk-9之后就已经没有tools.jar和dt.jar了，也不需要在classpath里面配置这些jar了，配置可参考：</p><ul><li>JAVA_HOME=jdk安装路径</li><li>JRE_HOME=jre安装路径</li><li>PATH= ;%JAVA_HOME%\bin;%JRE_HOME%\bin</li><li>CLASSPATH=.;%JAVA_HOME%\lib;%JRE_HOME%\lib</li></ul><h2 id="3、验证是否安装成功"><a href="#3、验证是否安装成功" class="headerlink" title="3、验证是否安装成功"></a>3、验证是否安装成功</h2><p>Win + R –&gt; 输入cmd –&gt;进入控制台</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line"></span><br><span class="line"><span class="built_in">where</span> java</span><br><span class="line"></span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure><h2 id="4、安装Eclipse"><a href="#4、安装Eclipse" class="headerlink" title="4、安装Eclipse"></a>4、安装Eclipse</h2><p><a href="http://www.eclipse.org/" target="_blank" rel="noopener">http://www.eclipse.org/</a></p><p>点击Download，在Get Eclipse模块选择Download Packages，找到Eclipse IDE for Java EE Developers</p><p>选择Neon Packages版本，在右边找到下载链接，点击下载。</p><h2 id="5、安装Tomcat9"><a href="#5、安装Tomcat9" class="headerlink" title="5、安装Tomcat9"></a>5、安装Tomcat9</h2><p><a href="https://tomcat.apache.org/" target="_blank" rel="noopener">https://tomcat.apache.org/</a></p><p>1、在左侧Download点击Tomcat 9,找到Core选择：64-bit Windows zip进行下载。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Binary Distributions</span><br><span class="line"></span><br><span class="line">Core:</span><br><span class="line"></span><br><span class="line">zip (pgp, sha1, sha512)</span><br><span class="line">tar.gz (pgp, sha1, sha512)</span><br><span class="line">32-bit Windows zip (pgp, sha1, sha512)</span><br><span class="line">64-bit Windows zip (pgp, sha1, sha512)</span><br><span class="line">32-bit/64-bit Windows Service Installer (pgp, sha1, sha512)</span><br></pre></td></tr></table></figure><p>2、前提：正确安装jdk，并配置好系统变量例如：JAVA_HOME=jdk安装路径</p><p>3、打开cmd移动到tomcat安装目录的bin目录：</p><p>输入 service.bat install 安装服务，自动帮你配置好tomcat环境变量,如下图为正确安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;d:</span><br><span class="line"></span><br><span class="line">D:\&gt;<span class="built_in">cd</span> java/tomcat/apache-tomcat-9.0.10/bin</span><br><span class="line"></span><br><span class="line">D:\java\tomcat\apache-tomcat-9.0.10\bin&gt;service.bat install</span><br><span class="line">Installing the service <span class="string">'Tomcat9'</span> ...</span><br><span class="line">Using CATALINA_HOME:    <span class="string">"D:\java\tomcat\apache-tomcat-9.0.10"</span></span><br><span class="line">Using CATALINA_BASE:    <span class="string">"D:\java\tomcat\apache-tomcat-9.0.10"</span></span><br><span class="line">Using JAVA_HOME:        <span class="string">"D:\java\Java\jdk-10.0.1"</span></span><br><span class="line">Using JRE_HOME:         <span class="string">"D:\java\Java\jre"</span></span><br><span class="line">Using JVM:              <span class="string">"D:\java\Java\jdk-10.0.1\bin\server\jvm.dll"</span></span><br><span class="line">The service <span class="string">'Tomcat9'</span> has been installed.</span><br></pre></td></tr></table></figure><p>查看服务：按住win+R，打开运行，输入：services.msc</p><p>4、启动tomcat，有四种方法：</p><ul><li>双击bin目录下的startup.bat批处理运行tomcat（这样的好处是可以看到运行状态，推荐使用）</li><li>以管理员运行cmd运行net start tomcat9命令（9是版本号）</li><li>通过任务管理器里面的服务运行</li><li>双击bin目录下的tomcat9w.exe打卡并点击start运行tomcat</li></ul><p>5、浏览器中可以正常打开网页：<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a></p><p>6、卸载Tomcat:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service.bat remove to Tomcat9</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python环境配置</title>
      <link href="/2019/12/01/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/12/01/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h2><p>进入 python 官网，点击 Downloads 下载</p><p><a href="https://www.python.org/downloads/" target="_blank" rel="noopener">https://www.python.org/downloads/</a></p><a id="more"></a><h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><p>2.1 双击python的安装程序</p><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/01.png" alt="01.png"></p><p>2.2 弹出安装界面</p><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/02.png" alt="02.png"></p><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/03.png" alt="03.png"></p><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/04.png" alt="04.png"></p><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/05.png" alt="05.png"></p><p>2.3 验证安装成功</p><p>打开 cmd 并运行以下命令：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py <span class="number">-3</span> --version</span><br></pre></td></tr></table></figure><h2 id="3、创建虚拟环境"><a href="#3、创建虚拟环境" class="headerlink" title="3、创建虚拟环境"></a>3、创建虚拟环境</h2><p>默认情况下，您安装的任何Python解释器都在其自己的全局环境中运行，该环境并不特定于任何一个项目。您安装或卸载的任何程序包都会影响全局环境以及在该上下文中运行的所有程序。</p><p>虚拟环境是项目中的子文件夹，其中包含特定解释器的副本。</p><p>激活虚拟环境时，您安装的所有软件包仅安装在该环境的子文件夹中。然后，当您在该环境中运行Python程序时，就会知道该程序仅针对那些特定的程序包运行。</p><p>要创建虚拟环境，请使用以下命令，其中“.venv”是环境文件夹的名称</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># macOS/Linux</span></span><br><span class="line"><span class="comment"># You may need to run sudo apt-get install python3-venv first</span></span><br><span class="line">python3 -m venv .venv</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows</span></span><br><span class="line"><span class="comment"># You can also use py -3 -m venv .venv</span></span><br><span class="line">python -m venv .venv</span><br></pre></td></tr></table></figure><h2 id="4、VS-Code中的Python入门"><a href="#4、VS-Code中的Python入门" class="headerlink" title="4、VS Code中的Python入门"></a>4、VS Code中的Python入门</h2><h3 id="4-1-安装-python-插件"><a href="#4-1-安装-python-插件" class="headerlink" title="4.1 安装 python 插件"></a>4.1 安装 python 插件</h3><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/06.png" alt="06.png"></p><h3 id="4-2-创建项目文件夹"><a href="#4-2-创建项目文件夹" class="headerlink" title="4.2 创建项目文件夹"></a>4.2 创建项目文件夹</h3><p>创建一个名为“hello”的空文件夹，导航至该文件夹，在该文件夹中打开VS Code</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir hello</span><br><span class="line">cd hello</span><br><span class="line">code .</span><br></pre></td></tr></table></figure><h3 id="4-3-选择一个Python解释器"><a href="#4-3-选择一个Python解释器" class="headerlink" title="4.3 选择一个Python解释器"></a>4.3 选择一个Python解释器</h3><p>默认情况下，Python扩展会查找并使用它在系统路径中找到的第一个Python解释器,如果找不到解释器，则会发出警告。</p><p>打开命令面板（Ctrl + Shift + P），使用 <code>Python: Select Interpreter</code> 选择特定python环境</p><h3 id="4-4-编写-python-程序"><a href="#4-4-编写-python-程序" class="headerlink" title="4.4 编写 python 程序"></a>4.4 编写 python 程序</h3><p>新建文件：hello.py</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">"Hello World"</span></span><br><span class="line">print(msg)</span><br></pre></td></tr></table></figure><h3 id="4-5-运行"><a href="#4-5-运行" class="headerlink" title="4.5 运行"></a>4.5 运行</h3><p>点击编辑器右上角的“在终端中运行Python文件”按钮</p>]]></content>
      
      
      <categories>
          
          <category> python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简历</title>
      <link href="/2019/11/20/%E7%AE%80%E5%8E%86/"/>
      <url>/2019/11/20/%E7%AE%80%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><p>我叫薛培龙，毕业于南昌航空大学，专业是软件工程。我的家乡是在河南省三门峡市，有着被誉为“地平线下古村落，民居史上活化石”的陕州地坑院。喜欢读书，听音乐，写博客，最喜欢的书是《小王子》和《老人与海》，平时会在github上关注一些热门的开源项目，开阔自己的知识面。写博客目的是提醒自己要定期学习，避免重复踩坑，也希望自己变得更好。</p><h2 id="求职意向"><a href="#求职意向" class="headerlink" title="求职意向"></a>求职意向</h2><p>现从事的工作是java web 开发，应聘的职位是：计算机科学与技术/通信工程</p><h2 id="项目经验"><a href="#项目经验" class="headerlink" title="项目经验"></a>项目经验</h2><p>数据采集系统后台功能模块开发，在这个项目中主要负责数据接口的编写，包括用户，部门，角色，菜单和业务数据的管理，项目框架使用的是springboot + mybatis + layui，为了规范接口文档使用了Swagger2。</p><h2 id="技术能力"><a href="#技术能力" class="headerlink" title="技术能力"></a>技术能力</h2><ul><li>掌握java的基础语法</li><li>熟悉JavaScript、Ajax、HTML等相关技术</li><li>熟悉Spring mvc，mybatis，熟悉mysql数据库，</li><li>熟悉linux常用操作</li><li>了解Tomcat等常用的中间件</li></ul>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
            <tag> 简历 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>高效的工作</title>
      <link href="/2019/11/20/%E9%AB%98%E6%95%88%E7%9A%84%E5%B7%A5%E4%BD%9C/"/>
      <url>/2019/11/20/%E9%AB%98%E6%95%88%E7%9A%84%E5%B7%A5%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="工作思路"><a href="#工作思路" class="headerlink" title="工作思路"></a>工作思路</h2><p>10分钟内能完成的事情一定是要立马进行解决的。</p><p>当前事情进行中，需要稍后处理的一定要记录到待办事项中。</p><p>对于庞大复杂的事情，一定是要做思维导图。一定要对其进行划分阶段，预估每个阶段所需时间。必须对时间进行把控。</p><p>日常工作一定要使用番茄钟，清晰明了知道每个番茄钟做了什么事情。</p><p>在预定的时间内没有达到目标，一定要记录中间发生了什么事情占用了规划的时间。</p><p>为下一次的计划提供经验。</p><h2 id="工作态度"><a href="#工作态度" class="headerlink" title="工作态度"></a>工作态度</h2><p>做事情就得昂头挺胸，就要坐的端端正正。</p><p>一定要简单明了，干脆利索</p><p>不要去和稀泥，不要去分神</p><p>要做什么事，这个事情一定是要放在脑子里的第一位，其他再天大的事情也要等这件事做完了。</p><p>一件事做不好，什么事情都做不好。</p><p>不要想着自己变圆滑，人生这么短，凭什么总是委屈自己。</p><p>想做的事情，就勇敢的去做，没有什么值得不值得，不论对错自己承担。</p><p>千万不要因为自己不努力，而委屈了自己也耽误了别人。</p><p>人活着一定是一柄利刃，刀刃锋利，一往无前。</p>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工作 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03css</title>
      <link href="/2019/11/18/03CSS%E7%BD%91%E6%A0%BC/"/>
      <url>/2019/11/18/03CSS%E7%BD%91%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="网格布局"><a href="#网格布局" class="headerlink" title="网格布局"></a>网格布局</h2><p>实例1：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line">  display: grid;</span><br><span class="line">  width: 750px;</span><br><span class="line">  height: 600px;</span><br><span class="line">  grid-template-columns: 200px 1fr 1fr;</span><br><span class="line">  grid-template-rows: 80px 1fr 1fr 100px;</span><br><span class="line">  grid-gap: 1rem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.header</span> &#123;</span></span><br><span class="line">  grid-row: 1 / 2;</span><br><span class="line">  grid-column: 1 / 4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.sidebar</span> &#123;</span></span><br><span class="line">  grid-row: 2 / 4;</span><br><span class="line">  grid-column: 1 / 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.content-1</span> &#123;</span></span><br><span class="line">  grid-row: 2 / 3;</span><br><span class="line">  grid-column: 2 / 4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.content-2</span> &#123;</span></span><br><span class="line">  grid-row: 3 / 4;</span><br><span class="line">  grid-column: 2 / 3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.content-3</span> &#123;</span></span><br><span class="line">  grid-row: 3 / 4;</span><br><span class="line">  grid-column: 3 / 4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.footer</span> &#123;</span></span><br><span class="line">  grid-row: 4 / 5;</span><br><span class="line">  grid-column: 1 / 4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="comment">/* OTHER STYLES */</span></span></span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">  padding: 200px;</span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#3b404e</span>;</span></span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  padding: 20px;</span><br><span class="line">  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#1EAAFC</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(130<span class="selector-tag">deg</span>, <span class="selector-id">#6C52D9</span> 0%, <span class="selector-id">#1EAAFC</span> 85%, <span class="selector-id">#3EDFD7</span> 100%);</span></span><br><span class="line"><span class="css">  <span class="selector-tag">box-shadow</span>: 0 10<span class="selector-tag">px</span> 20<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.19</span>), 0 6<span class="selector-tag">px</span> 6<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.23</span>);</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">  border-radius: 4px;</span><br><span class="line"><span class="css">  <span class="selector-tag">border</span>: 6<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#171717</span>;</span></span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#1EAAFC</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(160<span class="selector-tag">deg</span>, <span class="selector-id">#6C52D9</span> 0%, <span class="selector-id">#9B8AE6</span> 127%);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.sidebar</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(203<span class="selector-tag">deg</span>, <span class="selector-id">#3EDFD7</span> 0%, <span class="selector-id">#29A49D</span> 90%)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.content-1</span>,</span></span><br><span class="line"><span class="css"><span class="selector-class">.content-2</span>,</span></span><br><span class="line"><span class="css"><span class="selector-class">.content-3</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(130<span class="selector-tag">deg</span>, <span class="selector-id">#6C52D9</span> 0%, <span class="selector-id">#1EAAFC</span> 85%, <span class="selector-id">#3EDFD7</span> 100%);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#6C52D9</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(160<span class="selector-tag">deg</span>, <span class="selector-id">#6C52D9</span> 0%, <span class="selector-id">#9B8AE6</span> 127%);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item header"</span>&gt;</span>header<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item sidebar"</span>&gt;</span>sidebar<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item content-1"</span>&gt;</span>Content-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item content-2"</span>&gt;</span>Content-2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item content-3"</span>&gt;</span>Content-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item footer"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> 浏览器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02查看器</title>
      <link href="/2019/11/18/02%E6%9F%A5%E7%9C%8B%E5%99%A8/"/>
      <url>/2019/11/18/02%E6%9F%A5%E7%9C%8B%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、打开"><a href="#一、打开" class="headerlink" title="一、打开"></a>一、打开</h2><ul><li>使用快捷键：Ctrl + Shift + C</li><li>Web开发者工具 – 查看器</li></ul><h2 id="二、选择元素"><a href="#二、选择元素" class="headerlink" title="二、选择元素"></a>二、选择元素</h2><p>右键单击网页上的一个元素，并选择“查看元素”</p><p>点击开发者工具的左上角的图标：选取页面中的元素</p><p>使用方向键来改变当前选中的元素：</p><ul><li>上：当前元素的上一个元素</li><li>下：当前元素的下一个元素</li><li>左：高亮当前元素的父级</li><li>右：高亮当前元素的子级，如果没有子级则就轮到同级， 如果没有同级就轮到下一个节点。</li></ul><p>当一个元素及其父级占据了屏幕同一个空间的情况下，只使用鼠标很难选中其中一个元素，这个功能就特别有用了。</p><h2 id="三、查看和编辑HTML"><a href="#三、查看和编辑HTML" class="headerlink" title="三、查看和编辑HTML"></a>三、查看和编辑HTML</h2><p>1、搜索</p><ul><li>点击搜索框，输入你想寻找的类型按“Enter”，页面中的第一个元素类型将被选中。</li><li>再按“Enter”查找下一个。</li></ul><p>2、html树</p><p>每个箭头表示一个节点：单击箭头来展开节点。如果你按住Alt键单击箭头，会一次性展开下面的所有节点。</p><p>3、右键菜单</p><p>在一个特定节点使用右键弹出菜单执行某些常见的任务。（编辑，复制，粘贴，控制状态）</p><p>4、编辑html</p><ul><li>直接在HTML面板编辑HTML标签、属性和内容：双击要编辑的文本，修改它，按Enter键立即看到更改效果。</li><li>使用右键菜单，选择“编辑HTML”，在文本框中进行编辑</li><li>点击并按住任何元素，然后将其拖在树的上或下，当您释放鼠标按钮时，该元素将被插入相应的位置。</li></ul><h2 id="四、查看和编辑CSS"><a href="#四、查看和编辑CSS" class="headerlink" title="四、查看和编辑CSS"></a>四、查看和编辑CSS</h2><p>列出作用于当前元素的所有规则</p><p>1、规则显示</p><p>规则的声明，每条规则包含的样式列表：属性、值</p><ul><li>选择器旁边的图标是一个指向目标的按钮：单击按钮在页面上突出显示匹配这个选择器的所有节点。</li><li>被划掉的声明是被后面的规则所覆盖的。</li><li>鼠标悬停在一个声明上，,旁边会出现一个复选框，你可以用它来切换或关闭声明。</li><li>右侧链接到一个规则</li></ul><p>2、过滤规则</p><ul><li>不包含键入字符串的所有规则都被隐藏</li><li>其中包含了键入字符串的任何声明都被强调</li></ul><p>3、切换伪类</p><p>点击“ :hov ”图标，对所选元素切换伪类 :hover, :active, :focus</p><p>4、链接到css文件</p><p>在每一个规则的右上方会有显示：源文件名和行号，并附有链接，点击后在样式编辑器中打开该文件。</p><p>5、查看计算后CSS</p><ul><li>切换到”计算后“视图。这里显示选定元素的每个CSS属性计算后的值</li><li>在检索框中键入关键字可以进行列表的实时过滤</li></ul><p>6、添加和编辑规则</p><ul><li>如果你点击一个声明或规则，你可以对其进行编辑和查看，并立即看到结果。</li><li>点击搜索框后的加号图标</li><li>要添加一个新的声明到规则中，则点击规则的最后一行（右括号占据行）</li></ul><p>在编辑模式下您可以使用箭头键来增大/减小规则数字</p><ul><li>按一下向上箭头会由“1px”变成”2px“，</li><li>Shift +向上/向下将以10为最小单位改变，</li><li>Alt +向上/向下变化值为0.1，</li><li>shift+Page up/down 变化值为100。</li></ul><p>7、复制规则</p><p>复制全部：右键全选，选择复制</p><p>复制某一条规则：鼠标移到这条规则范围内（或者指向目标的按钮），右键选择复制规则</p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> 浏览器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01调试</title>
      <link href="/2019/11/18/01%E8%B0%83%E8%AF%95/"/>
      <url>/2019/11/18/01%E8%B0%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>快捷键：</p><ul><li>切换标签页：Ctrl + Tab</li><li>切换工具箱：Ctrl + Shift + I 或者 F12</li><li>查看器：Ctrl + Shift + C</li></ul><p>调试器：</p><p>在主界面，点击“显示所有快捷方式”，以查看</p><p>1、搜索：</p><ul><li>转到指定文件：Ctrl + P</li><li>查找下一个：Ctrl + G</li><li>在所有文件中查找：Ctrl + Shift + F</li><li>查找函数：Ctrl + Shift + O</li><li>转至指定行：Ctrl + ;</li></ul><p>2、步进：</p><ul><li>暂停/恢复：F8</li><li>单步执行：F10</li><li>步进：F11</li><li>步出：Shift + F11</li></ul><p>3、断点</p><ul><li>添加断点：单击代码左侧的数字</li><li>切换断点：Ctrl + B</li></ul><p>4、查看对应变量的值：</p><ul><li>在代码中使用 <code>console.log()</code> 在控制台输出变量的值</li><li>点击断点并暂停执行，打开控制台，输入变量名称，回车</li><li>鼠标悬停在变量上以查看该变量的值</li><li>右下角的范围部分，显示程序中此时此范围内的所有对象，第一个块将列出当前块/函数中的变量及其值。</li></ul><p>5、监视表达式</p><p>可以通过单击“添加监视表达式”并输入要监视的表达式（或变量名）来设置监视表达式（或变量的值）</p><p>6、调用堆栈</p><p>步进调试时，可以在这里看到调用了那些函数，这些函数在哪些行以及调用堆栈中的深度的信息。单击对应的函数，允许我们返回调用堆栈，以便我们可以找出问题的起始位置。</p><p>7、条件断点</p><p>在代码左侧的数字上右键选择添加条件，输入对应的表达式，回车</p><p>1、判断字符串中是否包含了某个指定的字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title.indexOf(<span class="string">"haha"</span>) != <span class="number">-1</span>;</span><br></pre></td></tr></table></figure><p>2、打印对应的日志信息。（避免调试以后再去修改我们的源代码）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(items[index].title);</span><br></pre></td></tr></table></figure><p>8、在我们代码中定义断点：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">debugger</span>;</span><br></pre></td></tr></table></figure><p>9、黑盒测试和美化源代码</p><p>在源代码区域左下角的眼睛是一个按钮，可以在你选中文件后进行black box（切换黑盒）。切换黑盒功能在查看源文件但不调试源文件时非常有用，就像jQuery的包一样。如果一个资源进入黑盒状态，此时调试器将不在关注此资源：所有在些文件中设置的断点将会失效，并且调试器跟踪到这里时将会跳过这里的代码。</p><p>对于压缩的js文件，在左下角部分点击“美化源代码”图标，进行美化，方便阅读。</p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> 浏览器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浮生</title>
      <link href="/2019/11/12/02%E6%B5%AE%E7%94%9F/"/>
      <url>/2019/11/12/02%E6%B5%AE%E7%94%9F/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">他真的很喜欢你，认真且怂，从一而终。</span><br><span class="line"></span><br><span class="line">何为思念？日月，星辰，旷野雨落。</span><br><span class="line">可否具体？山川，江流，烟袅湖泊。</span><br><span class="line">可否再具体？万物是你，无可躲。</span><br><span class="line"></span><br><span class="line">何谓孤寂？清风，艳日，无笑意。</span><br><span class="line">可否具体？左拥，右抱，无情欲。</span><br><span class="line">可否再具体？不得你。</span><br><span class="line"></span><br><span class="line">何为无救？良药、妙方，无可医。</span><br><span class="line">可否具体？扁鹊、华佗，俱无策。</span><br><span class="line">可否再具体？念你成疾。</span><br><span class="line"></span><br><span class="line">何谓求索？落霞，朝阳，七千里。</span><br><span class="line">可否具体？夏雨，冬雪，九万顷。</span><br><span class="line">可否再具体？追寻你。</span><br><span class="line"></span><br><span class="line">何谓不甘？落虹，繁星，皆远方。</span><br><span class="line">可否具体？彩云，洛神，黄粱梦。</span><br><span class="line">仍是不解。得你，再失你。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> miss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> miss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一章 相识</title>
      <link href="/2019/11/12/01%E7%9B%B8%E8%AF%86/"/>
      <url>/2019/11/12/01%E7%9B%B8%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>从开始决定讲述这个故事，到写下第一章，中间发生了很多的事情。每一天都在发生变化，每一天都是一个不一样的你。你永远猜不到下一秒到底会发生什么，因为什么都可能发生。</p><p>明知道不去怀念，就不会伤心，可那不是真实的我。</p><p>从小的我总是在扮演着一个懂事听话的孩子，是一个爱笑的孩子。诚然微笑会给生活带来希望，可当周围人习惯你的微笑时，他们就忽略了你的悲伤，忘记了你也会悲伤。</p><p>你的生活环境，接触的人，你的经历都决定了你看待一个事物的眼光，决定了你的选择，你的价值判断。</p><p>我不怪你的选择，我只是很想你。一路上你教会了我很多，感谢与你的遇见。</p><p>在这里我将不在压抑自己的情绪。我只想把这个故事讲好。</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>我们就读于同一所高中，那个时候我还是一个成天做梦，痴迷于玄幻小说，对爱情懵懂的无知少年。她是一个有点孤僻，独立，要强的女孩子。两个人遇见已经很不容易了，能成为朋友更需要缘分。</p><p>我们真正开始了解彼此是在高考结束的那个暑假。</p>]]></content>
      
      
      <categories>
          
          <category> miss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> miss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于miss</title>
      <link href="/2019/11/12/00%E5%85%B3%E4%BA%8Emiss/"/>
      <url>/2019/11/12/00%E5%85%B3%E4%BA%8Emiss/</url>
      
        <content type="html"><![CDATA[<p>miss这个单词，代表着想念，也代表着错过。</p><p>故事讲述了一个简单的爱情故事，它和其他爱情故事所不同的是，这个故事来自我的回忆，这个故事由我来讲述。</p><p>这个故事见证了我和那个女孩从相识、相遇、牵手、拥抱，争吵，和好，从大学到毕业，从异地到同城所有的一切故事。</p><p>五分喜欢的人，恨不得把他挂在嘴上招摇过市。有七分喜欢，就只能跟至亲密友分享。 有十分喜欢 ，那就谁也不舍得说了，憋着每天憋着一点小高兴，像只松鼠攒着满腮帮子的果仁</p><p>我就像是那只快乐的小松鼠，心里装满了对她的喜欢。</p>]]></content>
      
      
      <categories>
          
          <category> miss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> miss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04图床</title>
      <link href="/2019/11/06/04%E5%9B%BE%E5%BA%8A/"/>
      <url>/2019/11/06/04%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>图床就是一个在网络上存储图片的地方，目的是为了节省本地服务器空间。</p><p>图片上传、管理工具：PicGo</p><p>官网：<a href="https://picgo.github.io/PicGo-Doc/zh/" target="_blank" rel="noopener">https://picgo.github.io/PicGo-Doc/zh/</a></p><h2 id="二、VS-Code中使用-PicGo"><a href="#二、VS-Code中使用-PicGo" class="headerlink" title="二、VS Code中使用 PicGo"></a>二、VS Code中使用 PicGo</h2><h3 id="1、安装-PicGo-拓展"><a href="#1、安装-PicGo-拓展" class="headerlink" title="1、安装 PicGo 拓展"></a>1、安装 PicGo 拓展</h3><h3 id="2、使用-github-仓库作为图床"><a href="#2、使用-github-仓库作为图床" class="headerlink" title="2、使用 github 仓库作为图床"></a>2、使用 github 仓库作为图床</h3><p>登录GitHub</p><p>新建一个仓库，设置GitHub Pages</p><p>生成一个token用于PicGo操作你的仓库</p><ul><li>访问：<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">https://github.com/settings/tokens</a></li><li>点击Generate new token</li><li>repo的勾打上</li><li>翻到页面最底部，点击Generate token的生成token。</li></ul><p>注意：这个token生成后只会显示一次！你要把这个token复制一下存到其他地方以备后用</p><h3 id="3、进行配置"><a href="#3、进行配置" class="headerlink" title="3、进行配置"></a>3、进行配置</h3><p>1、配置说明</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "repo": "", // 仓库名，格式是username/reponame</span><br><span class="line">  "token": "", // github token</span><br><span class="line">  "path": "", // 自定义存储路径，比如img/</span><br><span class="line">  "customUrl": "", // 自定义域名，注意要加http://或者https://</span><br><span class="line">  "branch": "" // 分支名，默认是master</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、在VS Code设置对应项</p><p><img src="https://photo.woilanlan.top/blog/img/2019/11/06/GitHub%E5%9B%BE%E5%BA%8A%E9%85%8D%E7%BD%AE.png" alt="GitHub图床配置.png"></p><h3 id="4、操作说明"><a href="#4、操作说明" class="headerlink" title="4、操作说明"></a>4、操作说明</h3><ul><li>从剪贴板上传图像:Ctrl + Alt + U</li><li>从资源管理器上传图像:Ctrl + Alt + E</li><li>从输入框上传图像:Ctrl + Alt + O</li></ul>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03域名解析</title>
      <link href="/2019/11/06/03%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
      <url>/2019/11/06/03%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>1、阿里云，域名注册</p><p>2、域名列表查看购买的域名 &gt;&gt; 点击管理 &gt;&gt; 查看域名基本信息</p><p>3、域名持有者实名认证 &gt;&gt; 输入身份证号 &gt;&gt; 拍照上传 &gt;&gt; 等待审核</p><p>4、云解析DNS &gt;&gt; 点击解析设置 &gt;&gt; 点击新手引导 &gt;&gt; 网址解析 &gt;&gt;  同时添加’www’及‘@’记录 &gt;&gt; 记录值中填入服务器对应的ip地址</p><p>5、点击 Settings &gt;&gt; GitHub Pages &gt;&gt; Custom domain &gt;&gt; 输入你的域名 &gt;&gt; 点击 Save</p><p>6、向你的 Github Pages 仓库添加一个<code>CNAME</code>文件,其中输入你的域名。</p><p>记录类型：</p><p>A-将域名指向一个IPV4地址<br>CNAME-将域名指向另外一个域名</p><p>备注：</p><p>云解析DNS就是指把网站域名或应用资源转换为数字 IP 地址，从而将最终用户的访问路由到相应的网站或应用资源上。</p><p>查看对应的 ip 地址 <code>ping username.github.io</code></p><p>使用 hexo 框架搭建博客并部署到 Github Pages 上时，会把 public 文件夹里的东西都推到仓库，请把 CNAME 文件添加到 source 文件夹防止被覆盖。</p><h2 id="启用-HTTPS"><a href="#启用-HTTPS" class="headerlink" title="启用 HTTPS"></a>启用 HTTPS</h2><p>进入自己的仓库：username.github.io</p><p>点击 Settings &gt;&gt; GitHub Pages &gt;&gt; Enforce HTTPS &gt;&gt; 点击勾选</p>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02hexo</title>
      <link href="/2019/11/06/02hexo/"/>
      <url>/2019/11/06/02hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="指南"><a href="#指南" class="headerlink" title="指南"></a>指南</h2><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo官网</a></p><p><a href="https://guides.github.com/features/pages/" target="_blank" rel="noopener">GitHub页面入门</a></p><p><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">最全Hexo博客搭建</a></p><p><a href="https://www.jianshu.com/p/7b5702d3f072" target="_blank" rel="noopener">GitHub+Hexo（NexT主题）搭建博客</a></p><h2 id="一、全局安装和卸载"><a href="#一、全局安装和卸载" class="headerlink" title="一、全局安装和卸载"></a>一、全局安装和卸载</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">npm uninstall hexo-cli -g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本，确认是否安装成功</span></span><br><span class="line">hexo -version</span><br></pre></td></tr></table></figure><h2 id="二、创建和运行项目"><a href="#二、创建和运行项目" class="headerlink" title="二、创建和运行项目"></a>二、创建和运行项目</h2><p>在项目所在目录，打开Git Bash</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化项目</span></span><br><span class="line">hexo init blog</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成静态页面（markdown文件转化为html文件）</span></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站预览（默认的主题风格landscape）</span></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="三、配置SSH-key"><a href="#三、配置SSH-key" class="headerlink" title="三、配置SSH key"></a>三、配置SSH key</h2><p>提交代码肯定要拥有你的github权限才可以，直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><p>1、检查电脑是否已经有SSH KEYS</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al ~/.ssh</span><br></pre></td></tr></table></figure><p>如果列出的文件有public和private钥匙对（例如id_ras.pub和id_rsa），证明已存在SSH keys。如果提示：No such file or directory 说明你是第一次使用git。</p><p>2、如果没有SSH KEY，则生成新的SSH KEY</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure><p>然后连续3次回车，在<code>C:\Users\longlong\.ssh</code>目录下，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容</p><p>3、打开github对应的仓库，添加SSH KEY</p><p>在Settings里选择Deploy keys,添加一个Deploy key,将复制的内容粘贴到key那里，title随便填，保存。</p><p>4、测试是否成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>github设置添加SSH：<a href="https://www.cnblogs.com/chuyanfenfei/p/8035067.html" target="_blank" rel="noopener">https://www.cnblogs.com/chuyanfenfei/p/8035067.html</a></p><h2 id="四、发布到Github"><a href="#四、发布到Github" class="headerlink" title="四、发布到Github"></a>四、发布到Github</h2><p>1、在站点目录下修改配置文件<code>_config.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line">  <span class="comment">#对应仓库的SSH地址（可以在GitHub对应的仓库中复制）</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:&lt;Github账号名称&gt;/&lt;Github账号名称&gt;.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>2、安装hexo-deployer-git插件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>3、推送到Github仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo new draft <span class="string">"title"</span> <span class="comment">#新建草稿</span></span><br><span class="line">hexo publish <span class="string">"title"</span> <span class="comment">#发布草稿</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo server --draft <span class="comment">#预览草稿</span></span><br><span class="line">hexo deploy <span class="comment">#部署到GitHub</span></span><br><span class="line">hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version  <span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure><p>缩写</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><p>组合</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g <span class="comment">#生成并本地预览</span></span><br><span class="line">hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure><h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>1、全局的 hexo-cli 更新：卸载重装</p><p>2、更新项目的 package.json</p><p>全局安装 npm-check</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm install -g npm-check //全局安装。项目下安装可自行选择</span><br><span class="line">&gt; npm install npm-check    //项目下安装，项目根目录执行</span><br></pre></td></tr></table></figure><p>进入项目所在目录,查看包更新信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm-check</span><br></pre></td></tr></table></figure><p>更新包，分类别展示，使用空格选择包，然后enter开始更新。自动更新package.json内的相关包信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm-check -u</span><br></pre></td></tr></table></figure><p>npm-check指令列表</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-u, --update       显示一个交互式UI，用于选择要更新的模块，并自动更新<span class="string">"package.json"</span>内包版本号信息</span><br><span class="line">-g, --global       检查全局下的包</span><br><span class="line">-s, --skip-unused  忽略对未使用包的更新检查</span><br><span class="line">-p, --production   忽略对<span class="string">"devDependencies"</span>下的包的检查</span><br><span class="line">-d, --dev-only     忽略对<span class="string">"dependencies"</span>下的包的检查</span><br><span class="line">-i, --ignore       忽略对指定包的检查.</span><br><span class="line">-E, --save-exact   将确切的包版本存至<span class="string">"package.json"</span>(注意，此命令将存储<span class="string">'x.y.z'</span>而不是<span class="string">'^x.y.z'</span>)</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>1、hexo不是内部或外部命令，也不是可运行的程序</p><p>原因：在hexo模块的bin文件夹下，没有放置对应的cmd命令脚本，所以要将对应的cmd命令脚本添加到系统变量中</p><p>参考：<a href="https://blog.csdn.net/qq_27093465/article/details/72954725" target="_blank" rel="noopener">https://blog.csdn.net/qq_27093465/article/details/72954725</a></p><p>2、部署到GitHub时，执行命令<code>hexo d</code>没反应</p><p>在站点目录下修改配置文件<code>_config.yml</code>，冒号后面少了空格</p><p>3、如何在文章中插入图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 开启资源文件夹</span><br><span class="line">![](01.png)</span><br><span class="line"></span><br><span class="line">&#123;% asset_img 01.png 图片1 %&#125;</span><br><span class="line"></span><br><span class="line"># 使用标签插件，引用资源，图片放在source&#x2F;img文件夹</span><br><span class="line">![](&#x2F;img&#x2F;01.png)</span><br><span class="line"></span><br><span class="line">&#123;% img &#x2F;img&#x2F;01.png 100 100 &quot;图片1&quot; %&#125;</span><br></pre></td></tr></table></figure><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p><a href="http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa" target="_blank" rel="noopener">使用hexo+github搭建免费个人博客详细教程</a></p><p><a href="https://blog.csdn.net/u011475210/article/details/79023429" target="_blank" rel="noopener">从jekyll到hexo</a></p><p><a href="https://www.jianshu.com/p/68e727dda16d" target="_blank" rel="noopener">如何优雅地发布Hexo博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01入门</title>
      <link href="/2019/11/06/01%E5%85%A5%E9%97%A8/"/>
      <url>/2019/11/06/01%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>1、下载安装包</p><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p><a id="more"></a><p>2、双击进行安装，修改安装目录。默认安装路径已添加到环境变量</p><p>3、控制台输入以下命令检验是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;node -v</span><br><span class="line">v10.16.3</span><br><span class="line"></span><br><span class="line">C:\Users\longlong&gt;npm -v</span><br><span class="line">6.9.0</span><br></pre></td></tr></table></figure><p>4、配置npm在安装全局模块时的路径和缓存cache的路径</p><p>查看现有设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;npm config get prefix</span><br><span class="line">C:\Users\longlong&gt;npm config get cache</span><br></pre></td></tr></table></figure><p>设置对应目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;npm config set prefix &quot;D:\nodejs\node_modules\node_global&quot;</span><br><span class="line">C:\Users\longlong&gt;npm config set cache &quot;D:\nodejs\node_modules\node_cache&quot;</span><br></pre></td></tr></table></figure><p>在D:\nodejs\node_modules\node_global目录下</p><ul><li>node_modules文件夹中会放置安装的各个模块<ul><li>每个模块的bin目录也会放置cmd命令脚本</li></ul></li><li>各模块的cmd命令脚本</li></ul><p>npm帮助</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --help</span><br></pre></td></tr></table></figure><p>5、Express应用程序</p><p>Express是一个非常流行的应用程序框架，用于构建和运行Node.js应用程序。您可以使用Express Generator工具构建（创建）新的Express应用程序。Express Generator作为npm模块提供，并使用npm命令行工具进行安装npm。</p><p>全局安装express-generator</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;npm install -g express-generator</span><br><span class="line">D:\nodejs\node_modules\node_global\express -&gt; D:\nodejs\node_modules\node_global\node_modules\express-generator\bin\express-cli.js</span><br><span class="line">+ express-generator@4.16.1</span><br><span class="line">added 10 packages from 13 contributors in 21.383s</span><br></pre></td></tr></table></figure><p>通过运行脚手架来构建一个新的Express应用程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">D:\nodejs&gt;express myExpressApp --view pug</span><br><span class="line"></span><br><span class="line">   create : myExpressApp\</span><br><span class="line">   create : myExpressApp\public\</span><br><span class="line">   create : myExpressApp\public\javascripts\</span><br><span class="line">   create : myExpressApp\public\images\</span><br><span class="line">   create : myExpressApp\public\stylesheets\</span><br><span class="line">   create : myExpressApp\public\stylesheets\style.css</span><br><span class="line">   create : myExpressApp\routes\</span><br><span class="line">   create : myExpressApp\routes\index.js</span><br><span class="line">   create : myExpressApp\routes\users.js</span><br><span class="line">   create : myExpressApp\views\</span><br><span class="line">   create : myExpressApp\views\error.pug</span><br><span class="line">   create : myExpressApp\views\index.pug</span><br><span class="line">   create : myExpressApp\views\layout.pug</span><br><span class="line">   create : myExpressApp\app.js</span><br><span class="line">   create : myExpressApp\package.json</span><br><span class="line">   create : myExpressApp\bin\</span><br><span class="line">   create : myExpressApp\bin\www</span><br><span class="line"></span><br><span class="line">   change directory:</span><br><span class="line">     &gt; cd myExpressApp</span><br><span class="line"></span><br><span class="line">   install dependencies:</span><br><span class="line">     &gt; npm install</span><br><span class="line"></span><br><span class="line">   run the app:</span><br><span class="line">     &gt; SET DEBUG&#x3D;myexpressapp:* &amp; npm start</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\nodejs&gt;cd myExpressApp</span><br><span class="line"></span><br><span class="line">D:\nodejs\myExpressApp&gt;npm install</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:\nodejs\myExpressApp&gt;npm start</span><br><span class="line"></span><br><span class="line">&gt; myexpressapp@0.0.0 start D:\nodejs\myExpressApp</span><br><span class="line">&gt; node .&#x2F;bin&#x2F;www</span><br></pre></td></tr></table></figure><p>Node.js Web服务器将启动后，您可以在浏览器中访问下面的网址进行查看：<a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000/</a></p><p>按Ctrl + C停止Node.js服务器</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>1、无法执行npm安装，提示主机名/IP与证书的altnames不匹配。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;npm install -g express-generator</span><br><span class="line">npm ERR! code ERR_TLS_CERT_ALTNAME_INVALID</span><br><span class="line">npm ERR! errno ERR_TLS_CERT_ALTNAME_INVALID</span><br><span class="line">npm ERR! request to https:&#x2F;&#x2F;registry.npmjs.org&#x2F;express-generator failed, reason: Hostname&#x2F;IP does not match certificate&#39;s altnames: Host: registry.npm.taobao.org. is not in the cert&#39;s altnames: DNS:img.ucdl.pp.uc.cn...省略</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found in:</span><br><span class="line">npm ERR!     D:\nodejs\node_modules\node_cache\_logs\2019-09-20T03_04_08_100Z-debug.log</span><br></pre></td></tr></table></figure><p>解决思路：在控制台或者日志文件中查看报错信息，找出错误原因。</p><p>移除淘宝代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;  npm config set proxy null</span><br><span class="line">C:\Users\longlong&gt;npm config set https-proxy null</span><br><span class="line"></span><br><span class="line">C:\Users\longlong&gt;npm config get proxy</span><br><span class="line">null</span><br><span class="line">C:\Users\longlong&gt;npm config get https-proxy</span><br><span class="line">null</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://code.visualstudio.com/docs/nodejs/nodejs-tutorial" target="_blank" rel="noopener">Visual Studio Code中的Node.js教程</a></p><p><a href="https://blog.csdn.net/antma/article/details/86104068" target="_blank" rel="noopener">node.js 安装详细步骤教程</a></p><p><a href="https://www.jianshu.com/p/38e3b6fe5f7a?tdsourcetag=s_pcqq_aiomsg" target="_blank" rel="noopener">Node安装及修改默认全局模块安装路径</a></p><p><a href="https://www.jianshu.com/p/a1bb4c317c3e" target="_blank" rel="noopener">NPM安装及使用</a></p>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
