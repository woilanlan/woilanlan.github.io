<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>docsify快速入门</title>
      <link href="/2020/04/13/docsify-started/"/>
      <url>/2020/04/13/docsify-started/</url>
      
        <content type="html"><![CDATA[<h2 id="快速入门"><a href="#快速入门" class="headerlink" title="快速入门"></a>快速入门</h2><p>官方文档：<a href="https://docsify.js.org/" target="_blank" rel="noopener">https://docsify.js.org/</a></p><p>建议全局安装 <code>docsify-cli</code> ，这有助于在本地初始化和预览网站</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i docsify-cli -g</span><br></pre></td></tr></table></figure><p>如果要在 <code>./docs</code> 子目录中编写文档，则可以使用 <code>init</code> 命令</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docsify init ./docs</span><br></pre></td></tr></table></figure><p>目录 <code>./docs</code> 的文件如下</p><ul><li><code>index.html</code> 作为入口文件</li><li><code>README.md</code> 作为主页</li><li><code>.nojekyll</code> 防止GitHub Pages忽略以下划线开头的文件</li></ul><p>运行查看</p><p>使用 <code>docsify serve</code> 运行本地服务器。在浏览器中预览站点：<a href="http://localhost:3000" target="_blank" rel="noopener">http://localhost:3000</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docsify serve docs</span><br></pre></td></tr></table></figure><h2 id="创建多个页面"><a href="#创建多个页面" class="headerlink" title="创建多个页面"></a>创建多个页面</h2><p>如果需要更多页面，只需在目录中创建更多markdown文件即可。</p><p>例如：</p><p>创建一个名为 <code>guide.md</code> 的文件，通过 <code>/#/guide</code> 即可访问该文件</p><p>目录结构</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">└── docs</span><br><span class="line">    ├── README.md</span><br><span class="line">    ├── guide.md</span><br><span class="line">    └── zh-cn</span><br><span class="line">        ├── README.md</span><br><span class="line">        └── guide.md</span><br></pre></td></tr></table></figure><p>匹配路线</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">docs&#x2F;README.md        &#x3D;&gt; http:&#x2F;&#x2F;domain.com</span><br><span class="line">docs&#x2F;guide.md         &#x3D;&gt; http:&#x2F;&#x2F;domain.com&#x2F;#&#x2F;guide</span><br><span class="line">docs&#x2F;zh-cn&#x2F;README.md  &#x3D;&gt; http:&#x2F;&#x2F;domain.com&#x2F;#&#x2F;zh-cn&#x2F;</span><br><span class="line">docs&#x2F;zh-cn&#x2F;guide.md   &#x3D;&gt; http:&#x2F;&#x2F;domain.com&#x2F;#&#x2F;zh-cn&#x2F;guide</span><br></pre></td></tr></table></figure><h2 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h2><p>在 <code>index.html</code> 文件中设置 <code>loadSidebar: true</code> 属性</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.$docsify = &#123;</span></span><br><span class="line"><span class="actionscript">    loadSidebar: <span class="literal">true</span></span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建文件 <code>_sidebar.md</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- docs&#x2F;_sidebar.md --&gt;</span><br><span class="line"></span><br><span class="line">* [Home](&#x2F;)</span><br><span class="line">* [Guide](guide.md)</span><br></pre></td></tr></table></figure><h3 id="嵌套侧边栏"><a href="#嵌套侧边栏" class="headerlink" title="嵌套侧边栏"></a>嵌套侧边栏</h3><p>_sidebar.md从每个级别目录加载。如果当前目录没有_sidebar.md，它将退回到上级目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- docs&#x2F;zh-cn&#x2F;_sidebar.md --&gt;</span><br><span class="line"></span><br><span class="line">* [首页](zh-cn&#x2F;)</span><br><span class="line">* [指南](zh-cn&#x2F;guide.md &quot;The greatest guide in the world&quot;)</span><br></pre></td></tr></table></figure><h3 id="设置页面标题"><a href="#设置页面标题" class="headerlink" title="设置页面标题"></a>设置页面标题</h3><p>页面的 <code>title</code> 标签是根据所选的侧边栏项目名称生成的。为了获得更好的SEO，您可以通过在文件名后指定字符串来自定义标题。</p><h3 id="目录"><a href="#目录" class="headerlink" title="目录"></a>目录</h3><p>创建完成后<code>_sidebar.md</code>，边栏内容将根据markdown文件中的标题自动生成。</p><p>可以通过设置 <code>subMaxLevel: 2</code> 来配置生成目录的层级。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.$docsify = &#123;</span></span><br><span class="line"><span class="actionscript">    loadSidebar: <span class="literal">true</span>,</span></span><br><span class="line">    subMaxLevel: 2</span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="导航栏"><a href="#导航栏" class="headerlink" title="导航栏"></a>导航栏</h2><p>设置 <code>loadNavbar: true</code> </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- index.html --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">  <span class="built_in">window</span>.$docsify = &#123;</span></span><br><span class="line"><span class="actionscript">    loadNavbar: <span class="literal">true</span></span></span><br><span class="line">  &#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"//cdn.jsdelivr.net/npm/docsify/lib/docsify.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>创建 <code>_navbar.md</code> 来自定义导航,通过缩进创建父子关系</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;!-- _navbar.md --&gt;</span><br><span class="line"></span><br><span class="line">* [Translations](&#x2F;)</span><br><span class="line">  * [English](&#x2F;)</span><br><span class="line">  * [中文](&#x2F;zh-cn&#x2F;)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>重新出发2020</title>
      <link href="/2020/04/10/restart-2020/"/>
      <url>/2020/04/10/restart-2020/</url>
      
        <content type="html"><![CDATA[<h2 id="走出阴霾"><a href="#走出阴霾" class="headerlink" title="走出阴霾"></a>走出阴霾</h2><p>今天再大的事，到了明天就是小事；<br>今年再大的事，到了明年就是故事。<br>我们都会成为有故事的人，却不能一直停留在故事里。</p><p>成长就是你得学会为自己的一言一行，为自己的决定负责任。<br>你是一个男人，男人就得顶天立地，无所畏惧。<br>想做的事情就要勇敢的去做，喜欢的人就要勇敢的去追，犹豫就会败北。</p><h2 id="坚持去做"><a href="#坚持去做" class="headerlink" title="坚持去做"></a>坚持去做</h2><p>你不去做永远变不成你羡慕的那个人。</p><p>一年时光是何其的短暂，一年只有4季，每季只有3月，稍纵即逝。</p><p>4月上旬已过去，留给你还有多少时间去改变呢？</p><p>从今天开始坚持每天学习，坚持每天锻炼，要在今年学会口琴。</p><p>拼搏到无能为力，努力到感动自己。</p>]]></content>
      
      
      <categories>
          
          <category> 日记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 日记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Swagger2使用</title>
      <link href="/2019/12/10/Swagger2%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/12/10/Swagger2%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、工程创建"><a href="#一、工程创建" class="headerlink" title="一、工程创建"></a>一、工程创建</h2><p>创建一个 Spring Boot 项目，加入 web 依赖，创建成功后，加入两个 Swagger2 相关的依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger2<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>io.springfox<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>springfox-swagger-ui<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.9.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-web<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、Swagger2-配置"><a href="#二、Swagger2-配置" class="headerlink" title="二、Swagger2 配置"></a>二、Swagger2 配置</h2><p>Swagger2 的配置也是比较容易的，在项目创建成功之后，只需要开发者自己提供一个 Docket 的 Bean 即可</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Configuration</span></span><br><span class="line"><span class="meta">@EnableSwagger</span>2</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SwaggerConfig</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Bean</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Docket <span class="title">createRestApi</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Docket(DocumentationType.SWAGGER_2)</span><br><span class="line">                .pathMapping(<span class="string">"/"</span>)</span><br><span class="line">                .select()</span><br><span class="line">                .apis(RequestHandlerSelectors.basePackage(<span class="string">"io.longlong.controller"</span>))</span><br><span class="line">                .paths(PathSelectors.any())</span><br><span class="line">                .build().apiInfo(<span class="keyword">new</span> ApiInfoBuilder()</span><br><span class="line">                        .title(<span class="string">"项目名称"</span>)</span><br><span class="line">                        .description(<span class="string">"项目简介"</span>)</span><br><span class="line">                        .version(<span class="string">"1.0"</span>)</span><br><span class="line">                        .contact(<span class="keyword">new</span> Contact(<span class="string">"long long"</span>,<span class="string">"https://woilanlan.github.io"</span>,<span class="string">"test@gmail.com"</span>))</span><br><span class="line">                        .license(<span class="string">"The Apache License"</span>)</span><br><span class="line">                        .licenseUrl(<span class="string">"https://woilanlan.github.io"</span>)</span><br><span class="line">                        .build());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里提供一个配置类，首先通过 @EnableSwagger2 注解启用 Swagger2 ，然后配置一个 Docket Bean，这个 Bean 中，配置映射路径和要扫描的接口的位置，</p><p>在 apiInfo 中，主要配置一下 Swagger2 文档网站的信息，例如网站的 title，网站的描述，联系人的信息，使用的协议等等。</p><p>启动项目，访问 <a href="http://localhost:8080/swagger-ui.html" target="_blank" rel="noopener">http://localhost:8080/swagger-ui.html</a> 进行查看</p><h2 id="三、创建接口"><a href="#三、创建接口" class="headerlink" title="三、创建接口"></a>三、创建接口</h2><p>UserController.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@Api</span>(tags = <span class="string">"用户管理相关接口"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    UserService userService;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/users"</span>)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"查询所有用户的接口"</span>)</span><br><span class="line">    <span class="meta">@ApiImplicitParams</span>(&#123;</span><br><span class="line">            <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"page"</span>,value = <span class="string">"页码"</span>,defaultValue = <span class="string">"1"</span>),</span><br><span class="line">            <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"count"</span>,value = <span class="string">"每页显示几条"</span>,defaultValue = <span class="string">"5"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">getAllUser</span><span class="params">(@RequestParam(defaultValue = <span class="string">"1"</span>)</span> Integer page, @<span class="title">RequestParam</span><span class="params">(defaultValue = <span class="string">"5"</span>)</span> Integer count)</span>&#123;</span><br><span class="line">        System.out.println(<span class="string">"getAllUser"</span>);</span><br><span class="line">        <span class="keyword">return</span> userService.getAllUser(page,count);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@GetMapping</span>(<span class="string">"/user/&#123;id&#125;"</span>)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"根据id查询用户的接口"</span>)</span><br><span class="line">    <span class="meta">@ApiImplicitParam</span>(name = <span class="string">"id"</span>, value = <span class="string">"用户id"</span>, required = <span class="keyword">true</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> User <span class="title">getUserById</span><span class="params">(@PathVariable Integer id)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> userService.getUserById(id);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@PostMapping</span>(<span class="string">"/user"</span>)</span><br><span class="line">    <span class="meta">@ApiOperation</span>(<span class="string">"新增用户的接口"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">addUser</span><span class="params">(@RequestBody User user)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> result = userService.addUser(user);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"添加成功"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注解说明：</p><ul><li>@Api 注解可以用来标记当前 Controller 的功能。</li><li>@ApiOperation 注解用来标记一个方法的作用。</li><li>@ApiImplicitParam 注解用来描述一个参数，可以配置参数的中文含义，也可以给参数设置默认值，这样在接口测试的时候可以避免手动输入。</li><li>如果有多个参数，则需要使用多个 @ApiImplicitParam 注解来描述，多个 @ApiImplicitParam 注解需要放在一个 @ApiImplicitParams 注解中。</li><li>需要注意的是，@ApiImplicitParam 注解中虽然可以指定参数是必填的，但是却不能代替 @RequestParam(required = true) ，前者的必填只是在 Swagger2 框架内必填，抛弃了 Swagger2 ，这个限制就没用了，所以假如开发者需要指定一个参数必填， @RequestParam(required = true) 注解还是不能省略。</li><li>如果参数是一个对象（例如上文的更新接口），对于参数的描述也可以放在实体类中。</li></ul><p>user.java</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@ApiModel</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>&#123;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"id"</span>)</span><br><span class="line">    <span class="keyword">private</span> Long id;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"姓名"</span>)</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"年龄"</span>)</span><br><span class="line">    <span class="keyword">private</span> Integer age;</span><br><span class="line">    <span class="meta">@ApiModelProperty</span>(value = <span class="string">"邮箱"</span>)</span><br><span class="line">    <span class="keyword">private</span> String email;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>刷新刚刚打开的页面，可以看到相关的接口描述</p><p>参数类型下面标记</p><ul><li>query 表示参数以 key/value 的形式传递</li><li>body 表示参数以请求体的方式传递，例如上文的新增接口</li><li>path 表示参数放在路径中传递，例如根据 id 查询用户的接口</li></ul><h2 id="四、在-Security-中的配置"><a href="#四、在-Security-中的配置" class="headerlink" title="四、在 Security 中的配置"></a>四、在 Security 中的配置</h2><p>如果我们的 Spring Boot 项目中集成了 Spring Security，那么如果不做额外配置，Swagger2 文档可能会被拦截。</p><p>需要在 Spring Security 的配置类中重写 configure 方法，添加如下过滤即可：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">configure</span><span class="params">(WebSecurity web)</span> <span class="keyword">throws</span> Exception </span>&#123;</span><br><span class="line">    web.ignoring()</span><br><span class="line">            .antMatchers(<span class="string">"/swagger-ui.html"</span>)</span><br><span class="line">            .antMatchers(<span class="string">"/v2/**"</span>)</span><br><span class="line">            .antMatchers(<span class="string">"/swagger-resources/**"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MyBatis Generator</title>
      <link href="/2019/12/10/MyBatis-Generator/"/>
      <url>/2019/12/10/MyBatis-Generator/</url>
      
        <content type="html"><![CDATA[<p>官网：<a href="http://mybatis.org/generator/index.html" target="_blank" rel="noopener">http://mybatis.org/generator/index.html</a></p><p>参考：<a href="https://blog.csdn.net/gnail_oug/article/details/80404870" target="_blank" rel="noopener">https://blog.csdn.net/gnail_oug/article/details/80404870</a></p><h2 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h2><p>访问github地址：<a href="https://github.com/mybatis/generator" target="_blank" rel="noopener">https://github.com/mybatis/generator</a></p><p>在 Release 页面下载 mybatis-generator-core-1.4.0-bundle.zip</p><p>解压下载的文件，创建目录test</p><p>复制 mybatis-generator-core-1.4.0.jar 到目录test<br>复制 mysql-connector-java-8.0.14.jar 到目录test</p><h2 id="2、创建配置文件"><a href="#2、创建配置文件" class="headerlink" title="2、创建配置文件"></a>2、创建配置文件</h2><p>generatorConfig.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN" "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line">  </span><br><span class="line">  <span class="tag">&lt;<span class="name">classPathEntry</span> <span class="attr">location</span>=<span class="string">"./mysql-connector-java-8.0.14.jar"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">  MyBatis3DynamicSql 默认值</span></span><br><span class="line"><span class="comment">  MyBatis3Simple MyBatis3 运行时的简化版本，javaClientGenerator的type="XMLMAPPER"才生效</span></span><br><span class="line"><span class="comment">  内部标签有顺序要求</span></span><br><span class="line"><span class="comment">  --&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"mysql"</span> <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3Simple"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 注释配置 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"addRemarkComments"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressDate"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 数据库连接 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">connectionURL</span>=<span class="string">"jdbc:mysql://127.0.0.1:3306/test?characterEncoding=UTF-8&amp;amp;useSSL=false&amp;amp;useUnicode=true&amp;amp;serverTimezone=Asia/Shanghai"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">userId</span>=<span class="string">"root"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">password</span>=<span class="string">"root"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"nullCatalogMeansCurrent"</span> <span class="attr">value</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生成POJO对象，并将类放到top.woilanlan.example.bean包下 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"top.woilanlan.example.bean"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生成mapper xml文件，并放到top.woilanlan.example.bean包下 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"top.woilanlan.example.mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span><span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 生成mapper xml对应dao接口，放到top.woilanlan.example.mapper包下--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"top.woilanlan.example.mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- table标签可以有多个，至少一个，tableName指定表名，可以使用_和%通配符 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">tableName</span>=<span class="string">"t_book"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 是否只生成POJO对象 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- &lt;property name="modelOnly" value="false"/&gt; --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 数据库中表名有时我们都会带个前缀，而实体又不想带前缀，这个配置可以把实体的前缀去掉 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">domainObjectRenamingRule</span> <span class="attr">searchString</span>=<span class="string">"^T"</span> <span class="attr">replaceString</span>=<span class="string">""</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="3、执行"><a href="#3、执行" class="headerlink" title="3、执行"></a>3、执行</h2><p>在test目录，打开命令行工具执行</p><p>在windows环境下也可以将其写到run.bat脚本文件中，双击运行即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java -jar .\mybatis-generator-core-1.4.0.jar -configfile .\generatorConfig.xml -overwrite</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> JavaWeb </category>
          
          <category> mybatis </category>
          
      </categories>
      
      
        <tags>
            
            <tag> mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Lombok使用</title>
      <link href="/2019/12/10/Lombok%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/12/10/Lombok%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://mp.weixin.qq.com/s/-4W5-fOK0sGSaNBktXA-YQ" target="_blank" rel="noopener">一份不可多得的 Lombok 学习指南</a></p><p><a href="https://zhuanlan.zhihu.com/p/32779910" target="_blank" rel="noopener">Lombok 看这篇就够了</a></p><h2 id="一、Lombok-简介"><a href="#一、Lombok-简介" class="headerlink" title="一、Lombok 简介"></a>一、Lombok 简介</h2><p>Lombok 是一款 Java 开发插件，使得 Java 开发者可以通过其定义的一些注解来消除业务工程中冗长和繁琐的代码，尤其对于简单的 Java 模型对象（POJO）。在开发环境中使用 Lombok 插件后，Java 开发人员可以节省出重复构建，诸如 hashCode 和 equals 这样的方法以及各种业务对象模型的 accessor 和 toString 等方法的大量时间。对于这些方法，Lombok 能够在编译源代码期间自动帮我们生成这些方法，但并不会像反射那样降低程序的性能。</p><h2 id="二、Lombok-安装"><a href="#二、Lombok-安装" class="headerlink" title="二、Lombok 安装"></a>二、Lombok 安装</h2><p>2.1 构建工具</p><p>Maven</p><p>在 Maven 项目的 pom.xml 文件中添加 Lombok 依赖：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.projectlombok<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>lombok<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.18.10<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">scope</span>&gt;</span>provided<span class="tag">&lt;/<span class="name">scope</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2.2 IDEA 中安装 lombok 插件</p><p>打开 IDEA 的 Settings 面板 &gt;&gt; 选择 Plugins 选项 &gt;&gt; 在输入框输入”lombok” &gt;&gt; 点击安装 &gt;&gt; 提示重启 IDEA，安装成功</p><h2 id="三、Lombok-详解"><a href="#三、Lombok-详解" class="headerlink" title="三、Lombok 详解"></a>三、Lombok 详解</h2><p>使用：在实体类上引入相关的注解</p><h3 id="Getter-and-Setter"><a href="#Getter-and-Setter" class="headerlink" title="@Getter and @Setter"></a>@Getter and @Setter</h3><p>自动生成默认的 getter/setter 方法。</p><h3 id="Constructor-Annotations"><a href="#Constructor-Annotations" class="headerlink" title="Constructor Annotations"></a>Constructor Annotations</h3><p>使用 @NoArgsConstructor 注解可以为指定类，生成默认的构造函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//若设置 staticName 属性，将会生成一个私有的构造函数且生成一个staticName指定的静态方法</span></span><br><span class="line"><span class="meta">@NoArgsConstructor</span>(staticName = <span class="string">"getInstance"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">NoArgsConstructorDemo</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">long</span> id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> age;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用 @AllArgsConstructor 注解可以为指定类，生成包含所有成员的构造函数</p><p>使用 @RequiredArgsConstructor 注解可以为指定类必需初始化的成员变量，如 final 成员变量，生成对应的构造函数</p><h3 id="EqualsAndHashCode"><a href="#EqualsAndHashCode" class="headerlink" title="@EqualsAndHashCode"></a>@EqualsAndHashCode</h3><p>为指定类生成 equals 和 hashCode 方法</p><h3 id="ToString"><a href="#ToString" class="headerlink" title="@ToString"></a>@ToString</h3><p>为指定类生成 toString 方法</p><h3 id="Data"><a href="#Data" class="headerlink" title="@Data"></a>@Data</h3><p>@Data 注解与同时使用以下的注解的效果是一样的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@ToString</span></span><br><span class="line"><span class="meta">@Getter</span></span><br><span class="line"><span class="meta">@Setter</span></span><br><span class="line"><span class="meta">@RequiredArgsConstructor</span></span><br><span class="line"><span class="meta">@EqualsAndHashCode</span></span><br></pre></td></tr></table></figure><h3 id="Log"><a href="#Log" class="headerlink" title="@Log"></a>@Log</h3><p>若你将 @Log 的变体放在类上（适用于你所使用的日志记录系统的任何一种）；之后，你将拥有一个静态的 final log 字段，然后你就可以使用该字段来输出日志。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Log</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> java.util.logging.Logger log = java.util.logging.Logger.getLogger(LogExample.class.getName());</span><br><span class="line"><span class="meta">@Log</span>4j</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(LogExample.class);</span><br><span class="line"><span class="meta">@Log</span>4j2</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.logging.log4j.Logger log = org.apache.logging.log4j.LogManager.getLogger(LogExample.class);</span><br><span class="line"><span class="meta">@Slf</span>4j</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.slf4j.Logger log = org.slf4j.LoggerFactory.getLogger(LogExample.class);</span><br><span class="line"><span class="meta">@XSlf</span>4j</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.slf4j.ext.XLogger log = org.slf4j.ext.XLoggerFactory.getXLogger(LogExample.class);</span><br><span class="line"><span class="meta">@CommonsLog</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> org.apache.commons.logging.Log log = org.apache.commons.logging.LogFactory.getLog(LogExample.class);</span><br></pre></td></tr></table></figure><h3 id="Synchronized"><a href="#Synchronized" class="headerlink" title="@Synchronized"></a>@Synchronized</h3><p>@Synchronized 是同步方法修饰符的更安全的变体。与 synchronized 一样，该注解只能应用在静态和实例方法上。它的操作类似于 synchronized 关键字，但是它锁定在不同的对象上。</p><p>synchronized 关键字应用在实例方法时，锁定的是 this 对象，而应用在静态方法上锁定的是类对象。对于 @Synchronized 注解声明的方法来说，它锁定的是 LOCK 或 lock</p><h3 id="Builder"><a href="#Builder" class="headerlink" title="@Builder"></a>@Builder</h3><p>使用 @Builder 注解可以为指定类实现建造者模式，该注解可以放在类、构造函数或方法上</p><h3 id="SneakyThrows"><a href="#SneakyThrows" class="headerlink" title="@SneakyThrows"></a>@SneakyThrows</h3><p>@SneakyThrows 注解用于自动抛出已检查的异常，而无需在方法中使用 throw 语句显式抛出。</p><h3 id="NonNull"><a href="#NonNull" class="headerlink" title="@NonNull"></a>@NonNull</h3><p>在方法或构造函数的参数上使用 @NonNull 注解，它将会为你自动生成非空校验语句</p><h3 id="Clean"><a href="#Clean" class="headerlink" title="@Clean"></a>@Clean</h3><p>@Clean 注解用于自动管理资源，用在局部变量之前，在当前变量范围内即将执行完毕退出之前会自动清理资源，自动生成 try-finally 这样的代码来关闭流。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CleanupDemo</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="meta">@Cleanup</span> InputStream in = <span class="keyword">new</span> FileInputStream(args[<span class="number">0</span>]);</span><br><span class="line">        <span class="meta">@Cleanup</span> OutputStream out = <span class="keyword">new</span> FileOutputStream(args[<span class="number">1</span>]);</span><br><span class="line">        <span class="keyword">byte</span>[] b = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">10000</span>];</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">int</span> r = in.read(b);</span><br><span class="line">            <span class="keyword">if</span> (r == -<span class="number">1</span>) <span class="keyword">break</span>;</span><br><span class="line">            out.write(b, <span class="number">0</span>, r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="With"><a href="#With" class="headerlink" title="@With"></a>@With</h3><p>在类的字段上应用 @With 注解之后，将会自动生成一个 withFieldName(newValue) 的方法，该方法会基于 newValue 调用相应构造函数，创建一个当前类对应的实例。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
          <category> 插件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java环境配置</title>
      <link href="/2019/12/10/Java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/12/10/Java%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="1、JDK下载"><a href="#1、JDK下载" class="headerlink" title="1、JDK下载"></a>1、JDK下载</h2><p>进入java SE的下载页面，找到JDK，点击下载。</p><p><a href="http://www.oracle.com/technetwork/java/javase/downloads/index.html" target="_blank" rel="noopener">http://www.oracle.com/technetwork/java/javase/downloads/index.html</a></p><h2 id="2、环境变量配置"><a href="#2、环境变量配置" class="headerlink" title="2、环境变量配置"></a>2、环境变量配置</h2><p><a href="https://blog.csdn.net/ZZQ928000/article/details/80373354" target="_blank" rel="noopener">https://blog.csdn.net/ZZQ928000/article/details/80373354</a></p><p>从jdk-9之后就已经没有tools.jar和dt.jar了，也不需要在classpath里面配置这些jar了，配置可参考：</p><ul><li>JAVA_HOME=jdk安装路径</li><li>JRE_HOME=jre安装路径</li><li>PATH= ;%JAVA_HOME%\bin;%JRE_HOME%\bin</li><li>CLASSPATH=.;%JAVA_HOME%\lib;%JRE_HOME%\lib</li></ul><h2 id="3、验证是否安装成功"><a href="#3、验证是否安装成功" class="headerlink" title="3、验证是否安装成功"></a>3、验证是否安装成功</h2><p>Win + R –&gt; 输入cmd –&gt;进入控制台</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line"></span><br><span class="line"><span class="built_in">where</span> java</span><br><span class="line"></span><br><span class="line">javac -version</span><br></pre></td></tr></table></figure><h2 id="4、安装Eclipse"><a href="#4、安装Eclipse" class="headerlink" title="4、安装Eclipse"></a>4、安装Eclipse</h2><p><a href="http://www.eclipse.org/" target="_blank" rel="noopener">http://www.eclipse.org/</a></p><p>点击Download，在Get Eclipse模块选择Download Packages，找到Eclipse IDE for Java EE Developers</p><p>选择Neon Packages版本，在右边找到下载链接，点击下载。</p><h2 id="5、安装Tomcat9"><a href="#5、安装Tomcat9" class="headerlink" title="5、安装Tomcat9"></a>5、安装Tomcat9</h2><p><a href="https://tomcat.apache.org/" target="_blank" rel="noopener">https://tomcat.apache.org/</a></p><p>1、在左侧Download点击Tomcat 9,找到Core选择：64-bit Windows zip进行下载。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Binary Distributions</span><br><span class="line"></span><br><span class="line">Core:</span><br><span class="line"></span><br><span class="line">zip (pgp, sha1, sha512)</span><br><span class="line">tar.gz (pgp, sha1, sha512)</span><br><span class="line">32-bit Windows zip (pgp, sha1, sha512)</span><br><span class="line">64-bit Windows zip (pgp, sha1, sha512)</span><br><span class="line">32-bit/64-bit Windows Service Installer (pgp, sha1, sha512)</span><br></pre></td></tr></table></figure><p>2、前提：正确安装jdk，并配置好系统变量例如：JAVA_HOME=jdk安装路径</p><p>3、打开cmd移动到tomcat安装目录的bin目录：</p><p>输入 service.bat install 安装服务，自动帮你配置好tomcat环境变量,如下图为正确安装：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;d:</span><br><span class="line"></span><br><span class="line">D:\&gt;<span class="built_in">cd</span> java/tomcat/apache-tomcat-9.0.10/bin</span><br><span class="line"></span><br><span class="line">D:\java\tomcat\apache-tomcat-9.0.10\bin&gt;service.bat install</span><br><span class="line">Installing the service <span class="string">'Tomcat9'</span> ...</span><br><span class="line">Using CATALINA_HOME:    <span class="string">"D:\java\tomcat\apache-tomcat-9.0.10"</span></span><br><span class="line">Using CATALINA_BASE:    <span class="string">"D:\java\tomcat\apache-tomcat-9.0.10"</span></span><br><span class="line">Using JAVA_HOME:        <span class="string">"D:\java\Java\jdk-10.0.1"</span></span><br><span class="line">Using JRE_HOME:         <span class="string">"D:\java\Java\jre"</span></span><br><span class="line">Using JVM:              <span class="string">"D:\java\Java\jdk-10.0.1\bin\server\jvm.dll"</span></span><br><span class="line">The service <span class="string">'Tomcat9'</span> has been installed.</span><br></pre></td></tr></table></figure><p>查看服务：按住win+R，打开运行，输入：services.msc</p><p>4、启动tomcat，有四种方法：</p><ul><li>双击bin目录下的startup.bat批处理运行tomcat（这样的好处是可以看到运行状态，推荐使用）</li><li>以管理员运行cmd运行net start tomcat9命令（9是版本号）</li><li>通过任务管理器里面的服务运行</li><li>双击bin目录下的tomcat9w.exe打卡并点击start运行tomcat</li></ul><p>5、浏览器中可以正常打开网页：<a href="http://localhost:8080/" target="_blank" rel="noopener">http://localhost:8080/</a></p><p>6、卸载Tomcat:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service.bat remove to Tomcat9</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python环境配置</title>
      <link href="/2019/12/01/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/12/01/python%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h2 id="1、下载"><a href="#1、下载" class="headerlink" title="1、下载"></a>1、下载</h2><p>进入 python 官网，点击 Downloads 下载</p><p><a href="https://www.python.org/downloads/" target="_blank" rel="noopener">https://www.python.org/downloads/</a></p><a id="more"></a><h2 id="2、安装"><a href="#2、安装" class="headerlink" title="2、安装"></a>2、安装</h2><p>2.1 双击python的安装程序</p><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/01.png" alt="01.png"></p><p>2.2 弹出安装界面</p><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/02.png" alt="02.png"></p><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/03.png" alt="03.png"></p><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/04.png" alt="04.png"></p><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/05.png" alt="05.png"></p><p>2.3 验证安装成功</p><p>打开 cmd 并运行以下命令：</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">py <span class="number">-3</span> --version</span><br></pre></td></tr></table></figure><h2 id="3、创建虚拟环境"><a href="#3、创建虚拟环境" class="headerlink" title="3、创建虚拟环境"></a>3、创建虚拟环境</h2><p>默认情况下，您安装的任何Python解释器都在其自己的全局环境中运行，该环境并不特定于任何一个项目。您安装或卸载的任何程序包都会影响全局环境以及在该上下文中运行的所有程序。</p><p>虚拟环境是项目中的子文件夹，其中包含特定解释器的副本。</p><p>激活虚拟环境时，您安装的所有软件包仅安装在该环境的子文件夹中。然后，当您在该环境中运行Python程序时，就会知道该程序仅针对那些特定的程序包运行。</p><p>要创建虚拟环境，请使用以下命令，其中“.venv”是环境文件夹的名称</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># macOS/Linux</span></span><br><span class="line"><span class="comment"># You may need to run sudo apt-get install python3-venv first</span></span><br><span class="line">python3 -m venv .venv</span><br><span class="line"></span><br><span class="line"><span class="comment"># Windows</span></span><br><span class="line"><span class="comment"># You can also use py -3 -m venv .venv</span></span><br><span class="line">python -m venv .venv</span><br></pre></td></tr></table></figure><h2 id="4、VS-Code中的Python入门"><a href="#4、VS-Code中的Python入门" class="headerlink" title="4、VS Code中的Python入门"></a>4、VS Code中的Python入门</h2><h3 id="4-1-安装-python-插件"><a href="#4-1-安装-python-插件" class="headerlink" title="4.1 安装 python 插件"></a>4.1 安装 python 插件</h3><p><img src="https://photo.woilanlan.top/blog/img/2019/12/01/06.png" alt="06.png"></p><h3 id="4-2-创建项目文件夹"><a href="#4-2-创建项目文件夹" class="headerlink" title="4.2 创建项目文件夹"></a>4.2 创建项目文件夹</h3><p>创建一个名为“hello”的空文件夹，导航至该文件夹，在该文件夹中打开VS Code</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir hello</span><br><span class="line">cd hello</span><br><span class="line">code .</span><br></pre></td></tr></table></figure><h3 id="4-3-选择一个Python解释器"><a href="#4-3-选择一个Python解释器" class="headerlink" title="4.3 选择一个Python解释器"></a>4.3 选择一个Python解释器</h3><p>默认情况下，Python扩展会查找并使用它在系统路径中找到的第一个Python解释器,如果找不到解释器，则会发出警告。</p><p>打开命令面板（Ctrl + Shift + P），使用 <code>Python: Select Interpreter</code> 选择特定python环境</p><h3 id="4-4-编写-python-程序"><a href="#4-4-编写-python-程序" class="headerlink" title="4.4 编写 python 程序"></a>4.4 编写 python 程序</h3><p>新建文件：hello.py</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">msg = <span class="string">"Hello World"</span></span><br><span class="line">print(msg)</span><br></pre></td></tr></table></figure><h3 id="4-5-运行"><a href="#4-5-运行" class="headerlink" title="4.5 运行"></a>4.5 运行</h3><p>点击编辑器右上角的“在终端中运行Python文件”按钮</p>]]></content>
      
      
      <categories>
          
          <category> python入门 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简历</title>
      <link href="/2019/11/20/%E7%AE%80%E5%8E%86/"/>
      <url>/2019/11/20/%E7%AE%80%E5%8E%86/</url>
      
        <content type="html"><![CDATA[<h2 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h2><p>我叫薛培龙，毕业于南昌航空大学，专业是软件工程。我的家乡是在河南省三门峡市，有着被誉为“地平线下古村落，民居史上活化石”的陕州地坑院。喜欢读书，听音乐，写博客，最喜欢的书是《小王子》和《老人与海》，平时会在github上关注一些热门的开源项目，开阔自己的知识面。写博客目的是提醒自己要定期学习，避免重复踩坑，也希望自己变得更好。</p><h2 id="求职意向"><a href="#求职意向" class="headerlink" title="求职意向"></a>求职意向</h2><p>现从事的工作是java web 开发，应聘的职位是：计算机科学与技术/通信工程</p><h2 id="项目经验"><a href="#项目经验" class="headerlink" title="项目经验"></a>项目经验</h2><p>数据采集系统后台功能模块开发，在这个项目中主要负责数据接口的编写，包括用户，部门，角色，菜单和业务数据的管理，项目框架使用的是springboot + mybatis + layui，为了规范接口文档使用了Swagger2。</p><h2 id="技术能力"><a href="#技术能力" class="headerlink" title="技术能力"></a>技术能力</h2><ul><li>掌握java的基础语法</li><li>熟悉JavaScript、Ajax、HTML等相关技术</li><li>熟悉Spring mvc，mybatis，熟悉mysql数据库，</li><li>熟悉linux常用操作</li><li>了解Tomcat等常用的中间件</li></ul>]]></content>
      
      
      <categories>
          
          <category> 简历 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>高效的工作</title>
      <link href="/2019/11/20/%E9%AB%98%E6%95%88%E7%9A%84%E5%B7%A5%E4%BD%9C/"/>
      <url>/2019/11/20/%E9%AB%98%E6%95%88%E7%9A%84%E5%B7%A5%E4%BD%9C/</url>
      
        <content type="html"><![CDATA[<h2 id="工作思路"><a href="#工作思路" class="headerlink" title="工作思路"></a>工作思路</h2><p>10分钟内能完成的事情一定是要立马进行解决的。</p><p>当前事情进行中，需要稍后处理的一定要记录到待办事项中。</p><p>对于庞大复杂的事情，一定是要做思维导图。一定要对其进行划分阶段，预估每个阶段所需时间。必须对时间进行把控。</p><p>日常工作一定要使用番茄钟，清晰明了知道每个番茄钟做了什么事情。</p><p>在预定的时间内没有达到目标，一定要记录中间发生了什么事情占用了规划的时间。</p><p>为下一次的计划提供经验。</p><h2 id="工作态度"><a href="#工作态度" class="headerlink" title="工作态度"></a>工作态度</h2><p>做事情就得昂头挺胸，就要坐的端端正正。</p><p>一定要简单明了，干脆利索</p><p>不要去和稀泥，不要去分神</p><p>要做什么事，这个事情一定是要放在脑子里的第一位，其他再天大的事情也要等这件事做完了。</p><p>一件事做不好，什么事情都做不好。</p><p>不要想着自己变圆滑，人生这么短，凭什么总是委屈自己。</p><p>想做的事情，就勇敢的去做，没有什么值得不值得，不论对错自己承担。</p><p>千万不要因为自己不努力，而委屈了自己也耽误了别人。</p><p>人活着一定是一柄利刃，刀刃锋利，一往无前。</p>]]></content>
      
      
      <categories>
          
          <category> 工作 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>03css</title>
      <link href="/2019/11/18/03CSS%E7%BD%91%E6%A0%BC/"/>
      <url>/2019/11/18/03CSS%E7%BD%91%E6%A0%BC/</url>
      
        <content type="html"><![CDATA[<h2 id="网格布局"><a href="#网格布局" class="headerlink" title="网格布局"></a>网格布局</h2><p>实例1：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1.0"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"ie=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css"><span class="selector-class">.container</span> &#123;</span></span><br><span class="line">  display: grid;</span><br><span class="line">  width: 750px;</span><br><span class="line">  height: 600px;</span><br><span class="line">  grid-template-columns: 200px 1fr 1fr;</span><br><span class="line">  grid-template-rows: 80px 1fr 1fr 100px;</span><br><span class="line">  grid-gap: 1rem;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.header</span> &#123;</span></span><br><span class="line">  grid-row: 1 / 2;</span><br><span class="line">  grid-column: 1 / 4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.sidebar</span> &#123;</span></span><br><span class="line">  grid-row: 2 / 4;</span><br><span class="line">  grid-column: 1 / 2;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.content-1</span> &#123;</span></span><br><span class="line">  grid-row: 2 / 3;</span><br><span class="line">  grid-column: 2 / 4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.content-2</span> &#123;</span></span><br><span class="line">  grid-row: 3 / 4;</span><br><span class="line">  grid-column: 2 / 3;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.content-3</span> &#123;</span></span><br><span class="line">  grid-row: 3 / 4;</span><br><span class="line">  grid-column: 3 / 4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.footer</span> &#123;</span></span><br><span class="line">  grid-row: 4 / 5;</span><br><span class="line">  grid-column: 1 / 4;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="comment">/* OTHER STYLES */</span></span></span><br><span class="line"></span><br><span class="line">body &#123;</span><br><span class="line">  padding: 200px;</span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#3b404e</span>;</span></span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  padding: 20px;</span><br><span class="line">  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.item</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#1EAAFC</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(130<span class="selector-tag">deg</span>, <span class="selector-id">#6C52D9</span> 0%, <span class="selector-id">#1EAAFC</span> 85%, <span class="selector-id">#3EDFD7</span> 100%);</span></span><br><span class="line"><span class="css">  <span class="selector-tag">box-shadow</span>: 0 10<span class="selector-tag">px</span> 20<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.19</span>), 0 6<span class="selector-tag">px</span> 6<span class="selector-tag">px</span> <span class="selector-tag">rgba</span>(0,0,0,0<span class="selector-class">.23</span>);</span></span><br><span class="line"><span class="css">  <span class="selector-tag">color</span>: <span class="selector-id">#ffffff</span>;</span></span><br><span class="line">  border-radius: 4px;</span><br><span class="line"><span class="css">  <span class="selector-tag">border</span>: 6<span class="selector-tag">px</span> <span class="selector-tag">solid</span> <span class="selector-id">#171717</span>;</span></span><br><span class="line">  display: flex;</span><br><span class="line">  justify-content: center;</span><br><span class="line">  align-items: center;</span><br><span class="line">  font-size: 18px;</span><br><span class="line">  font-weight: bold;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.header</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#1EAAFC</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(160<span class="selector-tag">deg</span>, <span class="selector-id">#6C52D9</span> 0%, <span class="selector-id">#9B8AE6</span> 127%);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.sidebar</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(203<span class="selector-tag">deg</span>, <span class="selector-id">#3EDFD7</span> 0%, <span class="selector-id">#29A49D</span> 90%)</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.content-1</span>,</span></span><br><span class="line"><span class="css"><span class="selector-class">.content-2</span>,</span></span><br><span class="line"><span class="css"><span class="selector-class">.content-3</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(130<span class="selector-tag">deg</span>, <span class="selector-id">#6C52D9</span> 0%, <span class="selector-id">#1EAAFC</span> 85%, <span class="selector-id">#3EDFD7</span> 100%);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="css"><span class="selector-class">.footer</span> &#123;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-color</span>: <span class="selector-id">#6C52D9</span>;</span></span><br><span class="line"><span class="css">  <span class="selector-tag">background-image</span>: <span class="selector-tag">linear-gradient</span>(160<span class="selector-tag">deg</span>, <span class="selector-id">#6C52D9</span> 0%, <span class="selector-id">#9B8AE6</span> 127%);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item header"</span>&gt;</span>header<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item sidebar"</span>&gt;</span>sidebar<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item content-1"</span>&gt;</span>Content-1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item content-2"</span>&gt;</span>Content-2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item content-3"</span>&gt;</span>Content-3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"item footer"</span>&gt;</span>footer<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> 浏览器 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>02查看器</title>
      <link href="/2019/11/18/02%E6%9F%A5%E7%9C%8B%E5%99%A8/"/>
      <url>/2019/11/18/02%E6%9F%A5%E7%9C%8B%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h2 id="一、打开"><a href="#一、打开" class="headerlink" title="一、打开"></a>一、打开</h2><ul><li>使用快捷键：Ctrl + Shift + C</li><li>Web开发者工具 – 查看器</li></ul><h2 id="二、选择元素"><a href="#二、选择元素" class="headerlink" title="二、选择元素"></a>二、选择元素</h2><p>右键单击网页上的一个元素，并选择“查看元素”</p><p>点击开发者工具的左上角的图标：选取页面中的元素</p><p>使用方向键来改变当前选中的元素：</p><ul><li>上：当前元素的上一个元素</li><li>下：当前元素的下一个元素</li><li>左：高亮当前元素的父级</li><li>右：高亮当前元素的子级，如果没有子级则就轮到同级， 如果没有同级就轮到下一个节点。</li></ul><p>当一个元素及其父级占据了屏幕同一个空间的情况下，只使用鼠标很难选中其中一个元素，这个功能就特别有用了。</p><h2 id="三、查看和编辑HTML"><a href="#三、查看和编辑HTML" class="headerlink" title="三、查看和编辑HTML"></a>三、查看和编辑HTML</h2><p>1、搜索</p><ul><li>点击搜索框，输入你想寻找的类型按“Enter”，页面中的第一个元素类型将被选中。</li><li>再按“Enter”查找下一个。</li></ul><p>2、html树</p><p>每个箭头表示一个节点：单击箭头来展开节点。如果你按住Alt键单击箭头，会一次性展开下面的所有节点。</p><p>3、右键菜单</p><p>在一个特定节点使用右键弹出菜单执行某些常见的任务。（编辑，复制，粘贴，控制状态）</p><p>4、编辑html</p><ul><li>直接在HTML面板编辑HTML标签、属性和内容：双击要编辑的文本，修改它，按Enter键立即看到更改效果。</li><li>使用右键菜单，选择“编辑HTML”，在文本框中进行编辑</li><li>点击并按住任何元素，然后将其拖在树的上或下，当您释放鼠标按钮时，该元素将被插入相应的位置。</li></ul><h2 id="四、查看和编辑CSS"><a href="#四、查看和编辑CSS" class="headerlink" title="四、查看和编辑CSS"></a>四、查看和编辑CSS</h2><p>列出作用于当前元素的所有规则</p><p>1、规则显示</p><p>规则的声明，每条规则包含的样式列表：属性、值</p><ul><li>选择器旁边的图标是一个指向目标的按钮：单击按钮在页面上突出显示匹配这个选择器的所有节点。</li><li>被划掉的声明是被后面的规则所覆盖的。</li><li>鼠标悬停在一个声明上，,旁边会出现一个复选框，你可以用它来切换或关闭声明。</li><li>右侧链接到一个规则</li></ul><p>2、过滤规则</p><ul><li>不包含键入字符串的所有规则都被隐藏</li><li>其中包含了键入字符串的任何声明都被强调</li></ul><p>3、切换伪类</p><p>点击“ :hov ”图标，对所选元素切换伪类 :hover, :active, :focus</p><p>4、链接到css文件</p><p>在每一个规则的右上方会有显示：源文件名和行号，并附有链接，点击后在样式编辑器中打开该文件。</p><p>5、查看计算后CSS</p><ul><li>切换到”计算后“视图。这里显示选定元素的每个CSS属性计算后的值</li><li>在检索框中键入关键字可以进行列表的实时过滤</li></ul><p>6、添加和编辑规则</p><ul><li>如果你点击一个声明或规则，你可以对其进行编辑和查看，并立即看到结果。</li><li>点击搜索框后的加号图标</li><li>要添加一个新的声明到规则中，则点击规则的最后一行（右括号占据行）</li></ul><p>在编辑模式下您可以使用箭头键来增大/减小规则数字</p><ul><li>按一下向上箭头会由“1px”变成”2px“，</li><li>Shift +向上/向下将以10为最小单位改变，</li><li>Alt +向上/向下变化值为0.1，</li><li>shift+Page up/down 变化值为100。</li></ul><p>7、复制规则</p><p>复制全部：右键全选，选择复制</p><p>复制某一条规则：鼠标移到这条规则范围内（或者指向目标的按钮），右键选择复制规则</p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> 浏览器 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>01调试</title>
      <link href="/2019/11/18/01%E8%B0%83%E8%AF%95/"/>
      <url>/2019/11/18/01%E8%B0%83%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<p>快捷键：</p><ul><li>切换标签页：Ctrl + Tab</li><li>切换工具箱：Ctrl + Shift + I 或者 F12</li><li>查看器：Ctrl + Shift + C</li></ul><p>调试器：</p><p>在主界面，点击“显示所有快捷方式”，以查看</p><p>1、搜索：</p><ul><li>转到指定文件：Ctrl + P</li><li>查找下一个：Ctrl + G</li><li>在所有文件中查找：Ctrl + Shift + F</li><li>查找函数：Ctrl + Shift + O</li><li>转至指定行：Ctrl + ;</li></ul><p>2、步进：</p><ul><li>暂停/恢复：F8</li><li>单步执行：F10</li><li>步进：F11</li><li>步出：Shift + F11</li></ul><p>3、断点</p><ul><li>添加断点：单击代码左侧的数字</li><li>切换断点：Ctrl + B</li></ul><p>4、查看对应变量的值：</p><ul><li>在代码中使用 <code>console.log()</code> 在控制台输出变量的值</li><li>点击断点并暂停执行，打开控制台，输入变量名称，回车</li><li>鼠标悬停在变量上以查看该变量的值</li><li>右下角的范围部分，显示程序中此时此范围内的所有对象，第一个块将列出当前块/函数中的变量及其值。</li></ul><p>5、监视表达式</p><p>可以通过单击“添加监视表达式”并输入要监视的表达式（或变量名）来设置监视表达式（或变量的值）</p><p>6、调用堆栈</p><p>步进调试时，可以在这里看到调用了那些函数，这些函数在哪些行以及调用堆栈中的深度的信息。单击对应的函数，允许我们返回调用堆栈，以便我们可以找出问题的起始位置。</p><p>7、条件断点</p><p>在代码左侧的数字上右键选择添加条件，输入对应的表达式，回车</p><p>1、判断字符串中是否包含了某个指定的字符串。</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title.indexOf(<span class="string">"haha"</span>) != <span class="number">-1</span>;</span><br></pre></td></tr></table></figure><p>2、打印对应的日志信息。（避免调试以后再去修改我们的源代码）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(items[index].title);</span><br></pre></td></tr></table></figure><p>8、在我们代码中定义断点：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">debugger</span>;</span><br></pre></td></tr></table></figure><p>9、黑盒测试和美化源代码</p><p>在源代码区域左下角的眼睛是一个按钮，可以在你选中文件后进行black box（切换黑盒）。切换黑盒功能在查看源文件但不调试源文件时非常有用，就像jQuery的包一样。如果一个资源进入黑盒状态，此时调试器将不在关注此资源：所有在些文件中设置的断点将会失效，并且调试器跟踪到这里时将会跳过这里的代码。</p><p>对于压缩的js文件，在左下角部分点击“美化源代码”图标，进行美化，方便阅读。</p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> 浏览器 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>浮生</title>
      <link href="/2019/11/12/02%E6%B5%AE%E7%94%9F/"/>
      <url>/2019/11/12/02%E6%B5%AE%E7%94%9F/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">他真的很喜欢你，认真且怂，从一而终。</span><br><span class="line"></span><br><span class="line">何为思念？日月，星辰，旷野雨落。</span><br><span class="line">可否具体？山川，江流，烟袅湖泊。</span><br><span class="line">可否再具体？万物是你，无可躲。</span><br><span class="line"></span><br><span class="line">何谓孤寂？清风，艳日，无笑意。</span><br><span class="line">可否具体？左拥，右抱，无情欲。</span><br><span class="line">可否再具体？不得你。</span><br><span class="line"></span><br><span class="line">何为无救？良药、妙方，无可医。</span><br><span class="line">可否具体？扁鹊、华佗，俱无策。</span><br><span class="line">可否再具体？念你成疾。</span><br><span class="line"></span><br><span class="line">何谓求索？落霞，朝阳，七千里。</span><br><span class="line">可否具体？夏雨，冬雪，九万顷。</span><br><span class="line">可否再具体？追寻你。</span><br><span class="line"></span><br><span class="line">何谓不甘？落虹，繁星，皆远方。</span><br><span class="line">可否具体？彩云，洛神，黄粱梦。</span><br><span class="line">仍是不解。得你，再失你。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> miss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> miss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一章 相识</title>
      <link href="/2019/11/12/01%E7%9B%B8%E8%AF%86/"/>
      <url>/2019/11/12/01%E7%9B%B8%E8%AF%86/</url>
      
        <content type="html"><![CDATA[<h2 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h2><p>从开始决定讲述这个故事，到写下第一章，中间发生了很多的事情。每一天都在发生变化，每一天都是一个不一样的你。你永远猜不到下一秒到底会发生什么，因为什么都可能发生。</p><p>明知道不去怀念，就不会伤心，可那不是真实的我。</p><p>从小的我总是在扮演着一个懂事听话的孩子，是一个爱笑的孩子。诚然微笑会给生活带来希望，可当周围人习惯你的微笑时，他们就忽略了你的悲伤，忘记了你也会悲伤。</p><p>你的生活环境，接触的人，你的经历都决定了你看待一个事物的眼光，决定了你的选择，你的价值判断。</p><p>我不怪你的选择，我只是很想你。一路上你教会了我很多，感谢与你的遇见。</p><p>在这里我将不在压抑自己的情绪。我只想把这个故事讲好。</p><h2 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h2><p>我们就读于同一所高中，那个时候我还是一个成天做梦，痴迷于玄幻小说，对爱情懵懂的无知少年。她是一个有点孤僻，独立，要强的女孩子。两个人遇见已经很不容易了，能成为朋友更需要缘分。</p><p>我们真正开始了解彼此是在高考结束的那个暑假。</p>]]></content>
      
      
      <categories>
          
          <category> miss </category>
          
      </categories>
      
      
        <tags>
            
            <tag> miss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于miss</title>
      <link href="/2019/11/12/00%E5%85%B3%E4%BA%8Emiss/"/>
      <url>/2019/11/12/00%E5%85%B3%E4%BA%8Emiss/</url>
      
        <content type="html"><![CDATA[<p>miss这个单词，代表着想念，也代表着错过。</p><p>故事讲述了一个简单的爱情故事，它和其他爱情故事所不同的是，这个故事来自我的回忆，这个故事由我来讲述。</p><p>这个故事见证了我和那个女孩从相识、相遇、牵手、拥抱，争吵，和好，从大学到毕业，从异地到同城所有的一切故事。</p><p>五分喜欢的人，恨不得把他挂在嘴上招摇过市。有七分喜欢，就只能跟至亲密友分享。 有十分喜欢 ，那就谁也不舍得说了，憋着每天憋着一点小高兴，像只松鼠攒着满腮帮子的果仁</p><p>我就像是那只快乐的小松鼠，心里装满了对她的喜欢。</p>]]></content>
      
      
      <categories>
          
          <category> miss </category>
          
          <category> 序章 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> miss </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>04图床</title>
      <link href="/2019/11/06/04%E5%9B%BE%E5%BA%8A/"/>
      <url>/2019/11/06/04%E5%9B%BE%E5%BA%8A/</url>
      
        <content type="html"><![CDATA[<h2 id="一、概述"><a href="#一、概述" class="headerlink" title="一、概述"></a>一、概述</h2><p>图床就是一个在网络上存储图片的地方，目的是为了节省本地服务器空间。</p><p>图片上传、管理工具：PicGo</p><p>官网：<a href="https://picgo.github.io/PicGo-Doc/zh/" target="_blank" rel="noopener">https://picgo.github.io/PicGo-Doc/zh/</a></p><h2 id="二、VS-Code中使用-PicGo"><a href="#二、VS-Code中使用-PicGo" class="headerlink" title="二、VS Code中使用 PicGo"></a>二、VS Code中使用 PicGo</h2><h3 id="1、安装-PicGo-拓展"><a href="#1、安装-PicGo-拓展" class="headerlink" title="1、安装 PicGo 拓展"></a>1、安装 PicGo 拓展</h3><h3 id="2、使用-github-仓库作为图床"><a href="#2、使用-github-仓库作为图床" class="headerlink" title="2、使用 github 仓库作为图床"></a>2、使用 github 仓库作为图床</h3><p>登录GitHub</p><p>新建一个仓库，设置GitHub Pages</p><p>生成一个token用于PicGo操作你的仓库</p><ul><li>访问：<a href="https://github.com/settings/tokens" target="_blank" rel="noopener">https://github.com/settings/tokens</a></li><li>点击Generate new token</li><li>repo的勾打上</li><li>翻到页面最底部，点击Generate token的生成token。</li></ul><p>注意：这个token生成后只会显示一次！你要把这个token复制一下存到其他地方以备后用</p><h3 id="3、进行配置"><a href="#3、进行配置" class="headerlink" title="3、进行配置"></a>3、进行配置</h3><p>1、配置说明</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "repo": "", // 仓库名，格式是username/reponame</span><br><span class="line">  "token": "", // github token</span><br><span class="line">  "path": "", // 自定义存储路径，比如img/</span><br><span class="line">  "customUrl": "", // 自定义域名，注意要加http://或者https://</span><br><span class="line">  "branch": "" // 分支名，默认是master</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、在VS Code设置对应项</p><p><img src="https://photo.woilanlan.top/blog/img/2019/11/06/GitHub%E5%9B%BE%E5%BA%8A%E9%85%8D%E7%BD%AE.png" alt="GitHub图床配置.png"></p><h3 id="4、操作说明"><a href="#4、操作说明" class="headerlink" title="4、操作说明"></a>4、操作说明</h3><ul><li>从剪贴板上传图像:Ctrl + Alt + U</li><li>从资源管理器上传图像:Ctrl + Alt + E</li><li>从输入框上传图像:Ctrl + Alt + O</li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>03域名解析</title>
      <link href="/2019/11/06/03%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
      <url>/2019/11/06/03%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h2 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h2><p>1、阿里云，域名注册</p><p>2、域名列表查看购买的域名 &gt;&gt; 点击管理 &gt;&gt; 查看域名基本信息</p><p>3、域名持有者实名认证 &gt;&gt; 输入身份证号 &gt;&gt; 拍照上传 &gt;&gt; 等待审核</p><p>4、云解析DNS &gt;&gt; 点击解析设置 &gt;&gt; 点击新手引导 &gt;&gt; 网址解析 &gt;&gt;  同时添加’www’及‘@’记录 &gt;&gt; 记录值中填入服务器对应的ip地址</p><p>5、点击 Settings &gt;&gt; GitHub Pages &gt;&gt; Custom domain &gt;&gt; 输入你的域名 &gt;&gt; 点击 Save</p><p>6、向你的 Github Pages 仓库添加一个<code>CNAME</code>文件,其中输入你的域名。</p><p>记录类型：</p><p>A-将域名指向一个IPV4地址<br>CNAME-将域名指向另外一个域名</p><p>备注：</p><p>云解析DNS就是指把网站域名或应用资源转换为数字 IP 地址，从而将最终用户的访问路由到相应的网站或应用资源上。</p><p>查看对应的 ip 地址 <code>ping username.github.io</code></p><p>使用 hexo 框架搭建博客并部署到 Github Pages 上时，会把 public 文件夹里的东西都推到仓库，请把 CNAME 文件添加到 source 文件夹防止被覆盖。</p><h2 id="启用-HTTPS"><a href="#启用-HTTPS" class="headerlink" title="启用 HTTPS"></a>启用 HTTPS</h2><p>进入自己的仓库：username.github.io</p><p>点击 Settings &gt;&gt; GitHub Pages &gt;&gt; Enforce HTTPS &gt;&gt; 点击勾选</p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>02hexo</title>
      <link href="/2019/11/06/02hexo/"/>
      <url>/2019/11/06/02hexo/</url>
      
        <content type="html"><![CDATA[<h2 id="指南"><a href="#指南" class="headerlink" title="指南"></a>指南</h2><p><a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">Hexo官网</a></p><p><a href="https://guides.github.com/features/pages/" target="_blank" rel="noopener">GitHub页面入门</a></p><p><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">最全Hexo博客搭建</a></p><p><a href="https://www.jianshu.com/p/7b5702d3f072" target="_blank" rel="noopener">GitHub+Hexo（NexT主题）搭建博客</a></p><h2 id="一、全局安装和卸载"><a href="#一、全局安装和卸载" class="headerlink" title="一、全局安装和卸载"></a>一、全局安装和卸载</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">npm uninstall hexo-cli -g</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看版本，确认是否安装成功</span></span><br><span class="line">hexo -version</span><br></pre></td></tr></table></figure><h2 id="二、创建和运行项目"><a href="#二、创建和运行项目" class="headerlink" title="二、创建和运行项目"></a>二、创建和运行项目</h2><p>在项目所在目录，打开Git Bash</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 初始化项目</span></span><br><span class="line">hexo init blog</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> blog</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成静态页面（markdown文件转化为html文件）</span></span><br><span class="line">hexo generate</span><br><span class="line"></span><br><span class="line"><span class="comment"># 网站预览（默认的主题风格landscape）</span></span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure><h2 id="三、配置SSH-key"><a href="#三、配置SSH-key" class="headerlink" title="三、配置SSH key"></a>三、配置SSH key</h2><p>提交代码肯定要拥有你的github权限才可以，直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><p>1、检查电脑是否已经有SSH KEYS</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls -al ~/.ssh</span><br></pre></td></tr></table></figure><p>如果列出的文件有public和private钥匙对（例如id_ras.pub和id_rsa），证明已存在SSH keys。如果提示：No such file or directory 说明你是第一次使用git。</p><p>2、如果没有SSH KEY，则生成新的SSH KEY</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">"your_email@example.com"</span></span><br></pre></td></tr></table></figure><p>然后连续3次回车，在<code>C:\Users\longlong\.ssh</code>目录下，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容</p><p>3、打开github对应的仓库，添加SSH KEY</p><p>在Settings里选择Deploy keys,添加一个Deploy key,将复制的内容粘贴到key那里，title随便填，保存。</p><p>4、测试是否成功</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>github设置添加SSH：<a href="https://www.cnblogs.com/chuyanfenfei/p/8035067.html" target="_blank" rel="noopener">https://www.cnblogs.com/chuyanfenfei/p/8035067.html</a></p><h2 id="四、发布到Github"><a href="#四、发布到Github" class="headerlink" title="四、发布到Github"></a>四、发布到Github</h2><p>1、在站点目录下修改配置文件<code>_config.yml</code></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">git</span></span><br><span class="line">  <span class="comment">#对应仓库的SSH地址（可以在GitHub对应的仓库中复制）</span></span><br><span class="line"><span class="attr">  repo:</span> <span class="string">git@github.com:&lt;Github账号名称&gt;/&lt;Github账号名称&gt;.github.io.git</span></span><br><span class="line"><span class="attr">  branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>2、安装hexo-deployer-git插件</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>3、推送到Github仓库</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo d</span><br></pre></td></tr></table></figure><h2 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#部署到GitHub</span></span><br><span class="line">hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version  <span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure><p>缩写</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure><p>组合</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g <span class="comment">#生成并本地预览</span></span><br><span class="line">hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure><h2 id="升级"><a href="#升级" class="headerlink" title="升级"></a>升级</h2><p>1、全局的 hexo-cli 更新：卸载重装</p><p>2、更新项目的 package.json</p><p>全局安装 npm-check</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm install -g npm-check //全局安装。项目下安装可自行选择</span><br><span class="line">&gt; npm install npm-check    //项目下安装，项目根目录执行</span><br></pre></td></tr></table></figure><p>进入项目所在目录,查看包更新信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm-check</span><br></pre></td></tr></table></figure><p>更新包，分类别展示，使用空格选择包，然后enter开始更新。自动更新package.json内的相关包信息</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; npm-check -u</span><br></pre></td></tr></table></figure><p>npm-check指令列表</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-u, --update       显示一个交互式UI，用于选择要更新的模块，并自动更新<span class="string">"package.json"</span>内包版本号信息</span><br><span class="line">-g, --global       检查全局下的包</span><br><span class="line">-s, --skip-unused  忽略对未使用包的更新检查</span><br><span class="line">-p, --production   忽略对<span class="string">"devDependencies"</span>下的包的检查</span><br><span class="line">-d, --dev-only     忽略对<span class="string">"dependencies"</span>下的包的检查</span><br><span class="line">-i, --ignore       忽略对指定包的检查.</span><br><span class="line">-E, --save-exact   将确切的包版本存至<span class="string">"package.json"</span>(注意，此命令将存储<span class="string">'x.y.z'</span>而不是<span class="string">'^x.y.z'</span>)</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>1、hexo不是内部或外部命令，也不是可运行的程序</p><p>原因：在hexo模块的bin文件夹下，没有放置对应的cmd命令脚本，所以要将对应的cmd命令脚本添加到系统变量中</p><p>参考：<a href="https://blog.csdn.net/qq_27093465/article/details/72954725" target="_blank" rel="noopener">https://blog.csdn.net/qq_27093465/article/details/72954725</a></p><p>2、部署到GitHub时，执行命令<code>hexo d</code>没反应</p><p>在站点目录下修改配置文件<code>_config.yml</code>，冒号后面少了空格</p><p>3、如何在文章中插入图片</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 开启资源文件夹</span><br><span class="line">![](01.png)</span><br><span class="line"></span><br><span class="line">&#123;% asset_img 01.png 图片1 %&#125;</span><br><span class="line"></span><br><span class="line"># 使用标签插件，引用资源，图片放在source&#x2F;img文件夹</span><br><span class="line">![](&#x2F;img&#x2F;01.png)</span><br><span class="line"></span><br><span class="line">&#123;% img &#x2F;img&#x2F;01.png 100 100 &quot;图片1&quot; %&#125;</span><br></pre></td></tr></table></figure><h2 id="拓展"><a href="#拓展" class="headerlink" title="拓展"></a>拓展</h2><p><a href="http://blog.haoji.me/build-blog-website-by-hexo-github.html?from=xa" target="_blank" rel="noopener">使用hexo+github搭建免费个人博客详细教程</a></p><p><a href="https://blog.csdn.net/u011475210/article/details/79023429" target="_blank" rel="noopener">从jekyll到hexo</a></p><p><a href="https://www.jianshu.com/p/68e727dda16d" target="_blank" rel="noopener">如何优雅地发布Hexo博客</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>01入门</title>
      <link href="/2019/11/06/01%E5%85%A5%E9%97%A8/"/>
      <url>/2019/11/06/01%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<p>1、下载安装包</p><p><a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">https://nodejs.org/en/download/</a></p><a id="more"></a><p>2、双击进行安装，修改安装目录。默认安装路径已添加到环境变量</p><p>3、控制台输入以下命令检验是否安装成功</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;node -v</span><br><span class="line">v10.16.3</span><br><span class="line"></span><br><span class="line">C:\Users\longlong&gt;npm -v</span><br><span class="line">6.9.0</span><br></pre></td></tr></table></figure><p>4、配置npm在安装全局模块时的路径和缓存cache的路径</p><p>查看现有设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;npm config get prefix</span><br><span class="line">C:\Users\longlong&gt;npm config get cache</span><br></pre></td></tr></table></figure><p>设置对应目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;npm config set prefix &quot;D:\nodejs\node_modules\node_global&quot;</span><br><span class="line">C:\Users\longlong&gt;npm config set cache &quot;D:\nodejs\node_modules\node_cache&quot;</span><br></pre></td></tr></table></figure><p>在D:\nodejs\node_modules\node_global目录下</p><ul><li>node_modules文件夹中会放置安装的各个模块<ul><li>每个模块的bin目录也会放置cmd命令脚本</li></ul></li><li>各模块的cmd命令脚本</li></ul><p>npm帮助</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm --help</span><br></pre></td></tr></table></figure><p>5、Express应用程序</p><p>Express是一个非常流行的应用程序框架，用于构建和运行Node.js应用程序。您可以使用Express Generator工具构建（创建）新的Express应用程序。Express Generator作为npm模块提供，并使用npm命令行工具进行安装npm。</p><p>全局安装express-generator</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;npm install -g express-generator</span><br><span class="line">D:\nodejs\node_modules\node_global\express -&gt; D:\nodejs\node_modules\node_global\node_modules\express-generator\bin\express-cli.js</span><br><span class="line">+ express-generator@4.16.1</span><br><span class="line">added 10 packages from 13 contributors in 21.383s</span><br></pre></td></tr></table></figure><p>通过运行脚手架来构建一个新的Express应用程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">D:\nodejs&gt;express myExpressApp --view pug</span><br><span class="line"></span><br><span class="line">   create : myExpressApp\</span><br><span class="line">   create : myExpressApp\public\</span><br><span class="line">   create : myExpressApp\public\javascripts\</span><br><span class="line">   create : myExpressApp\public\images\</span><br><span class="line">   create : myExpressApp\public\stylesheets\</span><br><span class="line">   create : myExpressApp\public\stylesheets\style.css</span><br><span class="line">   create : myExpressApp\routes\</span><br><span class="line">   create : myExpressApp\routes\index.js</span><br><span class="line">   create : myExpressApp\routes\users.js</span><br><span class="line">   create : myExpressApp\views\</span><br><span class="line">   create : myExpressApp\views\error.pug</span><br><span class="line">   create : myExpressApp\views\index.pug</span><br><span class="line">   create : myExpressApp\views\layout.pug</span><br><span class="line">   create : myExpressApp\app.js</span><br><span class="line">   create : myExpressApp\package.json</span><br><span class="line">   create : myExpressApp\bin\</span><br><span class="line">   create : myExpressApp\bin\www</span><br><span class="line"></span><br><span class="line">   change directory:</span><br><span class="line">     &gt; cd myExpressApp</span><br><span class="line"></span><br><span class="line">   install dependencies:</span><br><span class="line">     &gt; npm install</span><br><span class="line"></span><br><span class="line">   run the app:</span><br><span class="line">     &gt; SET DEBUG&#x3D;myexpressapp:* &amp; npm start</span><br></pre></td></tr></table></figure><p>安装依赖</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">D:\nodejs&gt;cd myExpressApp</span><br><span class="line"></span><br><span class="line">D:\nodejs\myExpressApp&gt;npm install</span><br></pre></td></tr></table></figure><p>运行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">D:\nodejs\myExpressApp&gt;npm start</span><br><span class="line"></span><br><span class="line">&gt; myexpressapp@0.0.0 start D:\nodejs\myExpressApp</span><br><span class="line">&gt; node .&#x2F;bin&#x2F;www</span><br></pre></td></tr></table></figure><p>Node.js Web服务器将启动后，您可以在浏览器中访问下面的网址进行查看：<a href="http://localhost:3000/" target="_blank" rel="noopener">http://localhost:3000/</a></p><p>按Ctrl + C停止Node.js服务器</p><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>1、无法执行npm安装，提示主机名/IP与证书的altnames不匹配。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;npm install -g express-generator</span><br><span class="line">npm ERR! code ERR_TLS_CERT_ALTNAME_INVALID</span><br><span class="line">npm ERR! errno ERR_TLS_CERT_ALTNAME_INVALID</span><br><span class="line">npm ERR! request to https:&#x2F;&#x2F;registry.npmjs.org&#x2F;express-generator failed, reason: Hostname&#x2F;IP does not match certificate&#39;s altnames: Host: registry.npm.taobao.org. is not in the cert&#39;s altnames: DNS:img.ucdl.pp.uc.cn...省略</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found in:</span><br><span class="line">npm ERR!     D:\nodejs\node_modules\node_cache\_logs\2019-09-20T03_04_08_100Z-debug.log</span><br></pre></td></tr></table></figure><p>解决思路：在控制台或者日志文件中查看报错信息，找出错误原因。</p><p>移除淘宝代理</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\longlong&gt;  npm config set proxy null</span><br><span class="line">C:\Users\longlong&gt;npm config set https-proxy null</span><br><span class="line"></span><br><span class="line">C:\Users\longlong&gt;npm config get proxy</span><br><span class="line">null</span><br><span class="line">C:\Users\longlong&gt;npm config get https-proxy</span><br><span class="line">null</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://code.visualstudio.com/docs/nodejs/nodejs-tutorial" target="_blank" rel="noopener">Visual Studio Code中的Node.js教程</a></p><p><a href="https://blog.csdn.net/antma/article/details/86104068" target="_blank" rel="noopener">node.js 安装详细步骤教程</a></p><p><a href="https://www.jianshu.com/p/38e3b6fe5f7a?tdsourcetag=s_pcqq_aiomsg" target="_blank" rel="noopener">Node安装及修改默认全局模块安装路径</a></p><p><a href="https://www.jianshu.com/p/a1bb4c317c3e" target="_blank" rel="noopener">NPM安装及使用</a></p>]]></content>
      
      
      <categories>
          
          <category> 前端知识 </category>
          
          <category> node </category>
          
      </categories>
      
      
        <tags>
            
            <tag> nodejs </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
